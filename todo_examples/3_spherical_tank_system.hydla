INIT <=> h1 = h2 = 0.15 & h3 = 0.14.
FLOW1 <=> [](Pi*h1*(0.6 - h1)*h1' = (q1 - v13*q13v13 -v1*q13v1 -vL1*qL1)).
FLOW2 <=> [](Pi*h2*(0.6 - h2)*h2' = (q2 - v23*q23v23 - v2*q23v2)).
FLOW3 <=> [](Pi*h3*(0.6 - h3)*h3' = (v13*q13v13 + v23*q23v23 + v1*q13v1 + v2*q23v2 - vN3*qN)).
INTERMEDIATE <=> [](
               (h1 >= h3 => (q13v13 = 0.95*(2*9.8*(h1-h3))^(1/2)))
             & (h1 < h3 => (q13v13 = -0.95*(2*9.8*(h3-h1))^(1/2)))
             & (h2 >= h3 => (q23v23 = 0.95*(2*9.8*(h2-h3))^(1/2)))
             & (h2 < h3 => (q23v23 = -0.95*(2*9.8*(h3-h2))^(1/2)))
             & qL1 = 0.95*(2*9.8*h1)^(1/2)
             & qN = 0.95*(2*9.8*h3)^(1/2)
             & (h1 >= 0.3 => maxh1hv = h1)   // max(h1, hv)
             & (h1 < 0.3 => maxh1hv = 0.3)
             & (h2 >= 0.3 => maxh2hv = h2)    // max(h2, hv)
             & (h2 < 0.3 => maxh2hv = 0.3)     
             & (h3 >= 0.3 => maxh3hv = h3)    // max(h3, hv)
             & (h3 < 0.3 => maxh3hv = 0.3)
             & (maxh1hv >= maxh3hv => (q13v1 = 0.95*(2*9.8*(maxh1hv-maxh3hv))^(1/2)))
             & (maxh1hv < maxh3hv => (q13v1 = -0.95*(2*9.8*(maxh1hv-maxh3hv))^(1/2)))
             & (maxh2hv >= maxh3hv => (q23v2 = 0.95*(2*9.8*(maxh2hv-maxh3hv))^(1/2)))
             & (maxh2hv < maxh3hv => (q23v2 = -0.95*(2*9.8*(maxh2hv-maxh3hv))^(1/2)))
).
INPUT <=> [](q1=q2=0&v23=v1=v2=vL1=vN3=0&v13=1).

INIT, FLOW1, FLOW2, FLOW3, INTERMEDIATE, INPUT.



/*
CONSTANT <=> [](hv = 0.3 & hmax = 0.6 & S1 = S2 = S13 = S23 = SL1 = SN = 0.95 & az = 1 & g = 9.8).
INIT <=> h1 = h2 = 0.15 & h3 = 0.14.
FLOW1 <=> [](Pi*h1*(hmax - h1)*h1' = (q1 - v13*q13v13 -v1*q13v1 -vL1qL1)).
FLOW2 <=> [](Pi*h2*(hmax - h2)*h2' = (q2 - v23*q23v23 - v2q23v2)).
FLOW3 <=> [](Pi*h3*(hmax - h3)*h3' = (v13*q13v13 + v23*q23v23 + v1*q13v1 + v2*q23v2 - vN3*qN)).
INTERMEDIATE <=> [](
               (h1 >= h3 => (q13v13 = az*S13*(2*g*(h1-h3))^(1/2)))
             & (h1 < h3 => (q13v13 = -az*S13*(2*g*(h3-h1))^(1/2)))
             & (h2 >= h3 => (q23v23 = az*S23*(2*g*(h2-h3))^(1/2)))
             & (h2 < h3 => (q23v23 = -az*S23*(2*g*(h3-h2))^(1/2)))
             & qL1 = az*SL1*(2*g*h1)^(1/2)
             & qN = az*SN*(2*g*h3)^(1/2)
             & (h1 >= hv => maxh1hv = h1)   // max(h1, hv)
             & (h1 < hv => maxh1hv = hv)
             & (h2 >= hv => maxh2hv = h2)    // max(h2, hv)
             & (h2 < hv => maxh2hv = hv)     
             & (h3 >= hv => maxh3hv = h3)    // max(h3, hv)
             & (h3 < hv => maxh3hv = hv)
             & (maxh1hv >= maxh3hv => (q13v1 = az*S1*(2*g*(maxh1hv-maxh3hv))^(1/2)))
             & (maxh1hv < maxh3hv => (q13v1 = -az*S1*(2*g*(maxh1hv-maxh3hv))^(1/2)))
             & (maxh2hv >= maxh3hv => (q23v2 = az*S2*(2*g*(maxh2hv-maxh3hv))^(1/2)))
             & (maxh2hv < maxh3hv => (q23v2 = -az*S2*(2*g*(maxh2hv-maxh3hv))^(1/2)))
).
INPUT <=> [](q1=q2=0&v13=v23=v1=v2=vL1=vN3=0).

CONSTANT, INIT, FLOW1, FLOW2, FLOW3, INTERMEDIATE, INPUT.
*/
