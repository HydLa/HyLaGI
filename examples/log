@ParseTree.cpp 54 function: parse   
--- Parse Tree ---
--- node_tree ---
Parallel[Parallel[Parallel[Constraint[ConstraintCall<INIT(ExpressionListElement[expression_list_call<X()>,Number[1]],ExpressionListElement[expression_list_call<Y()>,Number[1]],Number[0],Number[0],Number[10],Number[1])>],ConditionalProgramList[Constraint[ConstraintCall<INIT(ExpressionListElement[expression_list_call<X()>,Variable[i]],ExpressionListElement[expression_list_call<Y()>,Variable[i]],Times[Number[5],Variable[i]],Times[Number[5],Variable[i]],Number[0],Number[0])>]][EachElement[Variable[i],Range[][Number[1],SizeOfList[expression_list_call<X()>]]], DifferentVariable[ExpressionListElement[expression_list_call<X()>,Variable[i]],ExpressionListElement[expression_list_call<X()>,Number[1]]], DifferentVariable[ExpressionListElement[expression_list_call<Y()>,Variable[i]],ExpressionListElement[expression_list_call<Y()>,Number[1]]]]],ConditionalProgramList[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(ExpressionListElement[expression_list_call<X()>,Variable[i]])>],Constraint[ConstraintCall<CONST(ExpressionListElement[expression_list_call<Y()>,Variable[i]])>]],Constraint[ConstraintCall<CONST(ExpressionListElement[expression_list_call<X()>,Variable[j]])>]],Constraint[ConstraintCall<CONST(ExpressionListElement[expression_list_call<Y()>,Variable[j]])>]],Constraint[ConstraintCall<COL(ExpressionListElement[expression_list_call<X()>,Variable[i]],ExpressionListElement[expression_list_call<Y()>,Variable[i]],ExpressionListElement[expression_list_call<X()>,Variable[j]],ExpressionListElement[expression_list_call<Y()>,Variable[j]],Number[1])>]]][EachElement[Variable[i],Range[][Number[1],Subtract[SizeOfList[expression_list_call<X()>],Number[1]]]], EachElement[Variable[j],Range[][Plus[Variable[i],Number[1]],SizeOfList[expression_list_call<X()>]]]]],ConditionalProgramList[Weaker[Constraint[ConstraintCall<CONST(Variable[p])>],Constraint[ConstraintCall<WALL(Variable[p],Number[1])>]]][EachElement[Variable[p],Union[expression_list_call<X()>,expression_list_call<Y()>]]]]
--- variables ---

@ParseTree.cpp 55 function: parse   
--- Constraint Definition ---
key: COL<5> val: COL(px1,py1,px2,py2,e):=Constraint[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[px1]],Previous[Variable[px2]]],Number[2]],Power[Subtract[Previous[Variable[py1]],Previous[Variable[py2]]],Number[2]]],Number[4]],Constraint[LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[px1]],Subtract[Previous[Variable[px1]],Previous[Variable[px2]]]],Times[Differential[Variable[py1]],Subtract[Previous[Variable[py1]],Previous[Variable[py2]]]]],Times[Previous[Variable[e]],Plus[Times[Previous[Differential[Variable[px2]]],Subtract[Previous[Variable[px1]],Previous[Variable[px2]]]],Times[Previous[Differential[Variable[py2]]],Subtract[Previous[Variable[py1]],Previous[Variable[py2]]]]]]],Equal[Times[Previous[Variable[e]],Plus[Times[Previous[Differential[Variable[px1]]],Subtract[Previous[Variable[px1]],Previous[Variable[px2]]]],Times[Previous[Differential[Variable[py1]]],Subtract[Previous[Variable[py1]],Previous[Variable[py2]]]]]],Plus[Times[Differential[Variable[px2]],Subtract[Previous[Variable[px1]],Previous[Variable[px2]]]],Times[Differential[Variable[py2]],Subtract[Previous[Variable[py1]],Previous[Variable[py2]]]]]]],Equal[Subtract[Times[Differential[Variable[px1]],Subtract[Previous[Variable[py1]],Previous[Variable[py2]]]],Times[Differential[Variable[py1]],Subtract[Previous[Variable[px1]],Previous[Variable[px2]]]]],Subtract[Times[Previous[Differential[Variable[px1]]],Subtract[Previous[Variable[py1]],Previous[Variable[py2]]]],Times[Previous[Differential[Variable[py1]]],Subtract[Previous[Variable[px1]],Previous[Variable[px2]]]]]]],Equal[Subtract[Times[Differential[Variable[px2]],Subtract[Previous[Variable[py1]],Previous[Variable[py2]]]],Times[Differential[Variable[py2]],Subtract[Previous[Variable[px1]],Previous[Variable[px2]]]]],Subtract[Times[Previous[Differential[Variable[px2]]],Subtract[Previous[Variable[py1]],Previous[Variable[py2]]]],Times[Previous[Differential[Variable[py2]]],Subtract[Previous[Variable[px1]],Previous[Variable[px2]]]]]]]]]]]
key: CONST<1> val: CONST(p):=Constraint[Always[Equal[Differential[Differential[Variable[p]]],Number[0]]]]
key: INIT<6> val: INIT(x,y,x0,y0,vx0,vy0):=Constraint[LogicalAnd[LogicalAnd[LogicalAnd[Equal[Variable[x],Variable[x0]],Equal[Variable[y],Variable[y0]]],Equal[Differential[Variable[x]],Variable[vx0]]],Equal[Differential[Variable[y]],Variable[vy0]]]]
key: WALL<2> val: WALL(b,e):=Constraint[Always[Ask[LogicalOr[Equal[Subtract[Previous[Variable[b]],Number[1]],Negative[Number[10]]],Equal[Times[Number[10],SizeOfList[expression_list_call<X()>]],Plus[Previous[Variable[b]],Number[1]]]],Constraint[Equal[Differential[Variable[b]],Times[Negative[Variable[e]],Previous[Differential[Variable[b]]]]]]]]]

@ParseTree.cpp 56 function: parse   
--- Program Definition ---

@ParseTree.cpp 57 function: parse   
--- Expression List Definition ---
key: X<0> val: X():=Range[x][Number[0],Number[9]]
key: Y<0> val: Y():=Range[y][Number[0],Number[9]]

@ParseTree.cpp 58 function: parse   
--- Program List Definition ---

@ParseTree.cpp 64 function: parse   
--- Analyzed Parse Tree ---
--- node_tree ---
Parallel[Parallel[Parallel[Constraint[ConstraintCall<INIT(Variable[x0],Variable[y0],Number[0],Number[0],Number[10],Number[1])>[LogicalAnd[LogicalAnd[LogicalAnd[Equal[Variable[x0],Number[0]],Equal[Variable[y0],Number[0]]],Equal[Differential[Variable[x0]],Number[10]]],Equal[Differential[Variable[y0]],Number[1]]]]],Parallel[Parallel[Parallel[Parallel[Constraint[ConstraintCall<INIT(Variable[x1],Variable[y1],Times[Number[5],Number[2]],Times[Number[5],Number[2]],Number[0],Number[0])>[LogicalAnd[LogicalAnd[LogicalAnd[Equal[Variable[x1],Times[Number[5],Number[2]]],Equal[Variable[y1],Times[Number[5],Number[2]]]],Equal[Differential[Variable[x1]],Number[0]]],Equal[Differential[Variable[y1]],Number[0]]]]],Constraint[ConstraintCall<INIT(Variable[x2],Variable[y2],Times[Number[5],Number[3]],Times[Number[5],Number[3]],Number[0],Number[0])>[LogicalAnd[LogicalAnd[LogicalAnd[Equal[Variable[x2],Times[Number[5],Number[3]]],Equal[Variable[y2],Times[Number[5],Number[3]]]],Equal[Differential[Variable[x2]],Number[0]]],Equal[Differential[Variable[y2]],Number[0]]]]]],Parallel[Constraint[ConstraintCall<INIT(Variable[x3],Variable[y3],Times[Number[5],Number[4]],Times[Number[5],Number[4]],Number[0],Number[0])>[LogicalAnd[LogicalAnd[LogicalAnd[Equal[Variable[x3],Times[Number[5],Number[4]]],Equal[Variable[y3],Times[Number[5],Number[4]]]],Equal[Differential[Variable[x3]],Number[0]]],Equal[Differential[Variable[y3]],Number[0]]]]],Constraint[ConstraintCall<INIT(Variable[x4],Variable[y4],Times[Number[5],Number[5]],Times[Number[5],Number[5]],Number[0],Number[0])>[LogicalAnd[LogicalAnd[LogicalAnd[Equal[Variable[x4],Times[Number[5],Number[5]]],Equal[Variable[y4],Times[Number[5],Number[5]]]],Equal[Differential[Variable[x4]],Number[0]]],Equal[Differential[Variable[y4]],Number[0]]]]]]],Parallel[Parallel[Constraint[ConstraintCall<INIT(Variable[x5],Variable[y5],Times[Number[5],Number[6]],Times[Number[5],Number[6]],Number[0],Number[0])>[LogicalAnd[LogicalAnd[LogicalAnd[Equal[Variable[x5],Times[Number[5],Number[6]]],Equal[Variable[y5],Times[Number[5],Number[6]]]],Equal[Differential[Variable[x5]],Number[0]]],Equal[Differential[Variable[y5]],Number[0]]]]],Constraint[ConstraintCall<INIT(Variable[x6],Variable[y6],Times[Number[5],Number[7]],Times[Number[5],Number[7]],Number[0],Number[0])>[LogicalAnd[LogicalAnd[LogicalAnd[Equal[Variable[x6],Times[Number[5],Number[7]]],Equal[Variable[y6],Times[Number[5],Number[7]]]],Equal[Differential[Variable[x6]],Number[0]]],Equal[Differential[Variable[y6]],Number[0]]]]]],Parallel[Constraint[ConstraintCall<INIT(Variable[x7],Variable[y7],Times[Number[5],Number[8]],Times[Number[5],Number[8]],Number[0],Number[0])>[LogicalAnd[LogicalAnd[LogicalAnd[Equal[Variable[x7],Times[Number[5],Number[8]]],Equal[Variable[y7],Times[Number[5],Number[8]]]],Equal[Differential[Variable[x7]],Number[0]]],Equal[Differential[Variable[y7]],Number[0]]]]],Constraint[ConstraintCall<INIT(Variable[x8],Variable[y8],Times[Number[5],Number[9]],Times[Number[5],Number[9]],Number[0],Number[0])>[LogicalAnd[LogicalAnd[LogicalAnd[Equal[Variable[x8],Times[Number[5],Number[9]]],Equal[Variable[y8],Times[Number[5],Number[9]]]],Equal[Differential[Variable[x8]],Number[0]]],Equal[Differential[Variable[y8]],Number[0]]]]]]]],Constraint[ConstraintCall<INIT(Variable[x9],Variable[y9],Times[Number[5],Number[10]],Times[Number[5],Number[10]],Number[0],Number[0])>[LogicalAnd[LogicalAnd[LogicalAnd[Equal[Variable[x9],Times[Number[5],Number[10]]],Equal[Variable[y9],Times[Number[5],Number[10]]]],Equal[Differential[Variable[x9]],Number[0]]],Equal[Differential[Variable[y9]],Number[0]]]]]]],Parallel[Parallel[Parallel[Parallel[Parallel[Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x0])>[Always[Equal[Differential[Differential[Variable[x0]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y0])>[Always[Equal[Differential[Differential[Variable[y0]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x1])>[Always[Equal[Differential[Differential[Variable[x1]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y1])>[Always[Equal[Differential[Differential[Variable[y1]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x0],Variable[y0],Variable[x1],Variable[y1],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x0]],Previous[Variable[x1]]],Number[2]],Power[Subtract[Previous[Variable[y0]],Previous[Variable[y1]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x0]],Subtract[Previous[Variable[x0]],Previous[Variable[x1]]]],Times[Differential[Variable[y0]],Subtract[Previous[Variable[y0]],Previous[Variable[y1]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x1]]],Subtract[Previous[Variable[x0]],Previous[Variable[x1]]]],Times[Previous[Differential[Variable[y1]]],Subtract[Previous[Variable[y0]],Previous[Variable[y1]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x0]]],Subtract[Previous[Variable[x0]],Previous[Variable[x1]]]],Times[Previous[Differential[Variable[y0]]],Subtract[Previous[Variable[y0]],Previous[Variable[y1]]]]]],Plus[Times[Differential[Variable[x1]],Subtract[Previous[Variable[x0]],Previous[Variable[x1]]]],Times[Differential[Variable[y1]],Subtract[Previous[Variable[y0]],Previous[Variable[y1]]]]]]],Equal[Subtract[Times[Differential[Variable[x0]],Subtract[Previous[Variable[y0]],Previous[Variable[y1]]]],Times[Differential[Variable[y0]],Subtract[Previous[Variable[x0]],Previous[Variable[x1]]]]],Subtract[Times[Previous[Differential[Variable[x0]]],Subtract[Previous[Variable[y0]],Previous[Variable[y1]]]],Times[Previous[Differential[Variable[y0]]],Subtract[Previous[Variable[x0]],Previous[Variable[x1]]]]]]],Equal[Subtract[Times[Differential[Variable[x1]],Subtract[Previous[Variable[y0]],Previous[Variable[y1]]]],Times[Differential[Variable[y1]],Subtract[Previous[Variable[x0]],Previous[Variable[x1]]]]],Subtract[Times[Previous[Differential[Variable[x1]]],Subtract[Previous[Variable[y0]],Previous[Variable[y1]]]],Times[Previous[Differential[Variable[y1]]],Subtract[Previous[Variable[x0]],Previous[Variable[x1]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x0])>[Always[Equal[Differential[Differential[Variable[x0]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y0])>[Always[Equal[Differential[Differential[Variable[y0]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x2])>[Always[Equal[Differential[Differential[Variable[x2]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y2])>[Always[Equal[Differential[Differential[Variable[y2]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x0],Variable[y0],Variable[x2],Variable[y2],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x0]],Previous[Variable[x2]]],Number[2]],Power[Subtract[Previous[Variable[y0]],Previous[Variable[y2]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x0]],Subtract[Previous[Variable[x0]],Previous[Variable[x2]]]],Times[Differential[Variable[y0]],Subtract[Previous[Variable[y0]],Previous[Variable[y2]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x2]]],Subtract[Previous[Variable[x0]],Previous[Variable[x2]]]],Times[Previous[Differential[Variable[y2]]],Subtract[Previous[Variable[y0]],Previous[Variable[y2]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x0]]],Subtract[Previous[Variable[x0]],Previous[Variable[x2]]]],Times[Previous[Differential[Variable[y0]]],Subtract[Previous[Variable[y0]],Previous[Variable[y2]]]]]],Plus[Times[Differential[Variable[x2]],Subtract[Previous[Variable[x0]],Previous[Variable[x2]]]],Times[Differential[Variable[y2]],Subtract[Previous[Variable[y0]],Previous[Variable[y2]]]]]]],Equal[Subtract[Times[Differential[Variable[x0]],Subtract[Previous[Variable[y0]],Previous[Variable[y2]]]],Times[Differential[Variable[y0]],Subtract[Previous[Variable[x0]],Previous[Variable[x2]]]]],Subtract[Times[Previous[Differential[Variable[x0]]],Subtract[Previous[Variable[y0]],Previous[Variable[y2]]]],Times[Previous[Differential[Variable[y0]]],Subtract[Previous[Variable[x0]],Previous[Variable[x2]]]]]]],Equal[Subtract[Times[Differential[Variable[x2]],Subtract[Previous[Variable[y0]],Previous[Variable[y2]]]],Times[Differential[Variable[y2]],Subtract[Previous[Variable[x0]],Previous[Variable[x2]]]]],Subtract[Times[Previous[Differential[Variable[x2]]],Subtract[Previous[Variable[y0]],Previous[Variable[y2]]]],Times[Previous[Differential[Variable[y2]]],Subtract[Previous[Variable[x0]],Previous[Variable[x2]]]]]]]]]]]]],Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x0])>[Always[Equal[Differential[Differential[Variable[x0]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y0])>[Always[Equal[Differential[Differential[Variable[y0]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x3])>[Always[Equal[Differential[Differential[Variable[x3]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y3])>[Always[Equal[Differential[Differential[Variable[y3]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x0],Variable[y0],Variable[x3],Variable[y3],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x0]],Previous[Variable[x3]]],Number[2]],Power[Subtract[Previous[Variable[y0]],Previous[Variable[y3]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x0]],Subtract[Previous[Variable[x0]],Previous[Variable[x3]]]],Times[Differential[Variable[y0]],Subtract[Previous[Variable[y0]],Previous[Variable[y3]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x3]]],Subtract[Previous[Variable[x0]],Previous[Variable[x3]]]],Times[Previous[Differential[Variable[y3]]],Subtract[Previous[Variable[y0]],Previous[Variable[y3]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x0]]],Subtract[Previous[Variable[x0]],Previous[Variable[x3]]]],Times[Previous[Differential[Variable[y0]]],Subtract[Previous[Variable[y0]],Previous[Variable[y3]]]]]],Plus[Times[Differential[Variable[x3]],Subtract[Previous[Variable[x0]],Previous[Variable[x3]]]],Times[Differential[Variable[y3]],Subtract[Previous[Variable[y0]],Previous[Variable[y3]]]]]]],Equal[Subtract[Times[Differential[Variable[x0]],Subtract[Previous[Variable[y0]],Previous[Variable[y3]]]],Times[Differential[Variable[y0]],Subtract[Previous[Variable[x0]],Previous[Variable[x3]]]]],Subtract[Times[Previous[Differential[Variable[x0]]],Subtract[Previous[Variable[y0]],Previous[Variable[y3]]]],Times[Previous[Differential[Variable[y0]]],Subtract[Previous[Variable[x0]],Previous[Variable[x3]]]]]]],Equal[Subtract[Times[Differential[Variable[x3]],Subtract[Previous[Variable[y0]],Previous[Variable[y3]]]],Times[Differential[Variable[y3]],Subtract[Previous[Variable[x0]],Previous[Variable[x3]]]]],Subtract[Times[Previous[Differential[Variable[x3]]],Subtract[Previous[Variable[y0]],Previous[Variable[y3]]]],Times[Previous[Differential[Variable[y3]]],Subtract[Previous[Variable[x0]],Previous[Variable[x3]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x0])>[Always[Equal[Differential[Differential[Variable[x0]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y0])>[Always[Equal[Differential[Differential[Variable[y0]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x4])>[Always[Equal[Differential[Differential[Variable[x4]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y4])>[Always[Equal[Differential[Differential[Variable[y4]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x0],Variable[y0],Variable[x4],Variable[y4],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x0]],Previous[Variable[x4]]],Number[2]],Power[Subtract[Previous[Variable[y0]],Previous[Variable[y4]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x0]],Subtract[Previous[Variable[x0]],Previous[Variable[x4]]]],Times[Differential[Variable[y0]],Subtract[Previous[Variable[y0]],Previous[Variable[y4]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x4]]],Subtract[Previous[Variable[x0]],Previous[Variable[x4]]]],Times[Previous[Differential[Variable[y4]]],Subtract[Previous[Variable[y0]],Previous[Variable[y4]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x0]]],Subtract[Previous[Variable[x0]],Previous[Variable[x4]]]],Times[Previous[Differential[Variable[y0]]],Subtract[Previous[Variable[y0]],Previous[Variable[y4]]]]]],Plus[Times[Differential[Variable[x4]],Subtract[Previous[Variable[x0]],Previous[Variable[x4]]]],Times[Differential[Variable[y4]],Subtract[Previous[Variable[y0]],Previous[Variable[y4]]]]]]],Equal[Subtract[Times[Differential[Variable[x0]],Subtract[Previous[Variable[y0]],Previous[Variable[y4]]]],Times[Differential[Variable[y0]],Subtract[Previous[Variable[x0]],Previous[Variable[x4]]]]],Subtract[Times[Previous[Differential[Variable[x0]]],Subtract[Previous[Variable[y0]],Previous[Variable[y4]]]],Times[Previous[Differential[Variable[y0]]],Subtract[Previous[Variable[x0]],Previous[Variable[x4]]]]]]],Equal[Subtract[Times[Differential[Variable[x4]],Subtract[Previous[Variable[y0]],Previous[Variable[y4]]]],Times[Differential[Variable[y4]],Subtract[Previous[Variable[x0]],Previous[Variable[x4]]]]],Subtract[Times[Previous[Differential[Variable[x4]]],Subtract[Previous[Variable[y0]],Previous[Variable[y4]]]],Times[Previous[Differential[Variable[y4]]],Subtract[Previous[Variable[x0]],Previous[Variable[x4]]]]]]]]]]]]]],Parallel[Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x0])>[Always[Equal[Differential[Differential[Variable[x0]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y0])>[Always[Equal[Differential[Differential[Variable[y0]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x5])>[Always[Equal[Differential[Differential[Variable[x5]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y5])>[Always[Equal[Differential[Differential[Variable[y5]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x0],Variable[y0],Variable[x5],Variable[y5],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x0]],Previous[Variable[x5]]],Number[2]],Power[Subtract[Previous[Variable[y0]],Previous[Variable[y5]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x0]],Subtract[Previous[Variable[x0]],Previous[Variable[x5]]]],Times[Differential[Variable[y0]],Subtract[Previous[Variable[y0]],Previous[Variable[y5]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x5]]],Subtract[Previous[Variable[x0]],Previous[Variable[x5]]]],Times[Previous[Differential[Variable[y5]]],Subtract[Previous[Variable[y0]],Previous[Variable[y5]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x0]]],Subtract[Previous[Variable[x0]],Previous[Variable[x5]]]],Times[Previous[Differential[Variable[y0]]],Subtract[Previous[Variable[y0]],Previous[Variable[y5]]]]]],Plus[Times[Differential[Variable[x5]],Subtract[Previous[Variable[x0]],Previous[Variable[x5]]]],Times[Differential[Variable[y5]],Subtract[Previous[Variable[y0]],Previous[Variable[y5]]]]]]],Equal[Subtract[Times[Differential[Variable[x0]],Subtract[Previous[Variable[y0]],Previous[Variable[y5]]]],Times[Differential[Variable[y0]],Subtract[Previous[Variable[x0]],Previous[Variable[x5]]]]],Subtract[Times[Previous[Differential[Variable[x0]]],Subtract[Previous[Variable[y0]],Previous[Variable[y5]]]],Times[Previous[Differential[Variable[y0]]],Subtract[Previous[Variable[x0]],Previous[Variable[x5]]]]]]],Equal[Subtract[Times[Differential[Variable[x5]],Subtract[Previous[Variable[y0]],Previous[Variable[y5]]]],Times[Differential[Variable[y5]],Subtract[Previous[Variable[x0]],Previous[Variable[x5]]]]],Subtract[Times[Previous[Differential[Variable[x5]]],Subtract[Previous[Variable[y0]],Previous[Variable[y5]]]],Times[Previous[Differential[Variable[y5]]],Subtract[Previous[Variable[x0]],Previous[Variable[x5]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x0])>[Always[Equal[Differential[Differential[Variable[x0]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y0])>[Always[Equal[Differential[Differential[Variable[y0]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x6])>[Always[Equal[Differential[Differential[Variable[x6]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y6])>[Always[Equal[Differential[Differential[Variable[y6]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x0],Variable[y0],Variable[x6],Variable[y6],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x0]],Previous[Variable[x6]]],Number[2]],Power[Subtract[Previous[Variable[y0]],Previous[Variable[y6]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x0]],Subtract[Previous[Variable[x0]],Previous[Variable[x6]]]],Times[Differential[Variable[y0]],Subtract[Previous[Variable[y0]],Previous[Variable[y6]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x6]]],Subtract[Previous[Variable[x0]],Previous[Variable[x6]]]],Times[Previous[Differential[Variable[y6]]],Subtract[Previous[Variable[y0]],Previous[Variable[y6]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x0]]],Subtract[Previous[Variable[x0]],Previous[Variable[x6]]]],Times[Previous[Differential[Variable[y0]]],Subtract[Previous[Variable[y0]],Previous[Variable[y6]]]]]],Plus[Times[Differential[Variable[x6]],Subtract[Previous[Variable[x0]],Previous[Variable[x6]]]],Times[Differential[Variable[y6]],Subtract[Previous[Variable[y0]],Previous[Variable[y6]]]]]]],Equal[Subtract[Times[Differential[Variable[x0]],Subtract[Previous[Variable[y0]],Previous[Variable[y6]]]],Times[Differential[Variable[y0]],Subtract[Previous[Variable[x0]],Previous[Variable[x6]]]]],Subtract[Times[Previous[Differential[Variable[x0]]],Subtract[Previous[Variable[y0]],Previous[Variable[y6]]]],Times[Previous[Differential[Variable[y0]]],Subtract[Previous[Variable[x0]],Previous[Variable[x6]]]]]]],Equal[Subtract[Times[Differential[Variable[x6]],Subtract[Previous[Variable[y0]],Previous[Variable[y6]]]],Times[Differential[Variable[y6]],Subtract[Previous[Variable[x0]],Previous[Variable[x6]]]]],Subtract[Times[Previous[Differential[Variable[x6]]],Subtract[Previous[Variable[y0]],Previous[Variable[y6]]]],Times[Previous[Differential[Variable[y6]]],Subtract[Previous[Variable[x0]],Previous[Variable[x6]]]]]]]]]]]]],Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x0])>[Always[Equal[Differential[Differential[Variable[x0]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y0])>[Always[Equal[Differential[Differential[Variable[y0]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x7])>[Always[Equal[Differential[Differential[Variable[x7]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y7])>[Always[Equal[Differential[Differential[Variable[y7]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x0],Variable[y0],Variable[x7],Variable[y7],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x0]],Previous[Variable[x7]]],Number[2]],Power[Subtract[Previous[Variable[y0]],Previous[Variable[y7]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x0]],Subtract[Previous[Variable[x0]],Previous[Variable[x7]]]],Times[Differential[Variable[y0]],Subtract[Previous[Variable[y0]],Previous[Variable[y7]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x7]]],Subtract[Previous[Variable[x0]],Previous[Variable[x7]]]],Times[Previous[Differential[Variable[y7]]],Subtract[Previous[Variable[y0]],Previous[Variable[y7]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x0]]],Subtract[Previous[Variable[x0]],Previous[Variable[x7]]]],Times[Previous[Differential[Variable[y0]]],Subtract[Previous[Variable[y0]],Previous[Variable[y7]]]]]],Plus[Times[Differential[Variable[x7]],Subtract[Previous[Variable[x0]],Previous[Variable[x7]]]],Times[Differential[Variable[y7]],Subtract[Previous[Variable[y0]],Previous[Variable[y7]]]]]]],Equal[Subtract[Times[Differential[Variable[x0]],Subtract[Previous[Variable[y0]],Previous[Variable[y7]]]],Times[Differential[Variable[y0]],Subtract[Previous[Variable[x0]],Previous[Variable[x7]]]]],Subtract[Times[Previous[Differential[Variable[x0]]],Subtract[Previous[Variable[y0]],Previous[Variable[y7]]]],Times[Previous[Differential[Variable[y0]]],Subtract[Previous[Variable[x0]],Previous[Variable[x7]]]]]]],Equal[Subtract[Times[Differential[Variable[x7]],Subtract[Previous[Variable[y0]],Previous[Variable[y7]]]],Times[Differential[Variable[y7]],Subtract[Previous[Variable[x0]],Previous[Variable[x7]]]]],Subtract[Times[Previous[Differential[Variable[x7]]],Subtract[Previous[Variable[y0]],Previous[Variable[y7]]]],Times[Previous[Differential[Variable[y7]]],Subtract[Previous[Variable[x0]],Previous[Variable[x7]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x0])>[Always[Equal[Differential[Differential[Variable[x0]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y0])>[Always[Equal[Differential[Differential[Variable[y0]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x8])>[Always[Equal[Differential[Differential[Variable[x8]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y8])>[Always[Equal[Differential[Differential[Variable[y8]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x0],Variable[y0],Variable[x8],Variable[y8],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x0]],Previous[Variable[x8]]],Number[2]],Power[Subtract[Previous[Variable[y0]],Previous[Variable[y8]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x0]],Subtract[Previous[Variable[x0]],Previous[Variable[x8]]]],Times[Differential[Variable[y0]],Subtract[Previous[Variable[y0]],Previous[Variable[y8]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x8]]],Subtract[Previous[Variable[x0]],Previous[Variable[x8]]]],Times[Previous[Differential[Variable[y8]]],Subtract[Previous[Variable[y0]],Previous[Variable[y8]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x0]]],Subtract[Previous[Variable[x0]],Previous[Variable[x8]]]],Times[Previous[Differential[Variable[y0]]],Subtract[Previous[Variable[y0]],Previous[Variable[y8]]]]]],Plus[Times[Differential[Variable[x8]],Subtract[Previous[Variable[x0]],Previous[Variable[x8]]]],Times[Differential[Variable[y8]],Subtract[Previous[Variable[y0]],Previous[Variable[y8]]]]]]],Equal[Subtract[Times[Differential[Variable[x0]],Subtract[Previous[Variable[y0]],Previous[Variable[y8]]]],Times[Differential[Variable[y0]],Subtract[Previous[Variable[x0]],Previous[Variable[x8]]]]],Subtract[Times[Previous[Differential[Variable[x0]]],Subtract[Previous[Variable[y0]],Previous[Variable[y8]]]],Times[Previous[Differential[Variable[y0]]],Subtract[Previous[Variable[x0]],Previous[Variable[x8]]]]]]],Equal[Subtract[Times[Differential[Variable[x8]],Subtract[Previous[Variable[y0]],Previous[Variable[y8]]]],Times[Differential[Variable[y8]],Subtract[Previous[Variable[x0]],Previous[Variable[x8]]]]],Subtract[Times[Previous[Differential[Variable[x8]]],Subtract[Previous[Variable[y0]],Previous[Variable[y8]]]],Times[Previous[Differential[Variable[y8]]],Subtract[Previous[Variable[x0]],Previous[Variable[x8]]]]]]]]]]]]]]],Parallel[Parallel[Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x0])>[Always[Equal[Differential[Differential[Variable[x0]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y0])>[Always[Equal[Differential[Differential[Variable[y0]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x9])>[Always[Equal[Differential[Differential[Variable[x9]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y9])>[Always[Equal[Differential[Differential[Variable[y9]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x0],Variable[y0],Variable[x9],Variable[y9],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x0]],Previous[Variable[x9]]],Number[2]],Power[Subtract[Previous[Variable[y0]],Previous[Variable[y9]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x0]],Subtract[Previous[Variable[x0]],Previous[Variable[x9]]]],Times[Differential[Variable[y0]],Subtract[Previous[Variable[y0]],Previous[Variable[y9]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x9]]],Subtract[Previous[Variable[x0]],Previous[Variable[x9]]]],Times[Previous[Differential[Variable[y9]]],Subtract[Previous[Variable[y0]],Previous[Variable[y9]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x0]]],Subtract[Previous[Variable[x0]],Previous[Variable[x9]]]],Times[Previous[Differential[Variable[y0]]],Subtract[Previous[Variable[y0]],Previous[Variable[y9]]]]]],Plus[Times[Differential[Variable[x9]],Subtract[Previous[Variable[x0]],Previous[Variable[x9]]]],Times[Differential[Variable[y9]],Subtract[Previous[Variable[y0]],Previous[Variable[y9]]]]]]],Equal[Subtract[Times[Differential[Variable[x0]],Subtract[Previous[Variable[y0]],Previous[Variable[y9]]]],Times[Differential[Variable[y0]],Subtract[Previous[Variable[x0]],Previous[Variable[x9]]]]],Subtract[Times[Previous[Differential[Variable[x0]]],Subtract[Previous[Variable[y0]],Previous[Variable[y9]]]],Times[Previous[Differential[Variable[y0]]],Subtract[Previous[Variable[x0]],Previous[Variable[x9]]]]]]],Equal[Subtract[Times[Differential[Variable[x9]],Subtract[Previous[Variable[y0]],Previous[Variable[y9]]]],Times[Differential[Variable[y9]],Subtract[Previous[Variable[x0]],Previous[Variable[x9]]]]],Subtract[Times[Previous[Differential[Variable[x9]]],Subtract[Previous[Variable[y0]],Previous[Variable[y9]]]],Times[Previous[Differential[Variable[y9]]],Subtract[Previous[Variable[x0]],Previous[Variable[x9]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x1])>[Always[Equal[Differential[Differential[Variable[x1]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y1])>[Always[Equal[Differential[Differential[Variable[y1]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x2])>[Always[Equal[Differential[Differential[Variable[x2]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y2])>[Always[Equal[Differential[Differential[Variable[y2]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x1],Variable[y1],Variable[x2],Variable[y2],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x1]],Previous[Variable[x2]]],Number[2]],Power[Subtract[Previous[Variable[y1]],Previous[Variable[y2]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x1]],Subtract[Previous[Variable[x1]],Previous[Variable[x2]]]],Times[Differential[Variable[y1]],Subtract[Previous[Variable[y1]],Previous[Variable[y2]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x2]]],Subtract[Previous[Variable[x1]],Previous[Variable[x2]]]],Times[Previous[Differential[Variable[y2]]],Subtract[Previous[Variable[y1]],Previous[Variable[y2]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x1]]],Subtract[Previous[Variable[x1]],Previous[Variable[x2]]]],Times[Previous[Differential[Variable[y1]]],Subtract[Previous[Variable[y1]],Previous[Variable[y2]]]]]],Plus[Times[Differential[Variable[x2]],Subtract[Previous[Variable[x1]],Previous[Variable[x2]]]],Times[Differential[Variable[y2]],Subtract[Previous[Variable[y1]],Previous[Variable[y2]]]]]]],Equal[Subtract[Times[Differential[Variable[x1]],Subtract[Previous[Variable[y1]],Previous[Variable[y2]]]],Times[Differential[Variable[y1]],Subtract[Previous[Variable[x1]],Previous[Variable[x2]]]]],Subtract[Times[Previous[Differential[Variable[x1]]],Subtract[Previous[Variable[y1]],Previous[Variable[y2]]]],Times[Previous[Differential[Variable[y1]]],Subtract[Previous[Variable[x1]],Previous[Variable[x2]]]]]]],Equal[Subtract[Times[Differential[Variable[x2]],Subtract[Previous[Variable[y1]],Previous[Variable[y2]]]],Times[Differential[Variable[y2]],Subtract[Previous[Variable[x1]],Previous[Variable[x2]]]]],Subtract[Times[Previous[Differential[Variable[x2]]],Subtract[Previous[Variable[y1]],Previous[Variable[y2]]]],Times[Previous[Differential[Variable[y2]]],Subtract[Previous[Variable[x1]],Previous[Variable[x2]]]]]]]]]]]]],Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x1])>[Always[Equal[Differential[Differential[Variable[x1]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y1])>[Always[Equal[Differential[Differential[Variable[y1]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x3])>[Always[Equal[Differential[Differential[Variable[x3]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y3])>[Always[Equal[Differential[Differential[Variable[y3]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x1],Variable[y1],Variable[x3],Variable[y3],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x1]],Previous[Variable[x3]]],Number[2]],Power[Subtract[Previous[Variable[y1]],Previous[Variable[y3]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x1]],Subtract[Previous[Variable[x1]],Previous[Variable[x3]]]],Times[Differential[Variable[y1]],Subtract[Previous[Variable[y1]],Previous[Variable[y3]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x3]]],Subtract[Previous[Variable[x1]],Previous[Variable[x3]]]],Times[Previous[Differential[Variable[y3]]],Subtract[Previous[Variable[y1]],Previous[Variable[y3]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x1]]],Subtract[Previous[Variable[x1]],Previous[Variable[x3]]]],Times[Previous[Differential[Variable[y1]]],Subtract[Previous[Variable[y1]],Previous[Variable[y3]]]]]],Plus[Times[Differential[Variable[x3]],Subtract[Previous[Variable[x1]],Previous[Variable[x3]]]],Times[Differential[Variable[y3]],Subtract[Previous[Variable[y1]],Previous[Variable[y3]]]]]]],Equal[Subtract[Times[Differential[Variable[x1]],Subtract[Previous[Variable[y1]],Previous[Variable[y3]]]],Times[Differential[Variable[y1]],Subtract[Previous[Variable[x1]],Previous[Variable[x3]]]]],Subtract[Times[Previous[Differential[Variable[x1]]],Subtract[Previous[Variable[y1]],Previous[Variable[y3]]]],Times[Previous[Differential[Variable[y1]]],Subtract[Previous[Variable[x1]],Previous[Variable[x3]]]]]]],Equal[Subtract[Times[Differential[Variable[x3]],Subtract[Previous[Variable[y1]],Previous[Variable[y3]]]],Times[Differential[Variable[y3]],Subtract[Previous[Variable[x1]],Previous[Variable[x3]]]]],Subtract[Times[Previous[Differential[Variable[x3]]],Subtract[Previous[Variable[y1]],Previous[Variable[y3]]]],Times[Previous[Differential[Variable[y3]]],Subtract[Previous[Variable[x1]],Previous[Variable[x3]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x1])>[Always[Equal[Differential[Differential[Variable[x1]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y1])>[Always[Equal[Differential[Differential[Variable[y1]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x4])>[Always[Equal[Differential[Differential[Variable[x4]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y4])>[Always[Equal[Differential[Differential[Variable[y4]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x1],Variable[y1],Variable[x4],Variable[y4],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x1]],Previous[Variable[x4]]],Number[2]],Power[Subtract[Previous[Variable[y1]],Previous[Variable[y4]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x1]],Subtract[Previous[Variable[x1]],Previous[Variable[x4]]]],Times[Differential[Variable[y1]],Subtract[Previous[Variable[y1]],Previous[Variable[y4]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x4]]],Subtract[Previous[Variable[x1]],Previous[Variable[x4]]]],Times[Previous[Differential[Variable[y4]]],Subtract[Previous[Variable[y1]],Previous[Variable[y4]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x1]]],Subtract[Previous[Variable[x1]],Previous[Variable[x4]]]],Times[Previous[Differential[Variable[y1]]],Subtract[Previous[Variable[y1]],Previous[Variable[y4]]]]]],Plus[Times[Differential[Variable[x4]],Subtract[Previous[Variable[x1]],Previous[Variable[x4]]]],Times[Differential[Variable[y4]],Subtract[Previous[Variable[y1]],Previous[Variable[y4]]]]]]],Equal[Subtract[Times[Differential[Variable[x1]],Subtract[Previous[Variable[y1]],Previous[Variable[y4]]]],Times[Differential[Variable[y1]],Subtract[Previous[Variable[x1]],Previous[Variable[x4]]]]],Subtract[Times[Previous[Differential[Variable[x1]]],Subtract[Previous[Variable[y1]],Previous[Variable[y4]]]],Times[Previous[Differential[Variable[y1]]],Subtract[Previous[Variable[x1]],Previous[Variable[x4]]]]]]],Equal[Subtract[Times[Differential[Variable[x4]],Subtract[Previous[Variable[y1]],Previous[Variable[y4]]]],Times[Differential[Variable[y4]],Subtract[Previous[Variable[x1]],Previous[Variable[x4]]]]],Subtract[Times[Previous[Differential[Variable[x4]]],Subtract[Previous[Variable[y1]],Previous[Variable[y4]]]],Times[Previous[Differential[Variable[y4]]],Subtract[Previous[Variable[x1]],Previous[Variable[x4]]]]]]]]]]]]]],Parallel[Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x1])>[Always[Equal[Differential[Differential[Variable[x1]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y1])>[Always[Equal[Differential[Differential[Variable[y1]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x5])>[Always[Equal[Differential[Differential[Variable[x5]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y5])>[Always[Equal[Differential[Differential[Variable[y5]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x1],Variable[y1],Variable[x5],Variable[y5],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x1]],Previous[Variable[x5]]],Number[2]],Power[Subtract[Previous[Variable[y1]],Previous[Variable[y5]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x1]],Subtract[Previous[Variable[x1]],Previous[Variable[x5]]]],Times[Differential[Variable[y1]],Subtract[Previous[Variable[y1]],Previous[Variable[y5]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x5]]],Subtract[Previous[Variable[x1]],Previous[Variable[x5]]]],Times[Previous[Differential[Variable[y5]]],Subtract[Previous[Variable[y1]],Previous[Variable[y5]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x1]]],Subtract[Previous[Variable[x1]],Previous[Variable[x5]]]],Times[Previous[Differential[Variable[y1]]],Subtract[Previous[Variable[y1]],Previous[Variable[y5]]]]]],Plus[Times[Differential[Variable[x5]],Subtract[Previous[Variable[x1]],Previous[Variable[x5]]]],Times[Differential[Variable[y5]],Subtract[Previous[Variable[y1]],Previous[Variable[y5]]]]]]],Equal[Subtract[Times[Differential[Variable[x1]],Subtract[Previous[Variable[y1]],Previous[Variable[y5]]]],Times[Differential[Variable[y1]],Subtract[Previous[Variable[x1]],Previous[Variable[x5]]]]],Subtract[Times[Previous[Differential[Variable[x1]]],Subtract[Previous[Variable[y1]],Previous[Variable[y5]]]],Times[Previous[Differential[Variable[y1]]],Subtract[Previous[Variable[x1]],Previous[Variable[x5]]]]]]],Equal[Subtract[Times[Differential[Variable[x5]],Subtract[Previous[Variable[y1]],Previous[Variable[y5]]]],Times[Differential[Variable[y5]],Subtract[Previous[Variable[x1]],Previous[Variable[x5]]]]],Subtract[Times[Previous[Differential[Variable[x5]]],Subtract[Previous[Variable[y1]],Previous[Variable[y5]]]],Times[Previous[Differential[Variable[y5]]],Subtract[Previous[Variable[x1]],Previous[Variable[x5]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x1])>[Always[Equal[Differential[Differential[Variable[x1]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y1])>[Always[Equal[Differential[Differential[Variable[y1]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x6])>[Always[Equal[Differential[Differential[Variable[x6]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y6])>[Always[Equal[Differential[Differential[Variable[y6]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x1],Variable[y1],Variable[x6],Variable[y6],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x1]],Previous[Variable[x6]]],Number[2]],Power[Subtract[Previous[Variable[y1]],Previous[Variable[y6]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x1]],Subtract[Previous[Variable[x1]],Previous[Variable[x6]]]],Times[Differential[Variable[y1]],Subtract[Previous[Variable[y1]],Previous[Variable[y6]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x6]]],Subtract[Previous[Variable[x1]],Previous[Variable[x6]]]],Times[Previous[Differential[Variable[y6]]],Subtract[Previous[Variable[y1]],Previous[Variable[y6]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x1]]],Subtract[Previous[Variable[x1]],Previous[Variable[x6]]]],Times[Previous[Differential[Variable[y1]]],Subtract[Previous[Variable[y1]],Previous[Variable[y6]]]]]],Plus[Times[Differential[Variable[x6]],Subtract[Previous[Variable[x1]],Previous[Variable[x6]]]],Times[Differential[Variable[y6]],Subtract[Previous[Variable[y1]],Previous[Variable[y6]]]]]]],Equal[Subtract[Times[Differential[Variable[x1]],Subtract[Previous[Variable[y1]],Previous[Variable[y6]]]],Times[Differential[Variable[y1]],Subtract[Previous[Variable[x1]],Previous[Variable[x6]]]]],Subtract[Times[Previous[Differential[Variable[x1]]],Subtract[Previous[Variable[y1]],Previous[Variable[y6]]]],Times[Previous[Differential[Variable[y1]]],Subtract[Previous[Variable[x1]],Previous[Variable[x6]]]]]]],Equal[Subtract[Times[Differential[Variable[x6]],Subtract[Previous[Variable[y1]],Previous[Variable[y6]]]],Times[Differential[Variable[y6]],Subtract[Previous[Variable[x1]],Previous[Variable[x6]]]]],Subtract[Times[Previous[Differential[Variable[x6]]],Subtract[Previous[Variable[y1]],Previous[Variable[y6]]]],Times[Previous[Differential[Variable[y6]]],Subtract[Previous[Variable[x1]],Previous[Variable[x6]]]]]]]]]]]]],Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x1])>[Always[Equal[Differential[Differential[Variable[x1]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y1])>[Always[Equal[Differential[Differential[Variable[y1]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x7])>[Always[Equal[Differential[Differential[Variable[x7]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y7])>[Always[Equal[Differential[Differential[Variable[y7]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x1],Variable[y1],Variable[x7],Variable[y7],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x1]],Previous[Variable[x7]]],Number[2]],Power[Subtract[Previous[Variable[y1]],Previous[Variable[y7]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x1]],Subtract[Previous[Variable[x1]],Previous[Variable[x7]]]],Times[Differential[Variable[y1]],Subtract[Previous[Variable[y1]],Previous[Variable[y7]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x7]]],Subtract[Previous[Variable[x1]],Previous[Variable[x7]]]],Times[Previous[Differential[Variable[y7]]],Subtract[Previous[Variable[y1]],Previous[Variable[y7]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x1]]],Subtract[Previous[Variable[x1]],Previous[Variable[x7]]]],Times[Previous[Differential[Variable[y1]]],Subtract[Previous[Variable[y1]],Previous[Variable[y7]]]]]],Plus[Times[Differential[Variable[x7]],Subtract[Previous[Variable[x1]],Previous[Variable[x7]]]],Times[Differential[Variable[y7]],Subtract[Previous[Variable[y1]],Previous[Variable[y7]]]]]]],Equal[Subtract[Times[Differential[Variable[x1]],Subtract[Previous[Variable[y1]],Previous[Variable[y7]]]],Times[Differential[Variable[y1]],Subtract[Previous[Variable[x1]],Previous[Variable[x7]]]]],Subtract[Times[Previous[Differential[Variable[x1]]],Subtract[Previous[Variable[y1]],Previous[Variable[y7]]]],Times[Previous[Differential[Variable[y1]]],Subtract[Previous[Variable[x1]],Previous[Variable[x7]]]]]]],Equal[Subtract[Times[Differential[Variable[x7]],Subtract[Previous[Variable[y1]],Previous[Variable[y7]]]],Times[Differential[Variable[y7]],Subtract[Previous[Variable[x1]],Previous[Variable[x7]]]]],Subtract[Times[Previous[Differential[Variable[x7]]],Subtract[Previous[Variable[y1]],Previous[Variable[y7]]]],Times[Previous[Differential[Variable[y7]]],Subtract[Previous[Variable[x1]],Previous[Variable[x7]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x1])>[Always[Equal[Differential[Differential[Variable[x1]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y1])>[Always[Equal[Differential[Differential[Variable[y1]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x8])>[Always[Equal[Differential[Differential[Variable[x8]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y8])>[Always[Equal[Differential[Differential[Variable[y8]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x1],Variable[y1],Variable[x8],Variable[y8],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x1]],Previous[Variable[x8]]],Number[2]],Power[Subtract[Previous[Variable[y1]],Previous[Variable[y8]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x1]],Subtract[Previous[Variable[x1]],Previous[Variable[x8]]]],Times[Differential[Variable[y1]],Subtract[Previous[Variable[y1]],Previous[Variable[y8]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x8]]],Subtract[Previous[Variable[x1]],Previous[Variable[x8]]]],Times[Previous[Differential[Variable[y8]]],Subtract[Previous[Variable[y1]],Previous[Variable[y8]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x1]]],Subtract[Previous[Variable[x1]],Previous[Variable[x8]]]],Times[Previous[Differential[Variable[y1]]],Subtract[Previous[Variable[y1]],Previous[Variable[y8]]]]]],Plus[Times[Differential[Variable[x8]],Subtract[Previous[Variable[x1]],Previous[Variable[x8]]]],Times[Differential[Variable[y8]],Subtract[Previous[Variable[y1]],Previous[Variable[y8]]]]]]],Equal[Subtract[Times[Differential[Variable[x1]],Subtract[Previous[Variable[y1]],Previous[Variable[y8]]]],Times[Differential[Variable[y1]],Subtract[Previous[Variable[x1]],Previous[Variable[x8]]]]],Subtract[Times[Previous[Differential[Variable[x1]]],Subtract[Previous[Variable[y1]],Previous[Variable[y8]]]],Times[Previous[Differential[Variable[y1]]],Subtract[Previous[Variable[x1]],Previous[Variable[x8]]]]]]],Equal[Subtract[Times[Differential[Variable[x8]],Subtract[Previous[Variable[y1]],Previous[Variable[y8]]]],Times[Differential[Variable[y8]],Subtract[Previous[Variable[x1]],Previous[Variable[x8]]]]],Subtract[Times[Previous[Differential[Variable[x8]]],Subtract[Previous[Variable[y1]],Previous[Variable[y8]]]],Times[Previous[Differential[Variable[y8]]],Subtract[Previous[Variable[x1]],Previous[Variable[x8]]]]]]]]]]]]]]]],Parallel[Parallel[Parallel[Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x1])>[Always[Equal[Differential[Differential[Variable[x1]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y1])>[Always[Equal[Differential[Differential[Variable[y1]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x9])>[Always[Equal[Differential[Differential[Variable[x9]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y9])>[Always[Equal[Differential[Differential[Variable[y9]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x1],Variable[y1],Variable[x9],Variable[y9],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x1]],Previous[Variable[x9]]],Number[2]],Power[Subtract[Previous[Variable[y1]],Previous[Variable[y9]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x1]],Subtract[Previous[Variable[x1]],Previous[Variable[x9]]]],Times[Differential[Variable[y1]],Subtract[Previous[Variable[y1]],Previous[Variable[y9]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x9]]],Subtract[Previous[Variable[x1]],Previous[Variable[x9]]]],Times[Previous[Differential[Variable[y9]]],Subtract[Previous[Variable[y1]],Previous[Variable[y9]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x1]]],Subtract[Previous[Variable[x1]],Previous[Variable[x9]]]],Times[Previous[Differential[Variable[y1]]],Subtract[Previous[Variable[y1]],Previous[Variable[y9]]]]]],Plus[Times[Differential[Variable[x9]],Subtract[Previous[Variable[x1]],Previous[Variable[x9]]]],Times[Differential[Variable[y9]],Subtract[Previous[Variable[y1]],Previous[Variable[y9]]]]]]],Equal[Subtract[Times[Differential[Variable[x1]],Subtract[Previous[Variable[y1]],Previous[Variable[y9]]]],Times[Differential[Variable[y1]],Subtract[Previous[Variable[x1]],Previous[Variable[x9]]]]],Subtract[Times[Previous[Differential[Variable[x1]]],Subtract[Previous[Variable[y1]],Previous[Variable[y9]]]],Times[Previous[Differential[Variable[y1]]],Subtract[Previous[Variable[x1]],Previous[Variable[x9]]]]]]],Equal[Subtract[Times[Differential[Variable[x9]],Subtract[Previous[Variable[y1]],Previous[Variable[y9]]]],Times[Differential[Variable[y9]],Subtract[Previous[Variable[x1]],Previous[Variable[x9]]]]],Subtract[Times[Previous[Differential[Variable[x9]]],Subtract[Previous[Variable[y1]],Previous[Variable[y9]]]],Times[Previous[Differential[Variable[y9]]],Subtract[Previous[Variable[x1]],Previous[Variable[x9]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x2])>[Always[Equal[Differential[Differential[Variable[x2]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y2])>[Always[Equal[Differential[Differential[Variable[y2]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x3])>[Always[Equal[Differential[Differential[Variable[x3]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y3])>[Always[Equal[Differential[Differential[Variable[y3]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x2],Variable[y2],Variable[x3],Variable[y3],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x2]],Previous[Variable[x3]]],Number[2]],Power[Subtract[Previous[Variable[y2]],Previous[Variable[y3]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x2]],Subtract[Previous[Variable[x2]],Previous[Variable[x3]]]],Times[Differential[Variable[y2]],Subtract[Previous[Variable[y2]],Previous[Variable[y3]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x3]]],Subtract[Previous[Variable[x2]],Previous[Variable[x3]]]],Times[Previous[Differential[Variable[y3]]],Subtract[Previous[Variable[y2]],Previous[Variable[y3]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x2]]],Subtract[Previous[Variable[x2]],Previous[Variable[x3]]]],Times[Previous[Differential[Variable[y2]]],Subtract[Previous[Variable[y2]],Previous[Variable[y3]]]]]],Plus[Times[Differential[Variable[x3]],Subtract[Previous[Variable[x2]],Previous[Variable[x3]]]],Times[Differential[Variable[y3]],Subtract[Previous[Variable[y2]],Previous[Variable[y3]]]]]]],Equal[Subtract[Times[Differential[Variable[x2]],Subtract[Previous[Variable[y2]],Previous[Variable[y3]]]],Times[Differential[Variable[y2]],Subtract[Previous[Variable[x2]],Previous[Variable[x3]]]]],Subtract[Times[Previous[Differential[Variable[x2]]],Subtract[Previous[Variable[y2]],Previous[Variable[y3]]]],Times[Previous[Differential[Variable[y2]]],Subtract[Previous[Variable[x2]],Previous[Variable[x3]]]]]]],Equal[Subtract[Times[Differential[Variable[x3]],Subtract[Previous[Variable[y2]],Previous[Variable[y3]]]],Times[Differential[Variable[y3]],Subtract[Previous[Variable[x2]],Previous[Variable[x3]]]]],Subtract[Times[Previous[Differential[Variable[x3]]],Subtract[Previous[Variable[y2]],Previous[Variable[y3]]]],Times[Previous[Differential[Variable[y3]]],Subtract[Previous[Variable[x2]],Previous[Variable[x3]]]]]]]]]]]]],Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x2])>[Always[Equal[Differential[Differential[Variable[x2]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y2])>[Always[Equal[Differential[Differential[Variable[y2]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x4])>[Always[Equal[Differential[Differential[Variable[x4]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y4])>[Always[Equal[Differential[Differential[Variable[y4]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x2],Variable[y2],Variable[x4],Variable[y4],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x2]],Previous[Variable[x4]]],Number[2]],Power[Subtract[Previous[Variable[y2]],Previous[Variable[y4]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x2]],Subtract[Previous[Variable[x2]],Previous[Variable[x4]]]],Times[Differential[Variable[y2]],Subtract[Previous[Variable[y2]],Previous[Variable[y4]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x4]]],Subtract[Previous[Variable[x2]],Previous[Variable[x4]]]],Times[Previous[Differential[Variable[y4]]],Subtract[Previous[Variable[y2]],Previous[Variable[y4]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x2]]],Subtract[Previous[Variable[x2]],Previous[Variable[x4]]]],Times[Previous[Differential[Variable[y2]]],Subtract[Previous[Variable[y2]],Previous[Variable[y4]]]]]],Plus[Times[Differential[Variable[x4]],Subtract[Previous[Variable[x2]],Previous[Variable[x4]]]],Times[Differential[Variable[y4]],Subtract[Previous[Variable[y2]],Previous[Variable[y4]]]]]]],Equal[Subtract[Times[Differential[Variable[x2]],Subtract[Previous[Variable[y2]],Previous[Variable[y4]]]],Times[Differential[Variable[y2]],Subtract[Previous[Variable[x2]],Previous[Variable[x4]]]]],Subtract[Times[Previous[Differential[Variable[x2]]],Subtract[Previous[Variable[y2]],Previous[Variable[y4]]]],Times[Previous[Differential[Variable[y2]]],Subtract[Previous[Variable[x2]],Previous[Variable[x4]]]]]]],Equal[Subtract[Times[Differential[Variable[x4]],Subtract[Previous[Variable[y2]],Previous[Variable[y4]]]],Times[Differential[Variable[y4]],Subtract[Previous[Variable[x2]],Previous[Variable[x4]]]]],Subtract[Times[Previous[Differential[Variable[x4]]],Subtract[Previous[Variable[y2]],Previous[Variable[y4]]]],Times[Previous[Differential[Variable[y4]]],Subtract[Previous[Variable[x2]],Previous[Variable[x4]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x2])>[Always[Equal[Differential[Differential[Variable[x2]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y2])>[Always[Equal[Differential[Differential[Variable[y2]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x5])>[Always[Equal[Differential[Differential[Variable[x5]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y5])>[Always[Equal[Differential[Differential[Variable[y5]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x2],Variable[y2],Variable[x5],Variable[y5],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x2]],Previous[Variable[x5]]],Number[2]],Power[Subtract[Previous[Variable[y2]],Previous[Variable[y5]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x2]],Subtract[Previous[Variable[x2]],Previous[Variable[x5]]]],Times[Differential[Variable[y2]],Subtract[Previous[Variable[y2]],Previous[Variable[y5]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x5]]],Subtract[Previous[Variable[x2]],Previous[Variable[x5]]]],Times[Previous[Differential[Variable[y5]]],Subtract[Previous[Variable[y2]],Previous[Variable[y5]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x2]]],Subtract[Previous[Variable[x2]],Previous[Variable[x5]]]],Times[Previous[Differential[Variable[y2]]],Subtract[Previous[Variable[y2]],Previous[Variable[y5]]]]]],Plus[Times[Differential[Variable[x5]],Subtract[Previous[Variable[x2]],Previous[Variable[x5]]]],Times[Differential[Variable[y5]],Subtract[Previous[Variable[y2]],Previous[Variable[y5]]]]]]],Equal[Subtract[Times[Differential[Variable[x2]],Subtract[Previous[Variable[y2]],Previous[Variable[y5]]]],Times[Differential[Variable[y2]],Subtract[Previous[Variable[x2]],Previous[Variable[x5]]]]],Subtract[Times[Previous[Differential[Variable[x2]]],Subtract[Previous[Variable[y2]],Previous[Variable[y5]]]],Times[Previous[Differential[Variable[y2]]],Subtract[Previous[Variable[x2]],Previous[Variable[x5]]]]]]],Equal[Subtract[Times[Differential[Variable[x5]],Subtract[Previous[Variable[y2]],Previous[Variable[y5]]]],Times[Differential[Variable[y5]],Subtract[Previous[Variable[x2]],Previous[Variable[x5]]]]],Subtract[Times[Previous[Differential[Variable[x5]]],Subtract[Previous[Variable[y2]],Previous[Variable[y5]]]],Times[Previous[Differential[Variable[y5]]],Subtract[Previous[Variable[x2]],Previous[Variable[x5]]]]]]]]]]]]]],Parallel[Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x2])>[Always[Equal[Differential[Differential[Variable[x2]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y2])>[Always[Equal[Differential[Differential[Variable[y2]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x6])>[Always[Equal[Differential[Differential[Variable[x6]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y6])>[Always[Equal[Differential[Differential[Variable[y6]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x2],Variable[y2],Variable[x6],Variable[y6],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x2]],Previous[Variable[x6]]],Number[2]],Power[Subtract[Previous[Variable[y2]],Previous[Variable[y6]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x2]],Subtract[Previous[Variable[x2]],Previous[Variable[x6]]]],Times[Differential[Variable[y2]],Subtract[Previous[Variable[y2]],Previous[Variable[y6]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x6]]],Subtract[Previous[Variable[x2]],Previous[Variable[x6]]]],Times[Previous[Differential[Variable[y6]]],Subtract[Previous[Variable[y2]],Previous[Variable[y6]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x2]]],Subtract[Previous[Variable[x2]],Previous[Variable[x6]]]],Times[Previous[Differential[Variable[y2]]],Subtract[Previous[Variable[y2]],Previous[Variable[y6]]]]]],Plus[Times[Differential[Variable[x6]],Subtract[Previous[Variable[x2]],Previous[Variable[x6]]]],Times[Differential[Variable[y6]],Subtract[Previous[Variable[y2]],Previous[Variable[y6]]]]]]],Equal[Subtract[Times[Differential[Variable[x2]],Subtract[Previous[Variable[y2]],Previous[Variable[y6]]]],Times[Differential[Variable[y2]],Subtract[Previous[Variable[x2]],Previous[Variable[x6]]]]],Subtract[Times[Previous[Differential[Variable[x2]]],Subtract[Previous[Variable[y2]],Previous[Variable[y6]]]],Times[Previous[Differential[Variable[y2]]],Subtract[Previous[Variable[x2]],Previous[Variable[x6]]]]]]],Equal[Subtract[Times[Differential[Variable[x6]],Subtract[Previous[Variable[y2]],Previous[Variable[y6]]]],Times[Differential[Variable[y6]],Subtract[Previous[Variable[x2]],Previous[Variable[x6]]]]],Subtract[Times[Previous[Differential[Variable[x6]]],Subtract[Previous[Variable[y2]],Previous[Variable[y6]]]],Times[Previous[Differential[Variable[y6]]],Subtract[Previous[Variable[x2]],Previous[Variable[x6]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x2])>[Always[Equal[Differential[Differential[Variable[x2]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y2])>[Always[Equal[Differential[Differential[Variable[y2]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x7])>[Always[Equal[Differential[Differential[Variable[x7]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y7])>[Always[Equal[Differential[Differential[Variable[y7]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x2],Variable[y2],Variable[x7],Variable[y7],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x2]],Previous[Variable[x7]]],Number[2]],Power[Subtract[Previous[Variable[y2]],Previous[Variable[y7]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x2]],Subtract[Previous[Variable[x2]],Previous[Variable[x7]]]],Times[Differential[Variable[y2]],Subtract[Previous[Variable[y2]],Previous[Variable[y7]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x7]]],Subtract[Previous[Variable[x2]],Previous[Variable[x7]]]],Times[Previous[Differential[Variable[y7]]],Subtract[Previous[Variable[y2]],Previous[Variable[y7]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x2]]],Subtract[Previous[Variable[x2]],Previous[Variable[x7]]]],Times[Previous[Differential[Variable[y2]]],Subtract[Previous[Variable[y2]],Previous[Variable[y7]]]]]],Plus[Times[Differential[Variable[x7]],Subtract[Previous[Variable[x2]],Previous[Variable[x7]]]],Times[Differential[Variable[y7]],Subtract[Previous[Variable[y2]],Previous[Variable[y7]]]]]]],Equal[Subtract[Times[Differential[Variable[x2]],Subtract[Previous[Variable[y2]],Previous[Variable[y7]]]],Times[Differential[Variable[y2]],Subtract[Previous[Variable[x2]],Previous[Variable[x7]]]]],Subtract[Times[Previous[Differential[Variable[x2]]],Subtract[Previous[Variable[y2]],Previous[Variable[y7]]]],Times[Previous[Differential[Variable[y2]]],Subtract[Previous[Variable[x2]],Previous[Variable[x7]]]]]]],Equal[Subtract[Times[Differential[Variable[x7]],Subtract[Previous[Variable[y2]],Previous[Variable[y7]]]],Times[Differential[Variable[y7]],Subtract[Previous[Variable[x2]],Previous[Variable[x7]]]]],Subtract[Times[Previous[Differential[Variable[x7]]],Subtract[Previous[Variable[y2]],Previous[Variable[y7]]]],Times[Previous[Differential[Variable[y7]]],Subtract[Previous[Variable[x2]],Previous[Variable[x7]]]]]]]]]]]]],Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x2])>[Always[Equal[Differential[Differential[Variable[x2]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y2])>[Always[Equal[Differential[Differential[Variable[y2]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x8])>[Always[Equal[Differential[Differential[Variable[x8]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y8])>[Always[Equal[Differential[Differential[Variable[y8]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x2],Variable[y2],Variable[x8],Variable[y8],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x2]],Previous[Variable[x8]]],Number[2]],Power[Subtract[Previous[Variable[y2]],Previous[Variable[y8]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x2]],Subtract[Previous[Variable[x2]],Previous[Variable[x8]]]],Times[Differential[Variable[y2]],Subtract[Previous[Variable[y2]],Previous[Variable[y8]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x8]]],Subtract[Previous[Variable[x2]],Previous[Variable[x8]]]],Times[Previous[Differential[Variable[y8]]],Subtract[Previous[Variable[y2]],Previous[Variable[y8]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x2]]],Subtract[Previous[Variable[x2]],Previous[Variable[x8]]]],Times[Previous[Differential[Variable[y2]]],Subtract[Previous[Variable[y2]],Previous[Variable[y8]]]]]],Plus[Times[Differential[Variable[x8]],Subtract[Previous[Variable[x2]],Previous[Variable[x8]]]],Times[Differential[Variable[y8]],Subtract[Previous[Variable[y2]],Previous[Variable[y8]]]]]]],Equal[Subtract[Times[Differential[Variable[x2]],Subtract[Previous[Variable[y2]],Previous[Variable[y8]]]],Times[Differential[Variable[y2]],Subtract[Previous[Variable[x2]],Previous[Variable[x8]]]]],Subtract[Times[Previous[Differential[Variable[x2]]],Subtract[Previous[Variable[y2]],Previous[Variable[y8]]]],Times[Previous[Differential[Variable[y2]]],Subtract[Previous[Variable[x2]],Previous[Variable[x8]]]]]]],Equal[Subtract[Times[Differential[Variable[x8]],Subtract[Previous[Variable[y2]],Previous[Variable[y8]]]],Times[Differential[Variable[y8]],Subtract[Previous[Variable[x2]],Previous[Variable[x8]]]]],Subtract[Times[Previous[Differential[Variable[x8]]],Subtract[Previous[Variable[y2]],Previous[Variable[y8]]]],Times[Previous[Differential[Variable[y8]]],Subtract[Previous[Variable[x2]],Previous[Variable[x8]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x2])>[Always[Equal[Differential[Differential[Variable[x2]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y2])>[Always[Equal[Differential[Differential[Variable[y2]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x9])>[Always[Equal[Differential[Differential[Variable[x9]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y9])>[Always[Equal[Differential[Differential[Variable[y9]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x2],Variable[y2],Variable[x9],Variable[y9],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x2]],Previous[Variable[x9]]],Number[2]],Power[Subtract[Previous[Variable[y2]],Previous[Variable[y9]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x2]],Subtract[Previous[Variable[x2]],Previous[Variable[x9]]]],Times[Differential[Variable[y2]],Subtract[Previous[Variable[y2]],Previous[Variable[y9]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x9]]],Subtract[Previous[Variable[x2]],Previous[Variable[x9]]]],Times[Previous[Differential[Variable[y9]]],Subtract[Previous[Variable[y2]],Previous[Variable[y9]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x2]]],Subtract[Previous[Variable[x2]],Previous[Variable[x9]]]],Times[Previous[Differential[Variable[y2]]],Subtract[Previous[Variable[y2]],Previous[Variable[y9]]]]]],Plus[Times[Differential[Variable[x9]],Subtract[Previous[Variable[x2]],Previous[Variable[x9]]]],Times[Differential[Variable[y9]],Subtract[Previous[Variable[y2]],Previous[Variable[y9]]]]]]],Equal[Subtract[Times[Differential[Variable[x2]],Subtract[Previous[Variable[y2]],Previous[Variable[y9]]]],Times[Differential[Variable[y2]],Subtract[Previous[Variable[x2]],Previous[Variable[x9]]]]],Subtract[Times[Previous[Differential[Variable[x2]]],Subtract[Previous[Variable[y2]],Previous[Variable[y9]]]],Times[Previous[Differential[Variable[y2]]],Subtract[Previous[Variable[x2]],Previous[Variable[x9]]]]]]],Equal[Subtract[Times[Differential[Variable[x9]],Subtract[Previous[Variable[y2]],Previous[Variable[y9]]]],Times[Differential[Variable[y9]],Subtract[Previous[Variable[x2]],Previous[Variable[x9]]]]],Subtract[Times[Previous[Differential[Variable[x9]]],Subtract[Previous[Variable[y2]],Previous[Variable[y9]]]],Times[Previous[Differential[Variable[y9]]],Subtract[Previous[Variable[x2]],Previous[Variable[x9]]]]]]]]]]]]]]],Parallel[Parallel[Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x3])>[Always[Equal[Differential[Differential[Variable[x3]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y3])>[Always[Equal[Differential[Differential[Variable[y3]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x4])>[Always[Equal[Differential[Differential[Variable[x4]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y4])>[Always[Equal[Differential[Differential[Variable[y4]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x3],Variable[y3],Variable[x4],Variable[y4],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x3]],Previous[Variable[x4]]],Number[2]],Power[Subtract[Previous[Variable[y3]],Previous[Variable[y4]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x3]],Subtract[Previous[Variable[x3]],Previous[Variable[x4]]]],Times[Differential[Variable[y3]],Subtract[Previous[Variable[y3]],Previous[Variable[y4]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x4]]],Subtract[Previous[Variable[x3]],Previous[Variable[x4]]]],Times[Previous[Differential[Variable[y4]]],Subtract[Previous[Variable[y3]],Previous[Variable[y4]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x3]]],Subtract[Previous[Variable[x3]],Previous[Variable[x4]]]],Times[Previous[Differential[Variable[y3]]],Subtract[Previous[Variable[y3]],Previous[Variable[y4]]]]]],Plus[Times[Differential[Variable[x4]],Subtract[Previous[Variable[x3]],Previous[Variable[x4]]]],Times[Differential[Variable[y4]],Subtract[Previous[Variable[y3]],Previous[Variable[y4]]]]]]],Equal[Subtract[Times[Differential[Variable[x3]],Subtract[Previous[Variable[y3]],Previous[Variable[y4]]]],Times[Differential[Variable[y3]],Subtract[Previous[Variable[x3]],Previous[Variable[x4]]]]],Subtract[Times[Previous[Differential[Variable[x3]]],Subtract[Previous[Variable[y3]],Previous[Variable[y4]]]],Times[Previous[Differential[Variable[y3]]],Subtract[Previous[Variable[x3]],Previous[Variable[x4]]]]]]],Equal[Subtract[Times[Differential[Variable[x4]],Subtract[Previous[Variable[y3]],Previous[Variable[y4]]]],Times[Differential[Variable[y4]],Subtract[Previous[Variable[x3]],Previous[Variable[x4]]]]],Subtract[Times[Previous[Differential[Variable[x4]]],Subtract[Previous[Variable[y3]],Previous[Variable[y4]]]],Times[Previous[Differential[Variable[y4]]],Subtract[Previous[Variable[x3]],Previous[Variable[x4]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x3])>[Always[Equal[Differential[Differential[Variable[x3]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y3])>[Always[Equal[Differential[Differential[Variable[y3]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x5])>[Always[Equal[Differential[Differential[Variable[x5]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y5])>[Always[Equal[Differential[Differential[Variable[y5]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x3],Variable[y3],Variable[x5],Variable[y5],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x3]],Previous[Variable[x5]]],Number[2]],Power[Subtract[Previous[Variable[y3]],Previous[Variable[y5]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x3]],Subtract[Previous[Variable[x3]],Previous[Variable[x5]]]],Times[Differential[Variable[y3]],Subtract[Previous[Variable[y3]],Previous[Variable[y5]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x5]]],Subtract[Previous[Variable[x3]],Previous[Variable[x5]]]],Times[Previous[Differential[Variable[y5]]],Subtract[Previous[Variable[y3]],Previous[Variable[y5]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x3]]],Subtract[Previous[Variable[x3]],Previous[Variable[x5]]]],Times[Previous[Differential[Variable[y3]]],Subtract[Previous[Variable[y3]],Previous[Variable[y5]]]]]],Plus[Times[Differential[Variable[x5]],Subtract[Previous[Variable[x3]],Previous[Variable[x5]]]],Times[Differential[Variable[y5]],Subtract[Previous[Variable[y3]],Previous[Variable[y5]]]]]]],Equal[Subtract[Times[Differential[Variable[x3]],Subtract[Previous[Variable[y3]],Previous[Variable[y5]]]],Times[Differential[Variable[y3]],Subtract[Previous[Variable[x3]],Previous[Variable[x5]]]]],Subtract[Times[Previous[Differential[Variable[x3]]],Subtract[Previous[Variable[y3]],Previous[Variable[y5]]]],Times[Previous[Differential[Variable[y3]]],Subtract[Previous[Variable[x3]],Previous[Variable[x5]]]]]]],Equal[Subtract[Times[Differential[Variable[x5]],Subtract[Previous[Variable[y3]],Previous[Variable[y5]]]],Times[Differential[Variable[y5]],Subtract[Previous[Variable[x3]],Previous[Variable[x5]]]]],Subtract[Times[Previous[Differential[Variable[x5]]],Subtract[Previous[Variable[y3]],Previous[Variable[y5]]]],Times[Previous[Differential[Variable[y5]]],Subtract[Previous[Variable[x3]],Previous[Variable[x5]]]]]]]]]]]]],Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x3])>[Always[Equal[Differential[Differential[Variable[x3]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y3])>[Always[Equal[Differential[Differential[Variable[y3]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x6])>[Always[Equal[Differential[Differential[Variable[x6]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y6])>[Always[Equal[Differential[Differential[Variable[y6]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x3],Variable[y3],Variable[x6],Variable[y6],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x3]],Previous[Variable[x6]]],Number[2]],Power[Subtract[Previous[Variable[y3]],Previous[Variable[y6]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x3]],Subtract[Previous[Variable[x3]],Previous[Variable[x6]]]],Times[Differential[Variable[y3]],Subtract[Previous[Variable[y3]],Previous[Variable[y6]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x6]]],Subtract[Previous[Variable[x3]],Previous[Variable[x6]]]],Times[Previous[Differential[Variable[y6]]],Subtract[Previous[Variable[y3]],Previous[Variable[y6]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x3]]],Subtract[Previous[Variable[x3]],Previous[Variable[x6]]]],Times[Previous[Differential[Variable[y3]]],Subtract[Previous[Variable[y3]],Previous[Variable[y6]]]]]],Plus[Times[Differential[Variable[x6]],Subtract[Previous[Variable[x3]],Previous[Variable[x6]]]],Times[Differential[Variable[y6]],Subtract[Previous[Variable[y3]],Previous[Variable[y6]]]]]]],Equal[Subtract[Times[Differential[Variable[x3]],Subtract[Previous[Variable[y3]],Previous[Variable[y6]]]],Times[Differential[Variable[y3]],Subtract[Previous[Variable[x3]],Previous[Variable[x6]]]]],Subtract[Times[Previous[Differential[Variable[x3]]],Subtract[Previous[Variable[y3]],Previous[Variable[y6]]]],Times[Previous[Differential[Variable[y3]]],Subtract[Previous[Variable[x3]],Previous[Variable[x6]]]]]]],Equal[Subtract[Times[Differential[Variable[x6]],Subtract[Previous[Variable[y3]],Previous[Variable[y6]]]],Times[Differential[Variable[y6]],Subtract[Previous[Variable[x3]],Previous[Variable[x6]]]]],Subtract[Times[Previous[Differential[Variable[x6]]],Subtract[Previous[Variable[y3]],Previous[Variable[y6]]]],Times[Previous[Differential[Variable[y6]]],Subtract[Previous[Variable[x3]],Previous[Variable[x6]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x3])>[Always[Equal[Differential[Differential[Variable[x3]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y3])>[Always[Equal[Differential[Differential[Variable[y3]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x7])>[Always[Equal[Differential[Differential[Variable[x7]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y7])>[Always[Equal[Differential[Differential[Variable[y7]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x3],Variable[y3],Variable[x7],Variable[y7],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x3]],Previous[Variable[x7]]],Number[2]],Power[Subtract[Previous[Variable[y3]],Previous[Variable[y7]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x3]],Subtract[Previous[Variable[x3]],Previous[Variable[x7]]]],Times[Differential[Variable[y3]],Subtract[Previous[Variable[y3]],Previous[Variable[y7]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x7]]],Subtract[Previous[Variable[x3]],Previous[Variable[x7]]]],Times[Previous[Differential[Variable[y7]]],Subtract[Previous[Variable[y3]],Previous[Variable[y7]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x3]]],Subtract[Previous[Variable[x3]],Previous[Variable[x7]]]],Times[Previous[Differential[Variable[y3]]],Subtract[Previous[Variable[y3]],Previous[Variable[y7]]]]]],Plus[Times[Differential[Variable[x7]],Subtract[Previous[Variable[x3]],Previous[Variable[x7]]]],Times[Differential[Variable[y7]],Subtract[Previous[Variable[y3]],Previous[Variable[y7]]]]]]],Equal[Subtract[Times[Differential[Variable[x3]],Subtract[Previous[Variable[y3]],Previous[Variable[y7]]]],Times[Differential[Variable[y3]],Subtract[Previous[Variable[x3]],Previous[Variable[x7]]]]],Subtract[Times[Previous[Differential[Variable[x3]]],Subtract[Previous[Variable[y3]],Previous[Variable[y7]]]],Times[Previous[Differential[Variable[y3]]],Subtract[Previous[Variable[x3]],Previous[Variable[x7]]]]]]],Equal[Subtract[Times[Differential[Variable[x7]],Subtract[Previous[Variable[y3]],Previous[Variable[y7]]]],Times[Differential[Variable[y7]],Subtract[Previous[Variable[x3]],Previous[Variable[x7]]]]],Subtract[Times[Previous[Differential[Variable[x7]]],Subtract[Previous[Variable[y3]],Previous[Variable[y7]]]],Times[Previous[Differential[Variable[y7]]],Subtract[Previous[Variable[x3]],Previous[Variable[x7]]]]]]]]]]]]]],Parallel[Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x3])>[Always[Equal[Differential[Differential[Variable[x3]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y3])>[Always[Equal[Differential[Differential[Variable[y3]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x8])>[Always[Equal[Differential[Differential[Variable[x8]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y8])>[Always[Equal[Differential[Differential[Variable[y8]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x3],Variable[y3],Variable[x8],Variable[y8],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x3]],Previous[Variable[x8]]],Number[2]],Power[Subtract[Previous[Variable[y3]],Previous[Variable[y8]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x3]],Subtract[Previous[Variable[x3]],Previous[Variable[x8]]]],Times[Differential[Variable[y3]],Subtract[Previous[Variable[y3]],Previous[Variable[y8]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x8]]],Subtract[Previous[Variable[x3]],Previous[Variable[x8]]]],Times[Previous[Differential[Variable[y8]]],Subtract[Previous[Variable[y3]],Previous[Variable[y8]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x3]]],Subtract[Previous[Variable[x3]],Previous[Variable[x8]]]],Times[Previous[Differential[Variable[y3]]],Subtract[Previous[Variable[y3]],Previous[Variable[y8]]]]]],Plus[Times[Differential[Variable[x8]],Subtract[Previous[Variable[x3]],Previous[Variable[x8]]]],Times[Differential[Variable[y8]],Subtract[Previous[Variable[y3]],Previous[Variable[y8]]]]]]],Equal[Subtract[Times[Differential[Variable[x3]],Subtract[Previous[Variable[y3]],Previous[Variable[y8]]]],Times[Differential[Variable[y3]],Subtract[Previous[Variable[x3]],Previous[Variable[x8]]]]],Subtract[Times[Previous[Differential[Variable[x3]]],Subtract[Previous[Variable[y3]],Previous[Variable[y8]]]],Times[Previous[Differential[Variable[y3]]],Subtract[Previous[Variable[x3]],Previous[Variable[x8]]]]]]],Equal[Subtract[Times[Differential[Variable[x8]],Subtract[Previous[Variable[y3]],Previous[Variable[y8]]]],Times[Differential[Variable[y8]],Subtract[Previous[Variable[x3]],Previous[Variable[x8]]]]],Subtract[Times[Previous[Differential[Variable[x8]]],Subtract[Previous[Variable[y3]],Previous[Variable[y8]]]],Times[Previous[Differential[Variable[y8]]],Subtract[Previous[Variable[x3]],Previous[Variable[x8]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x3])>[Always[Equal[Differential[Differential[Variable[x3]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y3])>[Always[Equal[Differential[Differential[Variable[y3]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x9])>[Always[Equal[Differential[Differential[Variable[x9]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y9])>[Always[Equal[Differential[Differential[Variable[y9]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x3],Variable[y3],Variable[x9],Variable[y9],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x3]],Previous[Variable[x9]]],Number[2]],Power[Subtract[Previous[Variable[y3]],Previous[Variable[y9]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x3]],Subtract[Previous[Variable[x3]],Previous[Variable[x9]]]],Times[Differential[Variable[y3]],Subtract[Previous[Variable[y3]],Previous[Variable[y9]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x9]]],Subtract[Previous[Variable[x3]],Previous[Variable[x9]]]],Times[Previous[Differential[Variable[y9]]],Subtract[Previous[Variable[y3]],Previous[Variable[y9]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x3]]],Subtract[Previous[Variable[x3]],Previous[Variable[x9]]]],Times[Previous[Differential[Variable[y3]]],Subtract[Previous[Variable[y3]],Previous[Variable[y9]]]]]],Plus[Times[Differential[Variable[x9]],Subtract[Previous[Variable[x3]],Previous[Variable[x9]]]],Times[Differential[Variable[y9]],Subtract[Previous[Variable[y3]],Previous[Variable[y9]]]]]]],Equal[Subtract[Times[Differential[Variable[x3]],Subtract[Previous[Variable[y3]],Previous[Variable[y9]]]],Times[Differential[Variable[y3]],Subtract[Previous[Variable[x3]],Previous[Variable[x9]]]]],Subtract[Times[Previous[Differential[Variable[x3]]],Subtract[Previous[Variable[y3]],Previous[Variable[y9]]]],Times[Previous[Differential[Variable[y3]]],Subtract[Previous[Variable[x3]],Previous[Variable[x9]]]]]]],Equal[Subtract[Times[Differential[Variable[x9]],Subtract[Previous[Variable[y3]],Previous[Variable[y9]]]],Times[Differential[Variable[y9]],Subtract[Previous[Variable[x3]],Previous[Variable[x9]]]]],Subtract[Times[Previous[Differential[Variable[x9]]],Subtract[Previous[Variable[y3]],Previous[Variable[y9]]]],Times[Previous[Differential[Variable[y9]]],Subtract[Previous[Variable[x3]],Previous[Variable[x9]]]]]]]]]]]]],Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x4])>[Always[Equal[Differential[Differential[Variable[x4]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y4])>[Always[Equal[Differential[Differential[Variable[y4]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x5])>[Always[Equal[Differential[Differential[Variable[x5]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y5])>[Always[Equal[Differential[Differential[Variable[y5]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x4],Variable[y4],Variable[x5],Variable[y5],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x4]],Previous[Variable[x5]]],Number[2]],Power[Subtract[Previous[Variable[y4]],Previous[Variable[y5]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x4]],Subtract[Previous[Variable[x4]],Previous[Variable[x5]]]],Times[Differential[Variable[y4]],Subtract[Previous[Variable[y4]],Previous[Variable[y5]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x5]]],Subtract[Previous[Variable[x4]],Previous[Variable[x5]]]],Times[Previous[Differential[Variable[y5]]],Subtract[Previous[Variable[y4]],Previous[Variable[y5]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x4]]],Subtract[Previous[Variable[x4]],Previous[Variable[x5]]]],Times[Previous[Differential[Variable[y4]]],Subtract[Previous[Variable[y4]],Previous[Variable[y5]]]]]],Plus[Times[Differential[Variable[x5]],Subtract[Previous[Variable[x4]],Previous[Variable[x5]]]],Times[Differential[Variable[y5]],Subtract[Previous[Variable[y4]],Previous[Variable[y5]]]]]]],Equal[Subtract[Times[Differential[Variable[x4]],Subtract[Previous[Variable[y4]],Previous[Variable[y5]]]],Times[Differential[Variable[y4]],Subtract[Previous[Variable[x4]],Previous[Variable[x5]]]]],Subtract[Times[Previous[Differential[Variable[x4]]],Subtract[Previous[Variable[y4]],Previous[Variable[y5]]]],Times[Previous[Differential[Variable[y4]]],Subtract[Previous[Variable[x4]],Previous[Variable[x5]]]]]]],Equal[Subtract[Times[Differential[Variable[x5]],Subtract[Previous[Variable[y4]],Previous[Variable[y5]]]],Times[Differential[Variable[y5]],Subtract[Previous[Variable[x4]],Previous[Variable[x5]]]]],Subtract[Times[Previous[Differential[Variable[x5]]],Subtract[Previous[Variable[y4]],Previous[Variable[y5]]]],Times[Previous[Differential[Variable[y5]]],Subtract[Previous[Variable[x4]],Previous[Variable[x5]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x4])>[Always[Equal[Differential[Differential[Variable[x4]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y4])>[Always[Equal[Differential[Differential[Variable[y4]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x6])>[Always[Equal[Differential[Differential[Variable[x6]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y6])>[Always[Equal[Differential[Differential[Variable[y6]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x4],Variable[y4],Variable[x6],Variable[y6],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x4]],Previous[Variable[x6]]],Number[2]],Power[Subtract[Previous[Variable[y4]],Previous[Variable[y6]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x4]],Subtract[Previous[Variable[x4]],Previous[Variable[x6]]]],Times[Differential[Variable[y4]],Subtract[Previous[Variable[y4]],Previous[Variable[y6]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x6]]],Subtract[Previous[Variable[x4]],Previous[Variable[x6]]]],Times[Previous[Differential[Variable[y6]]],Subtract[Previous[Variable[y4]],Previous[Variable[y6]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x4]]],Subtract[Previous[Variable[x4]],Previous[Variable[x6]]]],Times[Previous[Differential[Variable[y4]]],Subtract[Previous[Variable[y4]],Previous[Variable[y6]]]]]],Plus[Times[Differential[Variable[x6]],Subtract[Previous[Variable[x4]],Previous[Variable[x6]]]],Times[Differential[Variable[y6]],Subtract[Previous[Variable[y4]],Previous[Variable[y6]]]]]]],Equal[Subtract[Times[Differential[Variable[x4]],Subtract[Previous[Variable[y4]],Previous[Variable[y6]]]],Times[Differential[Variable[y4]],Subtract[Previous[Variable[x4]],Previous[Variable[x6]]]]],Subtract[Times[Previous[Differential[Variable[x4]]],Subtract[Previous[Variable[y4]],Previous[Variable[y6]]]],Times[Previous[Differential[Variable[y4]]],Subtract[Previous[Variable[x4]],Previous[Variable[x6]]]]]]],Equal[Subtract[Times[Differential[Variable[x6]],Subtract[Previous[Variable[y4]],Previous[Variable[y6]]]],Times[Differential[Variable[y6]],Subtract[Previous[Variable[x4]],Previous[Variable[x6]]]]],Subtract[Times[Previous[Differential[Variable[x6]]],Subtract[Previous[Variable[y4]],Previous[Variable[y6]]]],Times[Previous[Differential[Variable[y6]]],Subtract[Previous[Variable[x4]],Previous[Variable[x6]]]]]]]]]]]]]]]]],Parallel[Parallel[Parallel[Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x4])>[Always[Equal[Differential[Differential[Variable[x4]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y4])>[Always[Equal[Differential[Differential[Variable[y4]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x7])>[Always[Equal[Differential[Differential[Variable[x7]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y7])>[Always[Equal[Differential[Differential[Variable[y7]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x4],Variable[y4],Variable[x7],Variable[y7],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x4]],Previous[Variable[x7]]],Number[2]],Power[Subtract[Previous[Variable[y4]],Previous[Variable[y7]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x4]],Subtract[Previous[Variable[x4]],Previous[Variable[x7]]]],Times[Differential[Variable[y4]],Subtract[Previous[Variable[y4]],Previous[Variable[y7]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x7]]],Subtract[Previous[Variable[x4]],Previous[Variable[x7]]]],Times[Previous[Differential[Variable[y7]]],Subtract[Previous[Variable[y4]],Previous[Variable[y7]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x4]]],Subtract[Previous[Variable[x4]],Previous[Variable[x7]]]],Times[Previous[Differential[Variable[y4]]],Subtract[Previous[Variable[y4]],Previous[Variable[y7]]]]]],Plus[Times[Differential[Variable[x7]],Subtract[Previous[Variable[x4]],Previous[Variable[x7]]]],Times[Differential[Variable[y7]],Subtract[Previous[Variable[y4]],Previous[Variable[y7]]]]]]],Equal[Subtract[Times[Differential[Variable[x4]],Subtract[Previous[Variable[y4]],Previous[Variable[y7]]]],Times[Differential[Variable[y4]],Subtract[Previous[Variable[x4]],Previous[Variable[x7]]]]],Subtract[Times[Previous[Differential[Variable[x4]]],Subtract[Previous[Variable[y4]],Previous[Variable[y7]]]],Times[Previous[Differential[Variable[y4]]],Subtract[Previous[Variable[x4]],Previous[Variable[x7]]]]]]],Equal[Subtract[Times[Differential[Variable[x7]],Subtract[Previous[Variable[y4]],Previous[Variable[y7]]]],Times[Differential[Variable[y7]],Subtract[Previous[Variable[x4]],Previous[Variable[x7]]]]],Subtract[Times[Previous[Differential[Variable[x7]]],Subtract[Previous[Variable[y4]],Previous[Variable[y7]]]],Times[Previous[Differential[Variable[y7]]],Subtract[Previous[Variable[x4]],Previous[Variable[x7]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x4])>[Always[Equal[Differential[Differential[Variable[x4]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y4])>[Always[Equal[Differential[Differential[Variable[y4]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x8])>[Always[Equal[Differential[Differential[Variable[x8]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y8])>[Always[Equal[Differential[Differential[Variable[y8]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x4],Variable[y4],Variable[x8],Variable[y8],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x4]],Previous[Variable[x8]]],Number[2]],Power[Subtract[Previous[Variable[y4]],Previous[Variable[y8]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x4]],Subtract[Previous[Variable[x4]],Previous[Variable[x8]]]],Times[Differential[Variable[y4]],Subtract[Previous[Variable[y4]],Previous[Variable[y8]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x8]]],Subtract[Previous[Variable[x4]],Previous[Variable[x8]]]],Times[Previous[Differential[Variable[y8]]],Subtract[Previous[Variable[y4]],Previous[Variable[y8]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x4]]],Subtract[Previous[Variable[x4]],Previous[Variable[x8]]]],Times[Previous[Differential[Variable[y4]]],Subtract[Previous[Variable[y4]],Previous[Variable[y8]]]]]],Plus[Times[Differential[Variable[x8]],Subtract[Previous[Variable[x4]],Previous[Variable[x8]]]],Times[Differential[Variable[y8]],Subtract[Previous[Variable[y4]],Previous[Variable[y8]]]]]]],Equal[Subtract[Times[Differential[Variable[x4]],Subtract[Previous[Variable[y4]],Previous[Variable[y8]]]],Times[Differential[Variable[y4]],Subtract[Previous[Variable[x4]],Previous[Variable[x8]]]]],Subtract[Times[Previous[Differential[Variable[x4]]],Subtract[Previous[Variable[y4]],Previous[Variable[y8]]]],Times[Previous[Differential[Variable[y4]]],Subtract[Previous[Variable[x4]],Previous[Variable[x8]]]]]]],Equal[Subtract[Times[Differential[Variable[x8]],Subtract[Previous[Variable[y4]],Previous[Variable[y8]]]],Times[Differential[Variable[y8]],Subtract[Previous[Variable[x4]],Previous[Variable[x8]]]]],Subtract[Times[Previous[Differential[Variable[x8]]],Subtract[Previous[Variable[y4]],Previous[Variable[y8]]]],Times[Previous[Differential[Variable[y8]]],Subtract[Previous[Variable[x4]],Previous[Variable[x8]]]]]]]]]]]]],Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x4])>[Always[Equal[Differential[Differential[Variable[x4]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y4])>[Always[Equal[Differential[Differential[Variable[y4]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x9])>[Always[Equal[Differential[Differential[Variable[x9]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y9])>[Always[Equal[Differential[Differential[Variable[y9]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x4],Variable[y4],Variable[x9],Variable[y9],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x4]],Previous[Variable[x9]]],Number[2]],Power[Subtract[Previous[Variable[y4]],Previous[Variable[y9]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x4]],Subtract[Previous[Variable[x4]],Previous[Variable[x9]]]],Times[Differential[Variable[y4]],Subtract[Previous[Variable[y4]],Previous[Variable[y9]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x9]]],Subtract[Previous[Variable[x4]],Previous[Variable[x9]]]],Times[Previous[Differential[Variable[y9]]],Subtract[Previous[Variable[y4]],Previous[Variable[y9]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x4]]],Subtract[Previous[Variable[x4]],Previous[Variable[x9]]]],Times[Previous[Differential[Variable[y4]]],Subtract[Previous[Variable[y4]],Previous[Variable[y9]]]]]],Plus[Times[Differential[Variable[x9]],Subtract[Previous[Variable[x4]],Previous[Variable[x9]]]],Times[Differential[Variable[y9]],Subtract[Previous[Variable[y4]],Previous[Variable[y9]]]]]]],Equal[Subtract[Times[Differential[Variable[x4]],Subtract[Previous[Variable[y4]],Previous[Variable[y9]]]],Times[Differential[Variable[y4]],Subtract[Previous[Variable[x4]],Previous[Variable[x9]]]]],Subtract[Times[Previous[Differential[Variable[x4]]],Subtract[Previous[Variable[y4]],Previous[Variable[y9]]]],Times[Previous[Differential[Variable[y4]]],Subtract[Previous[Variable[x4]],Previous[Variable[x9]]]]]]],Equal[Subtract[Times[Differential[Variable[x9]],Subtract[Previous[Variable[y4]],Previous[Variable[y9]]]],Times[Differential[Variable[y9]],Subtract[Previous[Variable[x4]],Previous[Variable[x9]]]]],Subtract[Times[Previous[Differential[Variable[x9]]],Subtract[Previous[Variable[y4]],Previous[Variable[y9]]]],Times[Previous[Differential[Variable[y9]]],Subtract[Previous[Variable[x4]],Previous[Variable[x9]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x5])>[Always[Equal[Differential[Differential[Variable[x5]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y5])>[Always[Equal[Differential[Differential[Variable[y5]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x6])>[Always[Equal[Differential[Differential[Variable[x6]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y6])>[Always[Equal[Differential[Differential[Variable[y6]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x5],Variable[y5],Variable[x6],Variable[y6],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x5]],Previous[Variable[x6]]],Number[2]],Power[Subtract[Previous[Variable[y5]],Previous[Variable[y6]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x5]],Subtract[Previous[Variable[x5]],Previous[Variable[x6]]]],Times[Differential[Variable[y5]],Subtract[Previous[Variable[y5]],Previous[Variable[y6]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x6]]],Subtract[Previous[Variable[x5]],Previous[Variable[x6]]]],Times[Previous[Differential[Variable[y6]]],Subtract[Previous[Variable[y5]],Previous[Variable[y6]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x5]]],Subtract[Previous[Variable[x5]],Previous[Variable[x6]]]],Times[Previous[Differential[Variable[y5]]],Subtract[Previous[Variable[y5]],Previous[Variable[y6]]]]]],Plus[Times[Differential[Variable[x6]],Subtract[Previous[Variable[x5]],Previous[Variable[x6]]]],Times[Differential[Variable[y6]],Subtract[Previous[Variable[y5]],Previous[Variable[y6]]]]]]],Equal[Subtract[Times[Differential[Variable[x5]],Subtract[Previous[Variable[y5]],Previous[Variable[y6]]]],Times[Differential[Variable[y5]],Subtract[Previous[Variable[x5]],Previous[Variable[x6]]]]],Subtract[Times[Previous[Differential[Variable[x5]]],Subtract[Previous[Variable[y5]],Previous[Variable[y6]]]],Times[Previous[Differential[Variable[y5]]],Subtract[Previous[Variable[x5]],Previous[Variable[x6]]]]]]],Equal[Subtract[Times[Differential[Variable[x6]],Subtract[Previous[Variable[y5]],Previous[Variable[y6]]]],Times[Differential[Variable[y6]],Subtract[Previous[Variable[x5]],Previous[Variable[x6]]]]],Subtract[Times[Previous[Differential[Variable[x6]]],Subtract[Previous[Variable[y5]],Previous[Variable[y6]]]],Times[Previous[Differential[Variable[y6]]],Subtract[Previous[Variable[x5]],Previous[Variable[x6]]]]]]]]]]]]]],Parallel[Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x5])>[Always[Equal[Differential[Differential[Variable[x5]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y5])>[Always[Equal[Differential[Differential[Variable[y5]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x7])>[Always[Equal[Differential[Differential[Variable[x7]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y7])>[Always[Equal[Differential[Differential[Variable[y7]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x5],Variable[y5],Variable[x7],Variable[y7],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x5]],Previous[Variable[x7]]],Number[2]],Power[Subtract[Previous[Variable[y5]],Previous[Variable[y7]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x5]],Subtract[Previous[Variable[x5]],Previous[Variable[x7]]]],Times[Differential[Variable[y5]],Subtract[Previous[Variable[y5]],Previous[Variable[y7]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x7]]],Subtract[Previous[Variable[x5]],Previous[Variable[x7]]]],Times[Previous[Differential[Variable[y7]]],Subtract[Previous[Variable[y5]],Previous[Variable[y7]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x5]]],Subtract[Previous[Variable[x5]],Previous[Variable[x7]]]],Times[Previous[Differential[Variable[y5]]],Subtract[Previous[Variable[y5]],Previous[Variable[y7]]]]]],Plus[Times[Differential[Variable[x7]],Subtract[Previous[Variable[x5]],Previous[Variable[x7]]]],Times[Differential[Variable[y7]],Subtract[Previous[Variable[y5]],Previous[Variable[y7]]]]]]],Equal[Subtract[Times[Differential[Variable[x5]],Subtract[Previous[Variable[y5]],Previous[Variable[y7]]]],Times[Differential[Variable[y5]],Subtract[Previous[Variable[x5]],Previous[Variable[x7]]]]],Subtract[Times[Previous[Differential[Variable[x5]]],Subtract[Previous[Variable[y5]],Previous[Variable[y7]]]],Times[Previous[Differential[Variable[y5]]],Subtract[Previous[Variable[x5]],Previous[Variable[x7]]]]]]],Equal[Subtract[Times[Differential[Variable[x7]],Subtract[Previous[Variable[y5]],Previous[Variable[y7]]]],Times[Differential[Variable[y7]],Subtract[Previous[Variable[x5]],Previous[Variable[x7]]]]],Subtract[Times[Previous[Differential[Variable[x7]]],Subtract[Previous[Variable[y5]],Previous[Variable[y7]]]],Times[Previous[Differential[Variable[y7]]],Subtract[Previous[Variable[x5]],Previous[Variable[x7]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x5])>[Always[Equal[Differential[Differential[Variable[x5]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y5])>[Always[Equal[Differential[Differential[Variable[y5]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x8])>[Always[Equal[Differential[Differential[Variable[x8]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y8])>[Always[Equal[Differential[Differential[Variable[y8]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x5],Variable[y5],Variable[x8],Variable[y8],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x5]],Previous[Variable[x8]]],Number[2]],Power[Subtract[Previous[Variable[y5]],Previous[Variable[y8]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x5]],Subtract[Previous[Variable[x5]],Previous[Variable[x8]]]],Times[Differential[Variable[y5]],Subtract[Previous[Variable[y5]],Previous[Variable[y8]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x8]]],Subtract[Previous[Variable[x5]],Previous[Variable[x8]]]],Times[Previous[Differential[Variable[y8]]],Subtract[Previous[Variable[y5]],Previous[Variable[y8]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x5]]],Subtract[Previous[Variable[x5]],Previous[Variable[x8]]]],Times[Previous[Differential[Variable[y5]]],Subtract[Previous[Variable[y5]],Previous[Variable[y8]]]]]],Plus[Times[Differential[Variable[x8]],Subtract[Previous[Variable[x5]],Previous[Variable[x8]]]],Times[Differential[Variable[y8]],Subtract[Previous[Variable[y5]],Previous[Variable[y8]]]]]]],Equal[Subtract[Times[Differential[Variable[x5]],Subtract[Previous[Variable[y5]],Previous[Variable[y8]]]],Times[Differential[Variable[y5]],Subtract[Previous[Variable[x5]],Previous[Variable[x8]]]]],Subtract[Times[Previous[Differential[Variable[x5]]],Subtract[Previous[Variable[y5]],Previous[Variable[y8]]]],Times[Previous[Differential[Variable[y5]]],Subtract[Previous[Variable[x5]],Previous[Variable[x8]]]]]]],Equal[Subtract[Times[Differential[Variable[x8]],Subtract[Previous[Variable[y5]],Previous[Variable[y8]]]],Times[Differential[Variable[y8]],Subtract[Previous[Variable[x5]],Previous[Variable[x8]]]]],Subtract[Times[Previous[Differential[Variable[x8]]],Subtract[Previous[Variable[y5]],Previous[Variable[y8]]]],Times[Previous[Differential[Variable[y8]]],Subtract[Previous[Variable[x5]],Previous[Variable[x8]]]]]]]]]]]]],Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x5])>[Always[Equal[Differential[Differential[Variable[x5]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y5])>[Always[Equal[Differential[Differential[Variable[y5]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x9])>[Always[Equal[Differential[Differential[Variable[x9]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y9])>[Always[Equal[Differential[Differential[Variable[y9]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x5],Variable[y5],Variable[x9],Variable[y9],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x5]],Previous[Variable[x9]]],Number[2]],Power[Subtract[Previous[Variable[y5]],Previous[Variable[y9]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x5]],Subtract[Previous[Variable[x5]],Previous[Variable[x9]]]],Times[Differential[Variable[y5]],Subtract[Previous[Variable[y5]],Previous[Variable[y9]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x9]]],Subtract[Previous[Variable[x5]],Previous[Variable[x9]]]],Times[Previous[Differential[Variable[y9]]],Subtract[Previous[Variable[y5]],Previous[Variable[y9]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x5]]],Subtract[Previous[Variable[x5]],Previous[Variable[x9]]]],Times[Previous[Differential[Variable[y5]]],Subtract[Previous[Variable[y5]],Previous[Variable[y9]]]]]],Plus[Times[Differential[Variable[x9]],Subtract[Previous[Variable[x5]],Previous[Variable[x9]]]],Times[Differential[Variable[y9]],Subtract[Previous[Variable[y5]],Previous[Variable[y9]]]]]]],Equal[Subtract[Times[Differential[Variable[x5]],Subtract[Previous[Variable[y5]],Previous[Variable[y9]]]],Times[Differential[Variable[y5]],Subtract[Previous[Variable[x5]],Previous[Variable[x9]]]]],Subtract[Times[Previous[Differential[Variable[x5]]],Subtract[Previous[Variable[y5]],Previous[Variable[y9]]]],Times[Previous[Differential[Variable[y5]]],Subtract[Previous[Variable[x5]],Previous[Variable[x9]]]]]]],Equal[Subtract[Times[Differential[Variable[x9]],Subtract[Previous[Variable[y5]],Previous[Variable[y9]]]],Times[Differential[Variable[y9]],Subtract[Previous[Variable[x5]],Previous[Variable[x9]]]]],Subtract[Times[Previous[Differential[Variable[x9]]],Subtract[Previous[Variable[y5]],Previous[Variable[y9]]]],Times[Previous[Differential[Variable[y9]]],Subtract[Previous[Variable[x5]],Previous[Variable[x9]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x6])>[Always[Equal[Differential[Differential[Variable[x6]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y6])>[Always[Equal[Differential[Differential[Variable[y6]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x7])>[Always[Equal[Differential[Differential[Variable[x7]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y7])>[Always[Equal[Differential[Differential[Variable[y7]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x6],Variable[y6],Variable[x7],Variable[y7],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x6]],Previous[Variable[x7]]],Number[2]],Power[Subtract[Previous[Variable[y6]],Previous[Variable[y7]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x6]],Subtract[Previous[Variable[x6]],Previous[Variable[x7]]]],Times[Differential[Variable[y6]],Subtract[Previous[Variable[y6]],Previous[Variable[y7]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x7]]],Subtract[Previous[Variable[x6]],Previous[Variable[x7]]]],Times[Previous[Differential[Variable[y7]]],Subtract[Previous[Variable[y6]],Previous[Variable[y7]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x6]]],Subtract[Previous[Variable[x6]],Previous[Variable[x7]]]],Times[Previous[Differential[Variable[y6]]],Subtract[Previous[Variable[y6]],Previous[Variable[y7]]]]]],Plus[Times[Differential[Variable[x7]],Subtract[Previous[Variable[x6]],Previous[Variable[x7]]]],Times[Differential[Variable[y7]],Subtract[Previous[Variable[y6]],Previous[Variable[y7]]]]]]],Equal[Subtract[Times[Differential[Variable[x6]],Subtract[Previous[Variable[y6]],Previous[Variable[y7]]]],Times[Differential[Variable[y6]],Subtract[Previous[Variable[x6]],Previous[Variable[x7]]]]],Subtract[Times[Previous[Differential[Variable[x6]]],Subtract[Previous[Variable[y6]],Previous[Variable[y7]]]],Times[Previous[Differential[Variable[y6]]],Subtract[Previous[Variable[x6]],Previous[Variable[x7]]]]]]],Equal[Subtract[Times[Differential[Variable[x7]],Subtract[Previous[Variable[y6]],Previous[Variable[y7]]]],Times[Differential[Variable[y7]],Subtract[Previous[Variable[x6]],Previous[Variable[x7]]]]],Subtract[Times[Previous[Differential[Variable[x7]]],Subtract[Previous[Variable[y6]],Previous[Variable[y7]]]],Times[Previous[Differential[Variable[y7]]],Subtract[Previous[Variable[x6]],Previous[Variable[x7]]]]]]]]]]]]]]],Parallel[Parallel[Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x6])>[Always[Equal[Differential[Differential[Variable[x6]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y6])>[Always[Equal[Differential[Differential[Variable[y6]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x8])>[Always[Equal[Differential[Differential[Variable[x8]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y8])>[Always[Equal[Differential[Differential[Variable[y8]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x6],Variable[y6],Variable[x8],Variable[y8],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x6]],Previous[Variable[x8]]],Number[2]],Power[Subtract[Previous[Variable[y6]],Previous[Variable[y8]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x6]],Subtract[Previous[Variable[x6]],Previous[Variable[x8]]]],Times[Differential[Variable[y6]],Subtract[Previous[Variable[y6]],Previous[Variable[y8]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x8]]],Subtract[Previous[Variable[x6]],Previous[Variable[x8]]]],Times[Previous[Differential[Variable[y8]]],Subtract[Previous[Variable[y6]],Previous[Variable[y8]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x6]]],Subtract[Previous[Variable[x6]],Previous[Variable[x8]]]],Times[Previous[Differential[Variable[y6]]],Subtract[Previous[Variable[y6]],Previous[Variable[y8]]]]]],Plus[Times[Differential[Variable[x8]],Subtract[Previous[Variable[x6]],Previous[Variable[x8]]]],Times[Differential[Variable[y8]],Subtract[Previous[Variable[y6]],Previous[Variable[y8]]]]]]],Equal[Subtract[Times[Differential[Variable[x6]],Subtract[Previous[Variable[y6]],Previous[Variable[y8]]]],Times[Differential[Variable[y6]],Subtract[Previous[Variable[x6]],Previous[Variable[x8]]]]],Subtract[Times[Previous[Differential[Variable[x6]]],Subtract[Previous[Variable[y6]],Previous[Variable[y8]]]],Times[Previous[Differential[Variable[y6]]],Subtract[Previous[Variable[x6]],Previous[Variable[x8]]]]]]],Equal[Subtract[Times[Differential[Variable[x8]],Subtract[Previous[Variable[y6]],Previous[Variable[y8]]]],Times[Differential[Variable[y8]],Subtract[Previous[Variable[x6]],Previous[Variable[x8]]]]],Subtract[Times[Previous[Differential[Variable[x8]]],Subtract[Previous[Variable[y6]],Previous[Variable[y8]]]],Times[Previous[Differential[Variable[y8]]],Subtract[Previous[Variable[x6]],Previous[Variable[x8]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x6])>[Always[Equal[Differential[Differential[Variable[x6]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y6])>[Always[Equal[Differential[Differential[Variable[y6]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x9])>[Always[Equal[Differential[Differential[Variable[x9]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y9])>[Always[Equal[Differential[Differential[Variable[y9]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x6],Variable[y6],Variable[x9],Variable[y9],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x6]],Previous[Variable[x9]]],Number[2]],Power[Subtract[Previous[Variable[y6]],Previous[Variable[y9]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x6]],Subtract[Previous[Variable[x6]],Previous[Variable[x9]]]],Times[Differential[Variable[y6]],Subtract[Previous[Variable[y6]],Previous[Variable[y9]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x9]]],Subtract[Previous[Variable[x6]],Previous[Variable[x9]]]],Times[Previous[Differential[Variable[y9]]],Subtract[Previous[Variable[y6]],Previous[Variable[y9]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x6]]],Subtract[Previous[Variable[x6]],Previous[Variable[x9]]]],Times[Previous[Differential[Variable[y6]]],Subtract[Previous[Variable[y6]],Previous[Variable[y9]]]]]],Plus[Times[Differential[Variable[x9]],Subtract[Previous[Variable[x6]],Previous[Variable[x9]]]],Times[Differential[Variable[y9]],Subtract[Previous[Variable[y6]],Previous[Variable[y9]]]]]]],Equal[Subtract[Times[Differential[Variable[x6]],Subtract[Previous[Variable[y6]],Previous[Variable[y9]]]],Times[Differential[Variable[y6]],Subtract[Previous[Variable[x6]],Previous[Variable[x9]]]]],Subtract[Times[Previous[Differential[Variable[x6]]],Subtract[Previous[Variable[y6]],Previous[Variable[y9]]]],Times[Previous[Differential[Variable[y6]]],Subtract[Previous[Variable[x6]],Previous[Variable[x9]]]]]]],Equal[Subtract[Times[Differential[Variable[x9]],Subtract[Previous[Variable[y6]],Previous[Variable[y9]]]],Times[Differential[Variable[y9]],Subtract[Previous[Variable[x6]],Previous[Variable[x9]]]]],Subtract[Times[Previous[Differential[Variable[x9]]],Subtract[Previous[Variable[y6]],Previous[Variable[y9]]]],Times[Previous[Differential[Variable[y9]]],Subtract[Previous[Variable[x6]],Previous[Variable[x9]]]]]]]]]]]]],Parallel[Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x7])>[Always[Equal[Differential[Differential[Variable[x7]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y7])>[Always[Equal[Differential[Differential[Variable[y7]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x8])>[Always[Equal[Differential[Differential[Variable[x8]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y8])>[Always[Equal[Differential[Differential[Variable[y8]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x7],Variable[y7],Variable[x8],Variable[y8],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x7]],Previous[Variable[x8]]],Number[2]],Power[Subtract[Previous[Variable[y7]],Previous[Variable[y8]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x7]],Subtract[Previous[Variable[x7]],Previous[Variable[x8]]]],Times[Differential[Variable[y7]],Subtract[Previous[Variable[y7]],Previous[Variable[y8]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x8]]],Subtract[Previous[Variable[x7]],Previous[Variable[x8]]]],Times[Previous[Differential[Variable[y8]]],Subtract[Previous[Variable[y7]],Previous[Variable[y8]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x7]]],Subtract[Previous[Variable[x7]],Previous[Variable[x8]]]],Times[Previous[Differential[Variable[y7]]],Subtract[Previous[Variable[y7]],Previous[Variable[y8]]]]]],Plus[Times[Differential[Variable[x8]],Subtract[Previous[Variable[x7]],Previous[Variable[x8]]]],Times[Differential[Variable[y8]],Subtract[Previous[Variable[y7]],Previous[Variable[y8]]]]]]],Equal[Subtract[Times[Differential[Variable[x7]],Subtract[Previous[Variable[y7]],Previous[Variable[y8]]]],Times[Differential[Variable[y7]],Subtract[Previous[Variable[x7]],Previous[Variable[x8]]]]],Subtract[Times[Previous[Differential[Variable[x7]]],Subtract[Previous[Variable[y7]],Previous[Variable[y8]]]],Times[Previous[Differential[Variable[y7]]],Subtract[Previous[Variable[x7]],Previous[Variable[x8]]]]]]],Equal[Subtract[Times[Differential[Variable[x8]],Subtract[Previous[Variable[y7]],Previous[Variable[y8]]]],Times[Differential[Variable[y8]],Subtract[Previous[Variable[x7]],Previous[Variable[x8]]]]],Subtract[Times[Previous[Differential[Variable[x8]]],Subtract[Previous[Variable[y7]],Previous[Variable[y8]]]],Times[Previous[Differential[Variable[y8]]],Subtract[Previous[Variable[x7]],Previous[Variable[x8]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x7])>[Always[Equal[Differential[Differential[Variable[x7]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y7])>[Always[Equal[Differential[Differential[Variable[y7]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x9])>[Always[Equal[Differential[Differential[Variable[x9]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y9])>[Always[Equal[Differential[Differential[Variable[y9]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x7],Variable[y7],Variable[x9],Variable[y9],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x7]],Previous[Variable[x9]]],Number[2]],Power[Subtract[Previous[Variable[y7]],Previous[Variable[y9]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x7]],Subtract[Previous[Variable[x7]],Previous[Variable[x9]]]],Times[Differential[Variable[y7]],Subtract[Previous[Variable[y7]],Previous[Variable[y9]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x9]]],Subtract[Previous[Variable[x7]],Previous[Variable[x9]]]],Times[Previous[Differential[Variable[y9]]],Subtract[Previous[Variable[y7]],Previous[Variable[y9]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x7]]],Subtract[Previous[Variable[x7]],Previous[Variable[x9]]]],Times[Previous[Differential[Variable[y7]]],Subtract[Previous[Variable[y7]],Previous[Variable[y9]]]]]],Plus[Times[Differential[Variable[x9]],Subtract[Previous[Variable[x7]],Previous[Variable[x9]]]],Times[Differential[Variable[y9]],Subtract[Previous[Variable[y7]],Previous[Variable[y9]]]]]]],Equal[Subtract[Times[Differential[Variable[x7]],Subtract[Previous[Variable[y7]],Previous[Variable[y9]]]],Times[Differential[Variable[y7]],Subtract[Previous[Variable[x7]],Previous[Variable[x9]]]]],Subtract[Times[Previous[Differential[Variable[x7]]],Subtract[Previous[Variable[y7]],Previous[Variable[y9]]]],Times[Previous[Differential[Variable[y7]]],Subtract[Previous[Variable[x7]],Previous[Variable[x9]]]]]]],Equal[Subtract[Times[Differential[Variable[x9]],Subtract[Previous[Variable[y7]],Previous[Variable[y9]]]],Times[Differential[Variable[y9]],Subtract[Previous[Variable[x7]],Previous[Variable[x9]]]]],Subtract[Times[Previous[Differential[Variable[x9]]],Subtract[Previous[Variable[y7]],Previous[Variable[y9]]]],Times[Previous[Differential[Variable[y9]]],Subtract[Previous[Variable[x7]],Previous[Variable[x9]]]]]]]]]]]]]],Weaker[Parallel[Parallel[Parallel[Constraint[ConstraintCall<CONST(Variable[x8])>[Always[Equal[Differential[Differential[Variable[x8]]],Number[0]]]]],Constraint[ConstraintCall<CONST(Variable[y8])>[Always[Equal[Differential[Differential[Variable[y8]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[x9])>[Always[Equal[Differential[Differential[Variable[x9]]],Number[0]]]]]],Constraint[ConstraintCall<CONST(Variable[y9])>[Always[Equal[Differential[Differential[Variable[y9]]],Number[0]]]]]],Constraint[ConstraintCall<COL(Variable[x8],Variable[y8],Variable[x9],Variable[y9],Number[1])>[Always[Ask[Equal[Plus[Power[Subtract[Previous[Variable[x8]],Previous[Variable[x9]]],Number[2]],Power[Subtract[Previous[Variable[y8]],Previous[Variable[y9]]],Number[2]]],Number[4]],LogicalAnd[LogicalAnd[LogicalAnd[Equal[Plus[Times[Differential[Variable[x8]],Subtract[Previous[Variable[x8]],Previous[Variable[x9]]]],Times[Differential[Variable[y8]],Subtract[Previous[Variable[y8]],Previous[Variable[y9]]]]],Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x9]]],Subtract[Previous[Variable[x8]],Previous[Variable[x9]]]],Times[Previous[Differential[Variable[y9]]],Subtract[Previous[Variable[y8]],Previous[Variable[y9]]]]]]],Equal[Times[Previous[Number[1]],Plus[Times[Previous[Differential[Variable[x8]]],Subtract[Previous[Variable[x8]],Previous[Variable[x9]]]],Times[Previous[Differential[Variable[y8]]],Subtract[Previous[Variable[y8]],Previous[Variable[y9]]]]]],Plus[Times[Differential[Variable[x9]],Subtract[Previous[Variable[x8]],Previous[Variable[x9]]]],Times[Differential[Variable[y9]],Subtract[Previous[Variable[y8]],Previous[Variable[y9]]]]]]],Equal[Subtract[Times[Differential[Variable[x8]],Subtract[Previous[Variable[y8]],Previous[Variable[y9]]]],Times[Differential[Variable[y8]],Subtract[Previous[Variable[x8]],Previous[Variable[x9]]]]],Subtract[Times[Previous[Differential[Variable[x8]]],Subtract[Previous[Variable[y8]],Previous[Variable[y9]]]],Times[Previous[Differential[Variable[y8]]],Subtract[Previous[Variable[x8]],Previous[Variable[x9]]]]]]],Equal[Subtract[Times[Differential[Variable[x9]],Subtract[Previous[Variable[y8]],Previous[Variable[y9]]]],Times[Differential[Variable[y9]],Subtract[Previous[Variable[x8]],Previous[Variable[x9]]]]],Subtract[Times[Previous[Differential[Variable[x9]]],Subtract[Previous[Variable[y8]],Previous[Variable[y9]]]],Times[Previous[Differential[Variable[y9]]],Subtract[Previous[Variable[x8]],Previous[Variable[x9]]]]]]]]]]]]]]]],Parallel[Parallel[Parallel[Parallel[Parallel[Weaker[Constraint[ConstraintCall<CONST(Variable[x0])>[Always[Equal[Differential[Differential[Variable[x0]]],Number[0]]]]],Constraint[ConstraintCall<WALL(Variable[x0],Number[1])>[Always[Ask[LogicalOr[Equal[Subtract[Previous[Variable[x0]],Number[1]],Negative[Number[10]]],Equal[Times[Number[10],Number[10]],Plus[Previous[Variable[x0]],Number[1]]]],Equal[Differential[Variable[x0]],Times[Negative[Number[1]],Previous[Differential[Variable[x0]]]]]]]]]],Weaker[Constraint[ConstraintCall<CONST(Variable[x1])>[Always[Equal[Differential[Differential[Variable[x1]]],Number[0]]]]],Constraint[ConstraintCall<WALL(Variable[x1],Number[1])>[Always[Ask[LogicalOr[Equal[Subtract[Previous[Variable[x1]],Number[1]],Negative[Number[10]]],Equal[Times[Number[10],Number[10]],Plus[Previous[Variable[x1]],Number[1]]]],Equal[Differential[Variable[x1]],Times[Negative[Number[1]],Previous[Differential[Variable[x1]]]]]]]]]]],Parallel[Weaker[Constraint[ConstraintCall<CONST(Variable[x2])>[Always[Equal[Differential[Differential[Variable[x2]]],Number[0]]]]],Constraint[ConstraintCall<WALL(Variable[x2],Number[1])>[Always[Ask[LogicalOr[Equal[Subtract[Previous[Variable[x2]],Number[1]],Negative[Number[10]]],Equal[Times[Number[10],Number[10]],Plus[Previous[Variable[x2]],Number[1]]]],Equal[Differential[Variable[x2]],Times[Negative[Number[1]],Previous[Differential[Variable[x2]]]]]]]]]],Weaker[Constraint[ConstraintCall<CONST(Variable[x3])>[Always[Equal[Differential[Differential[Variable[x3]]],Number[0]]]]],Constraint[ConstraintCall<WALL(Variable[x3],Number[1])>[Always[Ask[LogicalOr[Equal[Subtract[Previous[Variable[x3]],Number[1]],Negative[Number[10]]],Equal[Times[Number[10],Number[10]],Plus[Previous[Variable[x3]],Number[1]]]],Equal[Differential[Variable[x3]],Times[Negative[Number[1]],Previous[Differential[Variable[x3]]]]]]]]]]]],Parallel[Parallel[Weaker[Constraint[ConstraintCall<CONST(Variable[x4])>[Always[Equal[Differential[Differential[Variable[x4]]],Number[0]]]]],Constraint[ConstraintCall<WALL(Variable[x4],Number[1])>[Always[Ask[LogicalOr[Equal[Subtract[Previous[Variable[x4]],Number[1]],Negative[Number[10]]],Equal[Times[Number[10],Number[10]],Plus[Previous[Variable[x4]],Number[1]]]],Equal[Differential[Variable[x4]],Times[Negative[Number[1]],Previous[Differential[Variable[x4]]]]]]]]]],Weaker[Constraint[ConstraintCall<CONST(Variable[x5])>[Always[Equal[Differential[Differential[Variable[x5]]],Number[0]]]]],Constraint[ConstraintCall<WALL(Variable[x5],Number[1])>[Always[Ask[LogicalOr[Equal[Subtract[Previous[Variable[x5]],Number[1]],Negative[Number[10]]],Equal[Times[Number[10],Number[10]],Plus[Previous[Variable[x5]],Number[1]]]],Equal[Differential[Variable[x5]],Times[Negative[Number[1]],Previous[Differential[Variable[x5]]]]]]]]]]],Parallel[Weaker[Constraint[ConstraintCall<CONST(Variable[x6])>[Always[Equal[Differential[Differential[Variable[x6]]],Number[0]]]]],Constraint[ConstraintCall<WALL(Variable[x6],Number[1])>[Always[Ask[LogicalOr[Equal[Subtract[Previous[Variable[x6]],Number[1]],Negative[Number[10]]],Equal[Times[Number[10],Number[10]],Plus[Previous[Variable[x6]],Number[1]]]],Equal[Differential[Variable[x6]],Times[Negative[Number[1]],Previous[Differential[Variable[x6]]]]]]]]]],Weaker[Constraint[ConstraintCall<CONST(Variable[x7])>[Always[Equal[Differential[Differential[Variable[x7]]],Number[0]]]]],Constraint[ConstraintCall<WALL(Variable[x7],Number[1])>[Always[Ask[LogicalOr[Equal[Subtract[Previous[Variable[x7]],Number[1]],Negative[Number[10]]],Equal[Times[Number[10],Number[10]],Plus[Previous[Variable[x7]],Number[1]]]],Equal[Differential[Variable[x7]],Times[Negative[Number[1]],Previous[Differential[Variable[x7]]]]]]]]]]]]],Parallel[Parallel[Parallel[Weaker[Constraint[ConstraintCall<CONST(Variable[x8])>[Always[Equal[Differential[Differential[Variable[x8]]],Number[0]]]]],Constraint[ConstraintCall<WALL(Variable[x8],Number[1])>[Always[Ask[LogicalOr[Equal[Subtract[Previous[Variable[x8]],Number[1]],Negative[Number[10]]],Equal[Times[Number[10],Number[10]],Plus[Previous[Variable[x8]],Number[1]]]],Equal[Differential[Variable[x8]],Times[Negative[Number[1]],Previous[Differential[Variable[x8]]]]]]]]]],Weaker[Constraint[ConstraintCall<CONST(Variable[x9])>[Always[Equal[Differential[Differential[Variable[x9]]],Number[0]]]]],Constraint[ConstraintCall<WALL(Variable[x9],Number[1])>[Always[Ask[LogicalOr[Equal[Subtract[Previous[Variable[x9]],Number[1]],Negative[Number[10]]],Equal[Times[Number[10],Number[10]],Plus[Previous[Variable[x9]],Number[1]]]],Equal[Differential[Variable[x9]],Times[Negative[Number[1]],Previous[Differential[Variable[x9]]]]]]]]]]],Parallel[Weaker[Constraint[ConstraintCall<CONST(Variable[y0])>[Always[Equal[Differential[Differential[Variable[y0]]],Number[0]]]]],Constraint[ConstraintCall<WALL(Variable[y0],Number[1])>[Always[Ask[LogicalOr[Equal[Subtract[Previous[Variable[y0]],Number[1]],Negative[Number[10]]],Equal[Times[Number[10],Number[10]],Plus[Previous[Variable[y0]],Number[1]]]],Equal[Differential[Variable[y0]],Times[Negative[Number[1]],Previous[Differential[Variable[y0]]]]]]]]]],Weaker[Constraint[ConstraintCall<CONST(Variable[y1])>[Always[Equal[Differential[Differential[Variable[y1]]],Number[0]]]]],Constraint[ConstraintCall<WALL(Variable[y1],Number[1])>[Always[Ask[LogicalOr[Equal[Subtract[Previous[Variable[y1]],Number[1]],Negative[Number[10]]],Equal[Times[Number[10],Number[10]],Plus[Previous[Variable[y1]],Number[1]]]],Equal[Differential[Variable[y1]],Times[Negative[Number[1]],Previous[Differential[Variable[y1]]]]]]]]]]]],Parallel[Parallel[Weaker[Constraint[ConstraintCall<CONST(Variable[y2])>[Always[Equal[Differential[Differential[Variable[y2]]],Number[0]]]]],Constraint[ConstraintCall<WALL(Variable[y2],Number[1])>[Always[Ask[LogicalOr[Equal[Subtract[Previous[Variable[y2]],Number[1]],Negative[Number[10]]],Equal[Times[Number[10],Number[10]],Plus[Previous[Variable[y2]],Number[1]]]],Equal[Differential[Variable[y2]],Times[Negative[Number[1]],Previous[Differential[Variable[y2]]]]]]]]]],Weaker[Constraint[ConstraintCall<CONST(Variable[y3])>[Always[Equal[Differential[Differential[Variable[y3]]],Number[0]]]]],Constraint[ConstraintCall<WALL(Variable[y3],Number[1])>[Always[Ask[LogicalOr[Equal[Subtract[Previous[Variable[y3]],Number[1]],Negative[Number[10]]],Equal[Times[Number[10],Number[10]],Plus[Previous[Variable[y3]],Number[1]]]],Equal[Differential[Variable[y3]],Times[Negative[Number[1]],Previous[Differential[Variable[y3]]]]]]]]]]],Parallel[Weaker[Constraint[ConstraintCall<CONST(Variable[y4])>[Always[Equal[Differential[Differential[Variable[y4]]],Number[0]]]]],Constraint[ConstraintCall<WALL(Variable[y4],Number[1])>[Always[Ask[LogicalOr[Equal[Subtract[Previous[Variable[y4]],Number[1]],Negative[Number[10]]],Equal[Times[Number[10],Number[10]],Plus[Previous[Variable[y4]],Number[1]]]],Equal[Differential[Variable[y4]],Times[Negative[Number[1]],Previous[Differential[Variable[y4]]]]]]]]]],Weaker[Constraint[ConstraintCall<CONST(Variable[y5])>[Always[Equal[Differential[Differential[Variable[y5]]],Number[0]]]]],Constraint[ConstraintCall<WALL(Variable[y5],Number[1])>[Always[Ask[LogicalOr[Equal[Subtract[Previous[Variable[y5]],Number[1]],Negative[Number[10]]],Equal[Times[Number[10],Number[10]],Plus[Previous[Variable[y5]],Number[1]]]],Equal[Differential[Variable[y5]],Times[Negative[Number[1]],Previous[Differential[Variable[y5]]]]]]]]]]]]]],Parallel[Parallel[Weaker[Constraint[ConstraintCall<CONST(Variable[y6])>[Always[Equal[Differential[Differential[Variable[y6]]],Number[0]]]]],Constraint[ConstraintCall<WALL(Variable[y6],Number[1])>[Always[Ask[LogicalOr[Equal[Subtract[Previous[Variable[y6]],Number[1]],Negative[Number[10]]],Equal[Times[Number[10],Number[10]],Plus[Previous[Variable[y6]],Number[1]]]],Equal[Differential[Variable[y6]],Times[Negative[Number[1]],Previous[Differential[Variable[y6]]]]]]]]]],Weaker[Constraint[ConstraintCall<CONST(Variable[y7])>[Always[Equal[Differential[Differential[Variable[y7]]],Number[0]]]]],Constraint[ConstraintCall<WALL(Variable[y7],Number[1])>[Always[Ask[LogicalOr[Equal[Subtract[Previous[Variable[y7]],Number[1]],Negative[Number[10]]],Equal[Times[Number[10],Number[10]],Plus[Previous[Variable[y7]],Number[1]]]],Equal[Differential[Variable[y7]],Times[Negative[Number[1]],Previous[Differential[Variable[y7]]]]]]]]]]],Parallel[Weaker[Constraint[ConstraintCall<CONST(Variable[y8])>[Always[Equal[Differential[Differential[Variable[y8]]],Number[0]]]]],Constraint[ConstraintCall<WALL(Variable[y8],Number[1])>[Always[Ask[LogicalOr[Equal[Subtract[Previous[Variable[y8]],Number[1]],Negative[Number[10]]],Equal[Times[Number[10],Number[10]],Plus[Previous[Variable[y8]],Number[1]]]],Equal[Differential[Variable[y8]],Times[Negative[Number[1]],Previous[Differential[Variable[y8]]]]]]]]]],Weaker[Constraint[ConstraintCall<CONST(Variable[y9])>[Always[Equal[Differential[Differential[Variable[y9]]],Number[0]]]]],Constraint[ConstraintCall<WALL(Variable[y9],Number[1])>[Always[Ask[LogicalOr[Equal[Subtract[Previous[Variable[y9]],Number[1]],Negative[Number[10]]],Equal[Times[Number[10],Number[10]],Plus[Previous[Variable[y9]],Number[1]]]],Equal[Differential[Variable[y9]],Times[Negative[Number[1]],Previous[Differential[Variable[y9]]]]]]]]]]]]]]
--- variables ---
x0 : 2
x1 : 2
x2 : 2
x3 : 2
x4 : 2
x5 : 2
x6 : 2
x7 : 2
x8 : 2
x9 : 2
y0 : 2
y1 : 2
y2 : 2
y3 : 2
y4 : 2
y5 : 2
y6 : 2
y7 : 2
y8 : 2
y9 : 2

@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetVariables[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$714: Null

@Backend.cpp 427 function: call   resetVariables
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$716: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux1,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$720: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux2,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$724: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux3,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$728: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux4,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$732: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux5,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$736: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux6,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$740: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux7,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$744: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux8,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$748: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux9,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$752: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$756: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy1,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$760: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy2,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$764: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy3,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$768: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy4,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$772: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy5,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$776: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy6,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$780: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy7,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$784: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy8,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$788: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy9,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$792: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux0,
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$796: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux1,
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$800: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux2,
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$804: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux3,
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$808: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux4,
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$812: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux5,
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$816: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux6,
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$820: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux7,
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$824: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux8,
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$828: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux9,
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$832: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy0,
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$836: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy1,
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$840: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy2,
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$844: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy3,
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$848: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy4,
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$852: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy5,
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$856: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy6,
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$860: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy7,
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$864: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy8,
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$868: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy9,
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$872: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux0,
	2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$876: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux1,
	2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$880: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux2,
	2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$884: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux3,
	2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$888: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux4,
	2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$892: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux5,
	2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$896: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux6,
	2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$900: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux7,
	2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$904: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux8,
	2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$908: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[ux9,
	2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$912: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy0,
	2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$916: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy1,
	2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$920: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy2,
	2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$924: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy3,
	2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$928: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy4,
	2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$932: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy5,
	2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$936: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy6,
	2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$940: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy7,
	2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$944: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy8,
	2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$948: Null

@Backend.cpp 427 function: call   addVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addVariable[uy9,
	2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$952: Null

@Backend.cpp 427 function: call   addVariable
@SequentialSimulator.cpp 50 function: dfs   *current: %% PhaseType: 0
%% id: 0
%% step: -1
%% no parent
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% end_time: 0
--- variable map ---

--- parameter constraint ---
{}

@Simulator.cpp 165 function: process_one_todo   
--- Current Todo ---
%% PhaseType: 1
%% id: 1
%% step: 0
%% parent_id:0
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: 0
--- variable map ---

--- parameter constraint ---
{}

@Simulator.cpp 166 function: process_one_todo   
--- prev map ---

@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
setCurrentTime[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$956: Null

@Backend.cpp 427 function: call   setCurrentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$958: Null

@Backend.cpp 427 function: call   resetConstraint
@PhaseSimulator.cpp 162 function: make_results_from_todo   *todo: %% PhaseType: 1
%% id: 1
%% step: 0
%% parent_id:0
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: 0
--- variable map ---

--- parameter constraint ---
{}

@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
clearPrevConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$960: Null

@Backend.cpp 427 function: call   clearPrevConstraint
@PhaseSimulator.cpp 199 function: make_results_from_todo   parameter_cons: {}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addParameterConstraint[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pConstraint", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pCons", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$962: Null

@Backend.cpp 427 function: call   addParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addParameterConstraint[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pConstraint", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pCons", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$964: Null

@Backend.cpp 427 function: call   addParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addAssumption[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"as in addAssumption:", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$966: Null

@Backend.cpp 427 function: call   addAssumption
@PhaseSimulator.cpp 326 function: simulate_ms   
--- next unadopted module set ---

@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 398 function: check_consistency   related[1/20]: {x0=0, x0'=10, x0''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$968: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[ux0 == 0 && Derivative[1][dx0] == 10 && Derivative[2][dx0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux0 == 0 && Derivative[1][dx0] == 10 && Derivative[2][dx0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$972: SimplifyCount[And] + SimplifyCount[ux0 == 0] + SimplifyCount[Derivative[1][dx0] == 10] + SimplifyCount[Derivative[2][dx0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[ux0 == 0] + SimplifyCount[Derivative[1][dx0] == 10] + SimplifyCount[Derivative[2][dx0] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.003083}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$970: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[ux0 == 0 && Derivative[1][dx0] == 10 && Derivative[2][dx0] == 0,
	True,
	True,
	True,
	{},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux0 == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$980: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[ux0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx0] == 10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$982: SimplifyCount[10] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$984: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[ux0]}, {1, SimplifyCount[10] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx0]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx0]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000146}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$986: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux0 == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$989: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[ux0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx0] == 10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$991: SimplifyCount[10] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$993: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[ux0]}, {1, SimplifyCount[10] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx0]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx0]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000136}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$979: True, resultConstraint: ux0 == 0 && Derivative[1][dx0] == 10 && Derivative[2][dx0] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$979: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$978: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[ux0 == 0 && Derivative[1][dx0] == 10 && Derivative[2][dx0] == 0,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1003[[i$1003]]: ux0 == 0, newVars$1003[[1]]: ux0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1003: ux0 == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1003[[i$1003]]: Derivative[1][dx0] == 10, newVars$1003[[1]]: Derivative[1][dx0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1003: Derivative[1][dx0] == 10

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1003[[i$1003]]: Derivative[2][dx0] == 0, newVars$1003[[1]]: Derivative[2][dx0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1003: Derivative[2][dx0] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1002: ux0 == 0 && Derivative[1][dx0] == 10 && Derivative[2][dx0] == 0, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{ux0 == 0, Derivative[1][dx0] == 10, Derivative[2][dx0] == 0}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$1002: {{{{ux0, 0}, 0, "0"}, {{dx0, 1}, 0, "10"}, {{dx0, 2}, 0, "0"}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1001: {{{{ux0, 0}, 0, "0"}, {{dx0, 1}, 0, "10"}, {{dx0, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1012: 504

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[2/20]: {y0=0, y0'=1, y0''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1014: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[uy0 == 0 && Derivative[1][dy0] == 1 && Derivative[2][dy0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy0 == 0 && Derivative[1][dy0] == 1 && Derivative[2][dy0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1018: SimplifyCount[And] + SimplifyCount[uy0 == 0] + SimplifyCount[Derivative[1][dy0] == 1] + SimplifyCount[Derivative[2][dy0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[uy0 == 0] + SimplifyCount[Derivative[1][dy0] == 1] + SimplifyCount[Derivative[2][dy0] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000734}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1016: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[uy0 == 0 && Derivative[1][dy0] == 1 && Derivative[2][dy0] == 0,
	True,
	True,
	True,
	{},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy0 == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1025: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[uy0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy0] == 1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1027: SimplifyCount[1] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1029: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[uy0]}, {1, SimplifyCount[1] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy0]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy0]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000135}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$1031: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy0 == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1032: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[uy0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy0] == 1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1034: SimplifyCount[1] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1036: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[uy0]}, {1, SimplifyCount[1] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy0]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy0]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000126}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$1024: True, resultConstraint: uy0 == 0 && Derivative[1][dy0] == 1 && Derivative[2][dy0] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$1024: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1023: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[uy0 == 0 && Derivative[1][dy0] == 1 && Derivative[2][dy0] == 0,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1046[[i$1046]]: uy0 == 0, newVars$1046[[1]]: uy0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1046: uy0 == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1046[[i$1046]]: Derivative[1][dy0] == 1, newVars$1046[[1]]: Derivative[1][dy0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1046: Derivative[1][dy0] == 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1046[[i$1046]]: Derivative[2][dy0] == 0, newVars$1046[[1]]: Derivative[2][dy0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1046: Derivative[2][dy0] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1045: uy0 == 0 && Derivative[1][dy0] == 1 && Derivative[2][dy0] == 0, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{uy0 == 0, Derivative[1][dy0] == 1, Derivative[2][dy0] == 0}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$1045: {{{{uy0, 0}, 0, "0"}, {{dy0, 1}, 0, "1"}, {{dy0, 2}, 0, "0"}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1044: {{{{uy0, 0}, 0, "0"}, {{dy0, 1}, 0, "1"}, {{dy0, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1055: 504

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[3/20]: {x1=5*2, x1'=0, x1''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1057: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[ux1 == 10 && Derivative[1][dx1] == 0 && Derivative[2][dx1] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux1 == 10 && Derivative[1][dx1] == 0 && Derivative[2][dx1] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1061: SimplifyCount[And] + SimplifyCount[ux1 == 10] + SimplifyCount[Derivative[1][dx1] == 0] + SimplifyCount[Derivative[2][dx1] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[ux1 == 10] + SimplifyCount[Derivative[1][dx1] == 0] + SimplifyCount[Derivative[2][dx1] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000695}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1059: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[ux1 == 10 && Derivative[1][dx1] == 0 && Derivative[2][dx1] == 0,
	True,
	True,
	True,
	{},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux1 == 10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1068: SimplifyCount[10] + SimplifyCount[Equal] + SimplifyCount[ux1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx1] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1070: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx1] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1072: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[10] + SimplifyCount[Equal] + SimplifyCount[ux1]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx1]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000134}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$1074: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux1 == 10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1075: SimplifyCount[10] + SimplifyCount[Equal] + SimplifyCount[ux1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx1] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1077: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx1] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1079: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[10] + SimplifyCount[Equal] + SimplifyCount[ux1]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx1]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.00012}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$1067: True, resultConstraint: ux1 == 10 && Derivative[1][dx1] == 0 && Derivative[2][dx1] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$1067: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1066: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[ux1 == 10 && Derivative[1][dx1] == 0 && Derivative[2][dx1] == 0,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1089[[i$1089]]: ux1 == 10, newVars$1089[[1]]: ux1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1089: ux1 == 10

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1089[[i$1089]]: Derivative[1][dx1] == 0, newVars$1089[[1]]: Derivative[1][dx1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1089: Derivative[1][dx1] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1089[[i$1089]]: Derivative[2][dx1] == 0, newVars$1089[[1]]: Derivative[2][dx1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1089: Derivative[2][dx1] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1088: ux1 == 10 && Derivative[1][dx1] == 0 && Derivative[2][dx1] == 0, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{ux1 == 10, Derivative[1][dx1] == 0, Derivative[2][dx1] == 0}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$1088: {{{{ux1, 0}, 0, "10"}, {{dx1, 1}, 0, "0"}, {{dx1, 2}, 0, "0"}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1087: {{{{ux1, 0}, 0, "10"}, {{dx1, 1}, 0, "0"}, {{dx1, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1098: 504

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[4/20]: {y1=5*2, y1'=0, y1''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1100: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[uy1 == 10 && Derivative[1][dy1] == 0 && Derivative[2][dy1] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy1 == 10 && Derivative[1][dy1] == 0 && Derivative[2][dy1] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1104: SimplifyCount[And] + SimplifyCount[uy1 == 10] + SimplifyCount[Derivative[1][dy1] == 0] + SimplifyCount[Derivative[2][dy1] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[uy1 == 10] + SimplifyCount[Derivative[1][dy1] == 0] + SimplifyCount[Derivative[2][dy1] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00067}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1102: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[uy1 == 10 && Derivative[1][dy1] == 0 && Derivative[2][dy1] == 0,
	True,
	True,
	True,
	{},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy1 == 10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1111: SimplifyCount[10] + SimplifyCount[Equal] + SimplifyCount[uy1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy1] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1113: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy1] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1115: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[10] + SimplifyCount[Equal] + SimplifyCount[uy1]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy1]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000133}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$1117: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy1 == 10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1118: SimplifyCount[10] + SimplifyCount[Equal] + SimplifyCount[uy1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy1] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1120: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy1] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1122: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[10] + SimplifyCount[Equal] + SimplifyCount[uy1]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy1]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000126}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$1110: True, resultConstraint: uy1 == 10 && Derivative[1][dy1] == 0 && Derivative[2][dy1] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$1110: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1109: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[uy1 == 10 && Derivative[1][dy1] == 0 && Derivative[2][dy1] == 0,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1132[[i$1132]]: uy1 == 10, newVars$1132[[1]]: uy1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1132: uy1 == 10

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1132[[i$1132]]: Derivative[1][dy1] == 0, newVars$1132[[1]]: Derivative[1][dy1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1132: Derivative[1][dy1] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1132[[i$1132]]: Derivative[2][dy1] == 0, newVars$1132[[1]]: Derivative[2][dy1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1132: Derivative[2][dy1] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1131: uy1 == 10 && Derivative[1][dy1] == 0 && Derivative[2][dy1] == 0, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{uy1 == 10, Derivative[1][dy1] == 0, Derivative[2][dy1] == 0}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$1131: {{{{uy1, 0}, 0, "10"}, {{dy1, 1}, 0, "0"}, {{dy1, 2}, 0, "0"}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1130: {{{{uy1, 0}, 0, "10"}, {{dy1, 1}, 0, "0"}, {{dy1, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1141: 504

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[5/20]: {x2=5*3, x2'=0, x2''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1143: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[ux2 == 15 && Derivative[1][dx2] == 0 && Derivative[2][dx2] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux2 == 15 && Derivative[1][dx2] == 0 && Derivative[2][dx2] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1147: SimplifyCount[And] + SimplifyCount[ux2 == 15] + SimplifyCount[Derivative[1][dx2] == 0] + SimplifyCount[Derivative[2][dx2] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[ux2 == 15] + SimplifyCount[Derivative[1][dx2] == 0] + SimplifyCount[Derivative[2][dx2] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000669}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1145: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[ux2 == 15 && Derivative[1][dx2] == 0 && Derivative[2][dx2] == 0,
	True,
	True,
	True,
	{},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux2 == 15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1154: SimplifyCount[15] + SimplifyCount[Equal] + SimplifyCount[ux2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx2] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1156: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx2]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx2] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1158: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx2]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[15] + SimplifyCount[Equal] + SimplifyCount[ux2]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx2]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx2]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000133}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$1160: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux2 == 15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1161: SimplifyCount[15] + SimplifyCount[Equal] + SimplifyCount[ux2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx2] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1163: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx2]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx2] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1165: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx2]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[15] + SimplifyCount[Equal] + SimplifyCount[ux2]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx2]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx2]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000124}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$1153: True, resultConstraint: ux2 == 15 && Derivative[1][dx2] == 0 && Derivative[2][dx2] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$1153: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1152: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[ux2 == 15 && Derivative[1][dx2] == 0 && Derivative[2][dx2] == 0,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1175[[i$1175]]: ux2 == 15, newVars$1175[[1]]: ux2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1175: ux2 == 15

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1175[[i$1175]]: Derivative[1][dx2] == 0, newVars$1175[[1]]: Derivative[1][dx2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1175: Derivative[1][dx2] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1175[[i$1175]]: Derivative[2][dx2] == 0, newVars$1175[[1]]: Derivative[2][dx2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1175: Derivative[2][dx2] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1174: ux2 == 15 && Derivative[1][dx2] == 0 && Derivative[2][dx2] == 0, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{ux2 == 15, Derivative[1][dx2] == 0, Derivative[2][dx2] == 0}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$1174: {{{{ux2, 0}, 0, "15"}, {{dx2, 1}, 0, "0"}, {{dx2, 2}, 0, "0"}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1173: {{{{ux2, 0}, 0, "15"}, {{dx2, 1}, 0, "0"}, {{dx2, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1184: 504

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[6/20]: {y2=5*3, y2'=0, y2''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1186: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[uy2 == 15 && Derivative[1][dy2] == 0 && Derivative[2][dy2] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy2 == 15 && Derivative[1][dy2] == 0 && Derivative[2][dy2] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1190: SimplifyCount[And] + SimplifyCount[uy2 == 15] + SimplifyCount[Derivative[1][dy2] == 0] + SimplifyCount[Derivative[2][dy2] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[uy2 == 15] + SimplifyCount[Derivative[1][dy2] == 0] + SimplifyCount[Derivative[2][dy2] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000675}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1188: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[uy2 == 15 && Derivative[1][dy2] == 0 && Derivative[2][dy2] == 0,
	True,
	True,
	True,
	{},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy2 == 15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1197: SimplifyCount[15] + SimplifyCount[Equal] + SimplifyCount[uy2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy2] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1199: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy2]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy2] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1201: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy2]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[15] + SimplifyCount[Equal] + SimplifyCount[uy2]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy2]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy2]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.00013}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$1203: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy2 == 15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1204: SimplifyCount[15] + SimplifyCount[Equal] + SimplifyCount[uy2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy2] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1206: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy2]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy2] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1208: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy2]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[15] + SimplifyCount[Equal] + SimplifyCount[uy2]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy2]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy2]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000118}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$1196: True, resultConstraint: uy2 == 15 && Derivative[1][dy2] == 0 && Derivative[2][dy2] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$1196: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1195: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[uy2 == 15 && Derivative[1][dy2] == 0 && Derivative[2][dy2] == 0,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1218[[i$1218]]: uy2 == 15, newVars$1218[[1]]: uy2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1218: uy2 == 15

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1218[[i$1218]]: Derivative[1][dy2] == 0, newVars$1218[[1]]: Derivative[1][dy2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1218: Derivative[1][dy2] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1218[[i$1218]]: Derivative[2][dy2] == 0, newVars$1218[[1]]: Derivative[2][dy2]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1218: Derivative[2][dy2] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1217: uy2 == 15 && Derivative[1][dy2] == 0 && Derivative[2][dy2] == 0, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{uy2 == 15, Derivative[1][dy2] == 0, Derivative[2][dy2] == 0}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$1217: {{{{uy2, 0}, 0, "15"}, {{dy2, 1}, 0, "0"}, {{dy2, 2}, 0, "0"}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1216: {{{{uy2, 0}, 0, "15"}, {{dy2, 1}, 0, "0"}, {{dy2, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1227: 504

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[7/20]: {x3=5*4, x3'=0, x3''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1229: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[ux3 == 20 && Derivative[1][dx3] == 0 && Derivative[2][dx3] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux3 == 20 && Derivative[1][dx3] == 0 && Derivative[2][dx3] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1233: SimplifyCount[And] + SimplifyCount[ux3 == 20] + SimplifyCount[Derivative[1][dx3] == 0] + SimplifyCount[Derivative[2][dx3] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[ux3 == 20] + SimplifyCount[Derivative[1][dx3] == 0] + SimplifyCount[Derivative[2][dx3] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000669}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1231: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[ux3 == 20 && Derivative[1][dx3] == 0 && Derivative[2][dx3] == 0,
	True,
	True,
	True,
	{},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux3 == 20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1240: SimplifyCount[20] + SimplifyCount[Equal] + SimplifyCount[ux3]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx3] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1242: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx3]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx3] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1244: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx3]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[20] + SimplifyCount[Equal] + SimplifyCount[ux3]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx3]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx3]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000132}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$1246: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux3 == 20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1247: SimplifyCount[20] + SimplifyCount[Equal] + SimplifyCount[ux3]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx3] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1249: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx3]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx3] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1251: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx3]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[20] + SimplifyCount[Equal] + SimplifyCount[ux3]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx3]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx3]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000122}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$1239: True, resultConstraint: ux3 == 20 && Derivative[1][dx3] == 0 && Derivative[2][dx3] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$1239: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1238: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[ux3 == 20 && Derivative[1][dx3] == 0 && Derivative[2][dx3] == 0,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1261[[i$1261]]: ux3 == 20, newVars$1261[[1]]: ux3

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1261: ux3 == 20

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1261[[i$1261]]: Derivative[1][dx3] == 0, newVars$1261[[1]]: Derivative[1][dx3]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1261: Derivative[1][dx3] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1261[[i$1261]]: Derivative[2][dx3] == 0, newVars$1261[[1]]: Derivative[2][dx3]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1261: Derivative[2][dx3] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1260: ux3 == 20 && Derivative[1][dx3] == 0 && Derivative[2][dx3] == 0, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{ux3 == 20, Derivative[1][dx3] == 0, Derivative[2][dx3] == 0}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$1260: {{{{ux3, 0}, 0, "20"}, {{dx3, 1}, 0, "0"}, {{dx3, 2}, 0, "0"}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1259: {{{{ux3, 0}, 0, "20"}, {{dx3, 1}, 0, "0"}, {{dx3, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1270: 504

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[8/20]: {y3=5*4, y3'=0, y3''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1272: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[uy3 == 20 && Derivative[1][dy3] == 0 && Derivative[2][dy3] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy3 == 20 && Derivative[1][dy3] == 0 && Derivative[2][dy3] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1276: SimplifyCount[And] + SimplifyCount[uy3 == 20] + SimplifyCount[Derivative[1][dy3] == 0] + SimplifyCount[Derivative[2][dy3] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[uy3 == 20] + SimplifyCount[Derivative[1][dy3] == 0] + SimplifyCount[Derivative[2][dy3] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000677}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1274: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[uy3 == 20 && Derivative[1][dy3] == 0 && Derivative[2][dy3] == 0,
	True,
	True,
	True,
	{},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy3 == 20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1283: SimplifyCount[20] + SimplifyCount[Equal] + SimplifyCount[uy3]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy3] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1285: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy3]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy3] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1287: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy3]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[20] + SimplifyCount[Equal] + SimplifyCount[uy3]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy3]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy3]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000132}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$1289: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy3 == 20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1290: SimplifyCount[20] + SimplifyCount[Equal] + SimplifyCount[uy3]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy3] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1292: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy3]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy3] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1294: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy3]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[20] + SimplifyCount[Equal] + SimplifyCount[uy3]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy3]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy3]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000126}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$1282: True, resultConstraint: uy3 == 20 && Derivative[1][dy3] == 0 && Derivative[2][dy3] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$1282: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1281: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[uy3 == 20 && Derivative[1][dy3] == 0 && Derivative[2][dy3] == 0,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1304[[i$1304]]: uy3 == 20, newVars$1304[[1]]: uy3

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1304: uy3 == 20

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1304[[i$1304]]: Derivative[1][dy3] == 0, newVars$1304[[1]]: Derivative[1][dy3]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1304: Derivative[1][dy3] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1304[[i$1304]]: Derivative[2][dy3] == 0, newVars$1304[[1]]: Derivative[2][dy3]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1304: Derivative[2][dy3] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1303: uy3 == 20 && Derivative[1][dy3] == 0 && Derivative[2][dy3] == 0, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{uy3 == 20, Derivative[1][dy3] == 0, Derivative[2][dy3] == 0}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$1303: {{{{uy3, 0}, 0, "20"}, {{dy3, 1}, 0, "0"}, {{dy3, 2}, 0, "0"}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1302: {{{{uy3, 0}, 0, "20"}, {{dy3, 1}, 0, "0"}, {{dy3, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1313: 504

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[9/20]: {x4=5*5, x4'=0, x4''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1315: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[ux4 == 25 && Derivative[1][dx4] == 0 && Derivative[2][dx4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux4 == 25 && Derivative[1][dx4] == 0 && Derivative[2][dx4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1319: SimplifyCount[And] + SimplifyCount[ux4 == 25] + SimplifyCount[Derivative[1][dx4] == 0] + SimplifyCount[Derivative[2][dx4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[ux4 == 25] + SimplifyCount[Derivative[1][dx4] == 0] + SimplifyCount[Derivative[2][dx4] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000665}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1317: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[ux4 == 25 && Derivative[1][dx4] == 0 && Derivative[2][dx4] == 0,
	True,
	True,
	True,
	{},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux4 == 25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1326: SimplifyCount[25] + SimplifyCount[Equal] + SimplifyCount[ux4]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1328: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1330: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[25] + SimplifyCount[Equal] + SimplifyCount[ux4]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx4]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx4]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000137}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$1332: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux4 == 25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1333: SimplifyCount[25] + SimplifyCount[Equal] + SimplifyCount[ux4]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1335: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1337: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[25] + SimplifyCount[Equal] + SimplifyCount[ux4]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx4]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx4]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000125}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$1325: True, resultConstraint: ux4 == 25 && Derivative[1][dx4] == 0 && Derivative[2][dx4] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$1325: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1324: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[ux4 == 25 && Derivative[1][dx4] == 0 && Derivative[2][dx4] == 0,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1347[[i$1347]]: ux4 == 25, newVars$1347[[1]]: ux4

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1347: ux4 == 25

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1347[[i$1347]]: Derivative[1][dx4] == 0, newVars$1347[[1]]: Derivative[1][dx4]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1347: Derivative[1][dx4] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1347[[i$1347]]: Derivative[2][dx4] == 0, newVars$1347[[1]]: Derivative[2][dx4]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1347: Derivative[2][dx4] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1346: ux4 == 25 && Derivative[1][dx4] == 0 && Derivative[2][dx4] == 0, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{ux4 == 25, Derivative[1][dx4] == 0, Derivative[2][dx4] == 0}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$1346: {{{{ux4, 0}, 0, "25"}, {{dx4, 1}, 0, "0"}, {{dx4, 2}, 0, "0"}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1345: {{{{ux4, 0}, 0, "25"}, {{dx4, 1}, 0, "0"}, {{dx4, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1356: 504

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[10/20]: {y4=5*5, y4'=0, y4''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1358: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[uy4 == 25 && Derivative[1][dy4] == 0 && Derivative[2][dy4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy4 == 25 && Derivative[1][dy4] == 0 && Derivative[2][dy4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1362: SimplifyCount[And] + SimplifyCount[uy4 == 25] + SimplifyCount[Derivative[1][dy4] == 0] + SimplifyCount[Derivative[2][dy4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[uy4 == 25] + SimplifyCount[Derivative[1][dy4] == 0] + SimplifyCount[Derivative[2][dy4] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000687}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1360: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[uy4 == 25 && Derivative[1][dy4] == 0 && Derivative[2][dy4] == 0,
	True,
	True,
	True,
	{},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy4 == 25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1369: SimplifyCount[25] + SimplifyCount[Equal] + SimplifyCount[uy4]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1371: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1373: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[25] + SimplifyCount[Equal] + SimplifyCount[uy4]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy4]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy4]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000133}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$1375: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy4 == 25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1376: SimplifyCount[25] + SimplifyCount[Equal] + SimplifyCount[uy4]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1378: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1380: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[25] + SimplifyCount[Equal] + SimplifyCount[uy4]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy4]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy4]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000101}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$1368: True, resultConstraint: uy4 == 25 && Derivative[1][dy4] == 0 && Derivative[2][dy4] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$1368: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1367: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[uy4 == 25 && Derivative[1][dy4] == 0 && Derivative[2][dy4] == 0,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1390[[i$1390]]: uy4 == 25, newVars$1390[[1]]: uy4

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1390: uy4 == 25

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1390[[i$1390]]: Derivative[1][dy4] == 0, newVars$1390[[1]]: Derivative[1][dy4]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1390: Derivative[1][dy4] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1390[[i$1390]]: Derivative[2][dy4] == 0, newVars$1390[[1]]: Derivative[2][dy4]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1390: Derivative[2][dy4] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1389: uy4 == 25 && Derivative[1][dy4] == 0 && Derivative[2][dy4] == 0, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{uy4 == 25, Derivative[1][dy4] == 0, Derivative[2][dy4] == 0}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$1389: {{{{uy4, 0}, 0, "25"}, {{dy4, 1}, 0, "0"}, {{dy4, 2}, 0, "0"}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1388: {{{{uy4, 0}, 0, "25"}, {{dy4, 1}, 0, "0"}, {{dy4, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1399: 504

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[11/20]: {x5=5*6, x5'=0, x5''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1401: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[ux5 == 30 && Derivative[1][dx5] == 0 && Derivative[2][dx5] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux5 == 30 && Derivative[1][dx5] == 0 && Derivative[2][dx5] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1405: SimplifyCount[And] + SimplifyCount[ux5 == 30] + SimplifyCount[Derivative[1][dx5] == 0] + SimplifyCount[Derivative[2][dx5] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[ux5 == 30] + SimplifyCount[Derivative[1][dx5] == 0] + SimplifyCount[Derivative[2][dx5] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000672}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1403: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[ux5 == 30 && Derivative[1][dx5] == 0 && Derivative[2][dx5] == 0,
	True,
	True,
	True,
	{},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux5 == 30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1412: SimplifyCount[30] + SimplifyCount[Equal] + SimplifyCount[ux5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx5] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1414: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx5]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx5] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1416: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx5]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[30] + SimplifyCount[Equal] + SimplifyCount[ux5]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx5]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx5]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000134}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$1418: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux5 == 30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1419: SimplifyCount[30] + SimplifyCount[Equal] + SimplifyCount[ux5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx5] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1421: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx5]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx5] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1423: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx5]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[30] + SimplifyCount[Equal] + SimplifyCount[ux5]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx5]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx5]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.00012}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$1411: True, resultConstraint: ux5 == 30 && Derivative[1][dx5] == 0 && Derivative[2][dx5] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$1411: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1410: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[ux5 == 30 && Derivative[1][dx5] == 0 && Derivative[2][dx5] == 0,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1433[[i$1433]]: ux5 == 30, newVars$1433[[1]]: ux5

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1433: ux5 == 30

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1433[[i$1433]]: Derivative[1][dx5] == 0, newVars$1433[[1]]: Derivative[1][dx5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1433: Derivative[1][dx5] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1433[[i$1433]]: Derivative[2][dx5] == 0, newVars$1433[[1]]: Derivative[2][dx5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1433: Derivative[2][dx5] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1432: ux5 == 30 && Derivative[1][dx5] == 0 && Derivative[2][dx5] == 0, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{ux5 == 30, Derivative[1][dx5] == 0, Derivative[2][dx5] == 0}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$1432: {{{{ux5, 0}, 0, "30"}, {{dx5, 1}, 0, "0"}, {{dx5, 2}, 0, "0"}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1431: {{{{ux5, 0}, 0, "30"}, {{dx5, 1}, 0, "0"}, {{dx5, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1442: 504

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[12/20]: {y5=5*6, y5'=0, y5''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1444: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[uy5 == 30 && Derivative[1][dy5] == 0 && Derivative[2][dy5] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy5 == 30 && Derivative[1][dy5] == 0 && Derivative[2][dy5] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1448: SimplifyCount[And] + SimplifyCount[uy5 == 30] + SimplifyCount[Derivative[1][dy5] == 0] + SimplifyCount[Derivative[2][dy5] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[uy5 == 30] + SimplifyCount[Derivative[1][dy5] == 0] + SimplifyCount[Derivative[2][dy5] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000688}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1446: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[uy5 == 30 && Derivative[1][dy5] == 0 && Derivative[2][dy5] == 0,
	True,
	True,
	True,
	{},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy5 == 30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1455: SimplifyCount[30] + SimplifyCount[Equal] + SimplifyCount[uy5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy5] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1457: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy5]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy5] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1459: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy5]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[30] + SimplifyCount[Equal] + SimplifyCount[uy5]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy5]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy5]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000132}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$1461: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy5 == 30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1462: SimplifyCount[30] + SimplifyCount[Equal] + SimplifyCount[uy5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy5] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1464: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy5]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy5] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1466: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy5]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[30] + SimplifyCount[Equal] + SimplifyCount[uy5]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy5]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy5]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000101}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$1454: True, resultConstraint: uy5 == 30 && Derivative[1][dy5] == 0 && Derivative[2][dy5] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$1454: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1453: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[uy5 == 30 && Derivative[1][dy5] == 0 && Derivative[2][dy5] == 0,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1476[[i$1476]]: uy5 == 30, newVars$1476[[1]]: uy5

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1476: uy5 == 30

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1476[[i$1476]]: Derivative[1][dy5] == 0, newVars$1476[[1]]: Derivative[1][dy5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1476: Derivative[1][dy5] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1476[[i$1476]]: Derivative[2][dy5] == 0, newVars$1476[[1]]: Derivative[2][dy5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1476: Derivative[2][dy5] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1475: uy5 == 30 && Derivative[1][dy5] == 0 && Derivative[2][dy5] == 0, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{uy5 == 30, Derivative[1][dy5] == 0, Derivative[2][dy5] == 0}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$1475: {{{{uy5, 0}, 0, "30"}, {{dy5, 1}, 0, "0"}, {{dy5, 2}, 0, "0"}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1474: {{{{uy5, 0}, 0, "30"}, {{dy5, 1}, 0, "0"}, {{dy5, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1485: 504

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[13/20]: {x6=5*7, x6'=0, x6''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1487: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[ux6 == 35 && Derivative[1][dx6] == 0 && Derivative[2][dx6] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux6 == 35 && Derivative[1][dx6] == 0 && Derivative[2][dx6] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1491: SimplifyCount[And] + SimplifyCount[ux6 == 35] + SimplifyCount[Derivative[1][dx6] == 0] + SimplifyCount[Derivative[2][dx6] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[ux6 == 35] + SimplifyCount[Derivative[1][dx6] == 0] + SimplifyCount[Derivative[2][dx6] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000678}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1489: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[ux6 == 35 && Derivative[1][dx6] == 0 && Derivative[2][dx6] == 0,
	True,
	True,
	True,
	{},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux6 == 35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1498: SimplifyCount[35] + SimplifyCount[Equal] + SimplifyCount[ux6]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx6] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1500: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx6]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx6] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1502: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx6]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[35] + SimplifyCount[Equal] + SimplifyCount[ux6]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx6]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx6]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000144}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$1504: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux6 == 35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1505: SimplifyCount[35] + SimplifyCount[Equal] + SimplifyCount[ux6]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx6] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1507: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx6]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx6] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1509: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx6]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[35] + SimplifyCount[Equal] + SimplifyCount[ux6]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx6]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx6]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000107}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$1497: True, resultConstraint: ux6 == 35 && Derivative[1][dx6] == 0 && Derivative[2][dx6] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$1497: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1496: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[ux6 == 35 && Derivative[1][dx6] == 0 && Derivative[2][dx6] == 0,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1519[[i$1519]]: ux6 == 35, newVars$1519[[1]]: ux6

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1519: ux6 == 35

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1519[[i$1519]]: Derivative[1][dx6] == 0, newVars$1519[[1]]: Derivative[1][dx6]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1519: Derivative[1][dx6] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1519[[i$1519]]: Derivative[2][dx6] == 0, newVars$1519[[1]]: Derivative[2][dx6]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1519: Derivative[2][dx6] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1518: ux6 == 35 && Derivative[1][dx6] == 0 && Derivative[2][dx6] == 0, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{ux6 == 35, Derivative[1][dx6] == 0, Derivative[2][dx6] == 0}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$1518: {{{{ux6, 0}, 0, "35"}, {{dx6, 1}, 0, "0"}, {{dx6, 2}, 0, "0"}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1517: {{{{ux6, 0}, 0, "35"}, {{dx6, 1}, 0, "0"}, {{dx6, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1528: 504

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[14/20]: {y6=5*7, y6'=0, y6''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1530: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[uy6 == 35 && Derivative[1][dy6] == 0 && Derivative[2][dy6] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy6 == 35 && Derivative[1][dy6] == 0 && Derivative[2][dy6] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1534: SimplifyCount[And] + SimplifyCount[uy6 == 35] + SimplifyCount[Derivative[1][dy6] == 0] + SimplifyCount[Derivative[2][dy6] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[uy6 == 35] + SimplifyCount[Derivative[1][dy6] == 0] + SimplifyCount[Derivative[2][dy6] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000667}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1532: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[uy6 == 35 && Derivative[1][dy6] == 0 && Derivative[2][dy6] == 0,
	True,
	True,
	True,
	{},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy6 == 35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1541: SimplifyCount[35] + SimplifyCount[Equal] + SimplifyCount[uy6]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy6] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1543: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy6]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy6] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1545: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy6]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[35] + SimplifyCount[Equal] + SimplifyCount[uy6]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy6]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy6]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000133}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$1547: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy6 == 35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1548: SimplifyCount[35] + SimplifyCount[Equal] + SimplifyCount[uy6]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy6] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1550: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy6]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy6] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1552: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy6]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[35] + SimplifyCount[Equal] + SimplifyCount[uy6]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy6]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy6]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000126}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$1540: True, resultConstraint: uy6 == 35 && Derivative[1][dy6] == 0 && Derivative[2][dy6] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$1540: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1539: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[uy6 == 35 && Derivative[1][dy6] == 0 && Derivative[2][dy6] == 0,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1562[[i$1562]]: uy6 == 35, newVars$1562[[1]]: uy6

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1562: uy6 == 35

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1562[[i$1562]]: Derivative[1][dy6] == 0, newVars$1562[[1]]: Derivative[1][dy6]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1562: Derivative[1][dy6] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1562[[i$1562]]: Derivative[2][dy6] == 0, newVars$1562[[1]]: Derivative[2][dy6]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1562: Derivative[2][dy6] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1561: uy6 == 35 && Derivative[1][dy6] == 0 && Derivative[2][dy6] == 0, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{uy6 == 35, Derivative[1][dy6] == 0, Derivative[2][dy6] == 0}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$1561: {{{{uy6, 0}, 0, "35"}, {{dy6, 1}, 0, "0"}, {{dy6, 2}, 0, "0"}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1560: {{{{uy6, 0}, 0, "35"}, {{dy6, 1}, 0, "0"}, {{dy6, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1571: 504

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[15/20]: {x7=5*8, x7'=0, x7''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1573: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[ux7 == 40 && Derivative[1][dx7] == 0 && Derivative[2][dx7] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux7 == 40 && Derivative[1][dx7] == 0 && Derivative[2][dx7] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1577: SimplifyCount[And] + SimplifyCount[ux7 == 40] + SimplifyCount[Derivative[1][dx7] == 0] + SimplifyCount[Derivative[2][dx7] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[ux7 == 40] + SimplifyCount[Derivative[1][dx7] == 0] + SimplifyCount[Derivative[2][dx7] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000669}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1575: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[ux7 == 40 && Derivative[1][dx7] == 0 && Derivative[2][dx7] == 0,
	True,
	True,
	True,
	{},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux7 == 40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1584: SimplifyCount[40] + SimplifyCount[Equal] + SimplifyCount[ux7]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx7] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1586: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx7]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx7] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1588: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx7]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[40] + SimplifyCount[Equal] + SimplifyCount[ux7]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx7]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx7]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000133}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$1590: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux7 == 40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1591: SimplifyCount[40] + SimplifyCount[Equal] + SimplifyCount[ux7]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx7] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1593: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx7]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx7] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1595: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx7]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[40] + SimplifyCount[Equal] + SimplifyCount[ux7]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx7]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx7]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000101}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$1583: True, resultConstraint: ux7 == 40 && Derivative[1][dx7] == 0 && Derivative[2][dx7] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$1583: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1582: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[ux7 == 40 && Derivative[1][dx7] == 0 && Derivative[2][dx7] == 0,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1605[[i$1605]]: ux7 == 40, newVars$1605[[1]]: ux7

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1605: ux7 == 40

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1605[[i$1605]]: Derivative[1][dx7] == 0, newVars$1605[[1]]: Derivative[1][dx7]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1605: Derivative[1][dx7] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1605[[i$1605]]: Derivative[2][dx7] == 0, newVars$1605[[1]]: Derivative[2][dx7]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1605: Derivative[2][dx7] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1604: ux7 == 40 && Derivative[1][dx7] == 0 && Derivative[2][dx7] == 0, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{ux7 == 40, Derivative[1][dx7] == 0, Derivative[2][dx7] == 0}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$1604: {{{{ux7, 0}, 0, "40"}, {{dx7, 1}, 0, "0"}, {{dx7, 2}, 0, "0"}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1603: {{{{ux7, 0}, 0, "40"}, {{dx7, 1}, 0, "0"}, {{dx7, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1614: 504

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[16/20]: {y7=5*8, y7'=0, y7''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1616: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[uy7 == 40 && Derivative[1][dy7] == 0 && Derivative[2][dy7] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy7 == 40 && Derivative[1][dy7] == 0 && Derivative[2][dy7] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1620: SimplifyCount[And] + SimplifyCount[uy7 == 40] + SimplifyCount[Derivative[1][dy7] == 0] + SimplifyCount[Derivative[2][dy7] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[uy7 == 40] + SimplifyCount[Derivative[1][dy7] == 0] + SimplifyCount[Derivative[2][dy7] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000676}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1618: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[uy7 == 40 && Derivative[1][dy7] == 0 && Derivative[2][dy7] == 0,
	True,
	True,
	True,
	{},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy7 == 40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1627: SimplifyCount[40] + SimplifyCount[Equal] + SimplifyCount[uy7]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy7] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1629: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy7]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy7] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1631: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy7]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[40] + SimplifyCount[Equal] + SimplifyCount[uy7]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy7]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy7]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000134}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$1633: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy7 == 40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1634: SimplifyCount[40] + SimplifyCount[Equal] + SimplifyCount[uy7]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy7] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1636: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy7]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy7] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1638: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy7]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[40] + SimplifyCount[Equal] + SimplifyCount[uy7]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy7]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy7]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000126}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$1626: True, resultConstraint: uy7 == 40 && Derivative[1][dy7] == 0 && Derivative[2][dy7] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$1626: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1625: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[uy7 == 40 && Derivative[1][dy7] == 0 && Derivative[2][dy7] == 0,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1648[[i$1648]]: uy7 == 40, newVars$1648[[1]]: uy7

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1648: uy7 == 40

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1648[[i$1648]]: Derivative[1][dy7] == 0, newVars$1648[[1]]: Derivative[1][dy7]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1648: Derivative[1][dy7] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1648[[i$1648]]: Derivative[2][dy7] == 0, newVars$1648[[1]]: Derivative[2][dy7]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1648: Derivative[2][dy7] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1647: uy7 == 40 && Derivative[1][dy7] == 0 && Derivative[2][dy7] == 0, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{uy7 == 40, Derivative[1][dy7] == 0, Derivative[2][dy7] == 0}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$1647: {{{{uy7, 0}, 0, "40"}, {{dy7, 1}, 0, "0"}, {{dy7, 2}, 0, "0"}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1646: {{{{uy7, 0}, 0, "40"}, {{dy7, 1}, 0, "0"}, {{dy7, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1657: 504

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[17/20]: {x8=5*9, x8'=0, x8''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1659: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[ux8 == 45 && Derivative[1][dx8] == 0 && Derivative[2][dx8] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux8 == 45 && Derivative[1][dx8] == 0 && Derivative[2][dx8] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1663: SimplifyCount[And] + SimplifyCount[ux8 == 45] + SimplifyCount[Derivative[1][dx8] == 0] + SimplifyCount[Derivative[2][dx8] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[ux8 == 45] + SimplifyCount[Derivative[1][dx8] == 0] + SimplifyCount[Derivative[2][dx8] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000657}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1661: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[ux8 == 45 && Derivative[1][dx8] == 0 && Derivative[2][dx8] == 0,
	True,
	True,
	True,
	{},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux8 == 45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1670: SimplifyCount[45] + SimplifyCount[Equal] + SimplifyCount[ux8]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx8] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1672: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx8]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx8] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1674: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx8]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[45] + SimplifyCount[Equal] + SimplifyCount[ux8]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx8]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx8]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000133}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$1676: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux8 == 45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1677: SimplifyCount[45] + SimplifyCount[Equal] + SimplifyCount[ux8]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx8] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1679: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx8]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx8] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1681: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx8]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[45] + SimplifyCount[Equal] + SimplifyCount[ux8]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx8]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx8]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000112}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$1669: True, resultConstraint: ux8 == 45 && Derivative[1][dx8] == 0 && Derivative[2][dx8] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$1669: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1668: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[ux8 == 45 && Derivative[1][dx8] == 0 && Derivative[2][dx8] == 0,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1691[[i$1691]]: ux8 == 45, newVars$1691[[1]]: ux8

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1691: ux8 == 45

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1691[[i$1691]]: Derivative[1][dx8] == 0, newVars$1691[[1]]: Derivative[1][dx8]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1691: Derivative[1][dx8] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1691[[i$1691]]: Derivative[2][dx8] == 0, newVars$1691[[1]]: Derivative[2][dx8]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1691: Derivative[2][dx8] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1690: ux8 == 45 && Derivative[1][dx8] == 0 && Derivative[2][dx8] == 0, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{ux8 == 45, Derivative[1][dx8] == 0, Derivative[2][dx8] == 0}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$1690: {{{{ux8, 0}, 0, "45"}, {{dx8, 1}, 0, "0"}, {{dx8, 2}, 0, "0"}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1689: {{{{ux8, 0}, 0, "45"}, {{dx8, 1}, 0, "0"}, {{dx8, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1700: 504

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[18/20]: {y8=5*9, y8'=0, y8''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1702: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[uy8 == 45 && Derivative[1][dy8] == 0 && Derivative[2][dy8] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy8 == 45 && Derivative[1][dy8] == 0 && Derivative[2][dy8] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1706: SimplifyCount[And] + SimplifyCount[uy8 == 45] + SimplifyCount[Derivative[1][dy8] == 0] + SimplifyCount[Derivative[2][dy8] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[uy8 == 45] + SimplifyCount[Derivative[1][dy8] == 0] + SimplifyCount[Derivative[2][dy8] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000672}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1704: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[uy8 == 45 && Derivative[1][dy8] == 0 && Derivative[2][dy8] == 0,
	True,
	True,
	True,
	{},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy8 == 45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1713: SimplifyCount[45] + SimplifyCount[Equal] + SimplifyCount[uy8]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy8] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1715: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy8]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy8] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1717: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy8]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[45] + SimplifyCount[Equal] + SimplifyCount[uy8]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy8]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy8]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000129}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$1719: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy8 == 45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1720: SimplifyCount[45] + SimplifyCount[Equal] + SimplifyCount[uy8]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy8] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1722: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy8]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy8] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1724: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy8]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[45] + SimplifyCount[Equal] + SimplifyCount[uy8]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy8]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy8]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000134}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$1712: True, resultConstraint: uy8 == 45 && Derivative[1][dy8] == 0 && Derivative[2][dy8] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$1712: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1711: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[uy8 == 45 && Derivative[1][dy8] == 0 && Derivative[2][dy8] == 0,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1734[[i$1734]]: uy8 == 45, newVars$1734[[1]]: uy8

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1734: uy8 == 45

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1734[[i$1734]]: Derivative[1][dy8] == 0, newVars$1734[[1]]: Derivative[1][dy8]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1734: Derivative[1][dy8] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1734[[i$1734]]: Derivative[2][dy8] == 0, newVars$1734[[1]]: Derivative[2][dy8]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1734: Derivative[2][dy8] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1733: uy8 == 45 && Derivative[1][dy8] == 0 && Derivative[2][dy8] == 0, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{uy8 == 45, Derivative[1][dy8] == 0, Derivative[2][dy8] == 0}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$1733: {{{{uy8, 0}, 0, "45"}, {{dy8, 1}, 0, "0"}, {{dy8, 2}, 0, "0"}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1732: {{{{uy8, 0}, 0, "45"}, {{dy8, 1}, 0, "0"}, {{dy8, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1743: 504

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[19/20]: {x9=5*10, x9'=0, x9''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1745: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[ux9 == 50 && Derivative[1][dx9] == 0 && Derivative[2][dx9] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux9 == 50 && Derivative[1][dx9] == 0 && Derivative[2][dx9] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1749: SimplifyCount[And] + SimplifyCount[ux9 == 50] + SimplifyCount[Derivative[1][dx9] == 0] + SimplifyCount[Derivative[2][dx9] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[ux9 == 50] + SimplifyCount[Derivative[1][dx9] == 0] + SimplifyCount[Derivative[2][dx9] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000667}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1747: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[ux9 == 50 && Derivative[1][dx9] == 0 && Derivative[2][dx9] == 0,
	True,
	True,
	True,
	{},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux9 == 50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1756: SimplifyCount[50] + SimplifyCount[Equal] + SimplifyCount[ux9]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx9] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1758: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx9]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx9] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1760: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx9]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[50] + SimplifyCount[Equal] + SimplifyCount[ux9]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx9]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx9]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000131}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$1762: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[ux9 == 50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1763: SimplifyCount[50] + SimplifyCount[Equal] + SimplifyCount[ux9]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx9] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1765: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx9]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx9] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1767: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx9]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[50] + SimplifyCount[Equal] + SimplifyCount[ux9]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx9]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx9]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000123}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$1755: True, resultConstraint: ux9 == 50 && Derivative[1][dx9] == 0 && Derivative[2][dx9] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$1755: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1754: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[ux9 == 50 && Derivative[1][dx9] == 0 && Derivative[2][dx9] == 0,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1777[[i$1777]]: ux9 == 50, newVars$1777[[1]]: ux9

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1777: ux9 == 50

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1777[[i$1777]]: Derivative[1][dx9] == 0, newVars$1777[[1]]: Derivative[1][dx9]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1777: Derivative[1][dx9] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1777[[i$1777]]: Derivative[2][dx9] == 0, newVars$1777[[1]]: Derivative[2][dx9]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1777: Derivative[2][dx9] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1776: ux9 == 50 && Derivative[1][dx9] == 0 && Derivative[2][dx9] == 0, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{ux9 == 50, Derivative[1][dx9] == 0, Derivative[2][dx9] == 0}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$1776: {{{{ux9, 0}, 0, "50"}, {{dx9, 1}, 0, "0"}, {{dx9, 2}, 0, "0"}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1775: {{{{ux9, 0}, 0, "50"}, {{dx9, 1}, 0, "0"}, {{dx9, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1786: 504

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[20/20]: {y9=5*10, y9'=0, y9''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1788: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[uy9 == 50 && Derivative[1][dy9] == 0 && Derivative[2][dy9] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy9 == 50 && Derivative[1][dy9] == 0 && Derivative[2][dy9] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1792: SimplifyCount[And] + SimplifyCount[uy9 == 50] + SimplifyCount[Derivative[1][dy9] == 0] + SimplifyCount[Derivative[2][dy9] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[uy9 == 50] + SimplifyCount[Derivative[1][dy9] == 0] + SimplifyCount[Derivative[2][dy9] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000677}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1790: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[uy9 == 50 && Derivative[1][dy9] == 0 && Derivative[2][dy9] == 0,
	True,
	True,
	True,
	{},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy9 == 50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1799: SimplifyCount[50] + SimplifyCount[Equal] + SimplifyCount[uy9]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy9] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1801: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy9]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy9] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1803: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy9]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[50] + SimplifyCount[Equal] + SimplifyCount[uy9]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy9]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy9]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000133}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$1805: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[uy9 == 50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1806: SimplifyCount[50] + SimplifyCount[Equal] + SimplifyCount[uy9]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy9] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1808: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy9]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy9] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1810: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy9]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[50] + SimplifyCount[Equal] + SimplifyCount[uy9]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy9]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy9]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000116}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$1798: True, resultConstraint: uy9 == 50 && Derivative[1][dy9] == 0 && Derivative[2][dy9] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$1798: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1797: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[uy9 == 50 && Derivative[1][dy9] == 0 && Derivative[2][dy9] == 0,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1820[[i$1820]]: uy9 == 50, newVars$1820[[1]]: uy9

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1820: uy9 == 50

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1820[[i$1820]]: Derivative[1][dy9] == 0, newVars$1820[[1]]: Derivative[1][dy9]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1820: Derivative[1][dy9] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$1820[[i$1820]]: Derivative[2][dy9] == 0, newVars$1820[[1]]: Derivative[2][dy9]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1820: Derivative[2][dy9] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$1819: uy9 == 50 && Derivative[1][dy9] == 0 && Derivative[2][dy9] == 0, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{uy9 == 50, Derivative[1][dy9] == 0, Derivative[2][dy9] == 0}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$1819: {{{{uy9, 0}, 0, "50"}, {{dy9, 1}, 0, "0"}, {{dy9, 2}, 0, "0"}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1818: {{{{uy9, 0}, 0, "50"}, {{dy9, 1}, 0, "0"}, {{dy9, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1829: 504

@Backend.cpp 427 function: call   getSizeOfConstraint
@PhaseSimulator.cpp 369 function: simulate_ms   CONSISTENT: {}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getParameterConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1831: {True}

@Backend.cpp 427 function: call   getParameterConstraint
@PhaseSimulator.cpp 1557 function: make_next_todo   *phase: %% PhaseType: 1
%% id: 1
%% step: 0
%% parent_id:0
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: 0
--- variable map ---
x0 <=> 0
x1 <=> 10
x2 <=> 15
x3 <=> 20
x4 <=> 25
x5 <=> 30
x6 <=> 35
x7 <=> 40
x8 <=> 45
x9 <=> 50
y0 <=> 0
y1 <=> 10
y2 <=> 15
y3 <=> 20
y4 <=> 25
y5 <=> 30
y6 <=> 35
y7 <=> 40
y8 <=> 45
y9 <=> 50
x0' <=> 10
x1' <=> 0
x2' <=> 0
x3' <=> 0
x4' <=> 0
x5' <=> 0
x6' <=> 0
x7' <=> 0
x8' <=> 0
x9' <=> 0
y0' <=> 1
y1' <=> 0
y2' <=> 0
y3' <=> 0
y4' <=> 0
y5' <=> 0
y6' <=> 0
y7' <=> 0
y8' <=> 0
y9' <=> 0
x0'' <=> 0
x1'' <=> 0
x2'' <=> 0
x3'' <=> 0
x4'' <=> 0
x5'' <=> 0
x6'' <=> 0
x7'' <=> 0
x8'' <=> 0
x9'' <=> 0
y0'' <=> 0
y1'' <=> 0
y2'' <=> 0
y3'' <=> 0
y4'' <=> 0
y5'' <=> 0
y6'' <=> 0
y7'' <=> 0
y8'' <=> 0
y9'' <=> 0

--- parameter constraint ---
{}

@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
removeRedundantParameters[0,
	0,
	{ux0 == 0, ux1 == 10, ux2 == 15, ux3 == 20, ux4 == 25, ux5 == 30, ux6 == 35, ux7 == 40, ux8 == 45, ux9 == 50, uy0 == 0, uy1 == 10, uy2 == 15, uy3 == 20, uy4 == 25, uy5 == 30, uy6 == 35, uy7 == 40, uy8 == 45, uy9 == 50, Derivative[1][dx0] == 10, Derivative[1][dx1] == 0, Derivative[1][dx2] == 0, Derivative[1][dx3] == 0, Derivative[1][dx4] == 0, Derivative[1][dx5] == 0, Derivative[1][dx6] == 0, Derivative[1][dx7] == 0, Derivative[1][dx8] == 0, Derivative[1][dx9] == 0, Derivative[1][dy0] == 1, Derivative[1][dy1] == 0, Derivative[1][dy2] == 0, Derivative[1][dy3] == 0, Derivative[1][dy4] == 0, Derivative[1][dy5] == 0, Derivative[1][dy6] == 0, Derivative[1][dy7] == 0, Derivative[1][dy8] == 0, Derivative[1][dy9] == 0, Derivative[2][dx0] == 0, Derivative[2][dx1] == 0, Derivative[2][dx2] == 0, Derivative[2][dx3] == 0, Derivative[2][dx4] == 0, Derivative[2][dx5] == 0, Derivative[2][dx6] == 0, Derivative[2][dx7] == 0, Derivative[2][dx8] == 0, Derivative[2][dx9] == 0, Derivative[2][dy0] == 0, Derivative[2][dy1] == 0, Derivative[2][dy2] == 0, Derivative[2][dy3] == 0, Derivative[2][dy4] == 0, Derivative[2][dy5] == 0, Derivative[2][dy6] == 0, Derivative[2][dy7] == 0, Derivative[2][dy8] == 0, Derivative[2][dy9] == 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: parsInVM$1835: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: redundantPars$1835: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1834: {True}

@Backend.cpp 427 function: call   removeRedundantParameters
@Simulator.cpp 185 function: process_one_todo   
--- Result Phase ---
%% PhaseType: 1
%% id: 1
%% step: 0
%% parent_id:0
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: 0
%% end_time: 0
--- variable map ---
x0 <=> 0
x1 <=> 10
x2 <=> 15
x3 <=> 20
x4 <=> 25
x5 <=> 30
x6 <=> 35
x7 <=> 40
x8 <=> 45
x9 <=> 50
y0 <=> 0
y1 <=> 10
y2 <=> 15
y3 <=> 20
y4 <=> 25
y5 <=> 30
y6 <=> 35
y7 <=> 40
y8 <=> 45
y9 <=> 50
x0' <=> 10
x1' <=> 0
x2' <=> 0
x3' <=> 0
x4' <=> 0
x5' <=> 0
x6' <=> 0
x7' <=> 0
x8' <=> 0
x9' <=> 0
y0' <=> 1
y1' <=> 0
y2' <=> 0
y3' <=> 0
y4' <=> 0
y5' <=> 0
y6' <=> 0
y7' <=> 0
y8' <=> 0
y9' <=> 0
x0'' <=> 0
x1'' <=> 0
x2'' <=> 0
x3'' <=> 0
x4'' <=> 0
x5'' <=> 0
x6'' <=> 0
x7'' <=> 0
x8'' <=> 0
x9'' <=> 0
y0'' <=> 0
y1'' <=> 0
y2'' <=> 0
y3'' <=> 0
y4'' <=> 0
y5'' <=> 0
y6'' <=> 0
y7'' <=> 0
y8'' <=> 0
y9'' <=> 0

--- parameter constraint ---
{}

@SequentialSimulator.cpp 50 function: dfs   *current: %% PhaseType: 1
%% id: 1
%% step: 0
%% parent_id:0
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: 0
%% end_time: 0
--- variable map ---
x0 <=> 0
x1 <=> 10
x2 <=> 15
x3 <=> 20
x4 <=> 25
x5 <=> 30
x6 <=> 35
x7 <=> 40
x8 <=> 45
x9 <=> 50
y0 <=> 0
y1 <=> 10
y2 <=> 15
y3 <=> 20
y4 <=> 25
y5 <=> 30
y6 <=> 35
y7 <=> 40
y8 <=> 45
y9 <=> 50
x0' <=> 10
x1' <=> 0
x2' <=> 0
x3' <=> 0
x4' <=> 0
x5' <=> 0
x6' <=> 0
x7' <=> 0
x8' <=> 0
x9' <=> 0
y0' <=> 1
y1' <=> 0
y2' <=> 0
y3' <=> 0
y4' <=> 0
y5' <=> 0
y6' <=> 0
y7' <=> 0
y8' <=> 0
y9' <=> 0
x0'' <=> 0
x1'' <=> 0
x2'' <=> 0
x3'' <=> 0
x4'' <=> 0
x5'' <=> 0
x6'' <=> 0
x7'' <=> 0
x8'' <=> 0
x9'' <=> 0
y0'' <=> 0
y1'' <=> 0
y2'' <=> 0
y3'' <=> 0
y4'' <=> 0
y5'' <=> 0
y6'' <=> 0
y7'' <=> 0
y8'' <=> 0
y9'' <=> 0

--- parameter constraint ---
{}

@Simulator.cpp 165 function: process_one_todo   
--- Current Todo ---
%% PhaseType: 2
%% id: 2
%% step: 1
%% parent_id:1
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: 0
--- variable map ---

--- parameter constraint ---
{}

@Simulator.cpp 166 function: process_one_todo   
--- prev map ---

@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1839: Null

@Backend.cpp 427 function: call   resetConstraint
@PhaseSimulator.cpp 162 function: make_results_from_todo   *todo: %% PhaseType: 2
%% id: 2
%% step: 1
%% parent_id:1
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: 0
--- variable map ---

--- parameter constraint ---
{}

@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
clearPrevConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1841: Null

@Backend.cpp 427 function: call   clearPrevConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px0, 0],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1843: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px1, 0],
	10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1845: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px2, 0],
	15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1847: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px3, 0],
	20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1849: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px4, 0],
	25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1851: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px5, 0],
	30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1853: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px6, 0],
	35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1855: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px7, 0],
	40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1857: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px8, 0],
	45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1859: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px9, 0],
	50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1861: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py0, 0],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1863: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py1, 0],
	10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1865: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py2, 0],
	15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1867: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py3, 0],
	20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1869: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py4, 0],
	25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1871: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py5, 0],
	30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1873: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py6, 0],
	35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1875: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py7, 0],
	40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1877: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py8, 0],
	45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1879: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py9, 0],
	50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1881: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px0, 1],
	10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1883: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px1, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1885: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px2, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1887: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px3, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1889: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px4, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1891: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px5, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1893: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px6, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1895: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px7, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1897: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px8, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1899: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px9, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1901: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py0, 1],
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1903: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py1, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1905: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py2, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1907: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py3, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1909: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py4, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1911: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py5, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1913: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py6, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1915: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py7, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1917: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py8, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1919: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py9, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1921: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px0, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1923: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px1, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1925: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px2, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1927: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px3, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1929: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px4, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1931: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px5, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1933: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px6, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1935: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px7, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1937: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px8, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1939: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px9, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1941: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py0, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1943: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py1, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1945: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py2, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1947: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py3, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1949: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py4, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1951: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py5, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1953: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py6, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1955: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py7, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1957: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py8, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1959: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py9, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1961: Null

@Backend.cpp 427 function: call   addPrevEqual
@PhaseSimulator.cpp 199 function: make_results_from_todo   parameter_cons: {}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addParameterConstraint[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pConstraint", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pCons", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1963: Null

@Backend.cpp 427 function: call   addParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addParameterConstraint[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pConstraint", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pCons", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1965: Null

@Backend.cpp 427 function: call   addParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addAssumption[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"as in addAssumption:", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1967: Null

@Backend.cpp 427 function: call   addAssumption
@PhaseSimulator.cpp 326 function: simulate_ms   
--- next unadopted module set ---

@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x0--x1-)^2+(y0--y1-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1969: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0[0],
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1971: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux0][0],
	prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1974: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux1[0],
	prev[px1, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1977: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux1][0],
	prev[px1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1980: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy0[0],
	prev[py0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1983: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy0][0],
	prev[py0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1986: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy1[0],
	prev[py1, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1989: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy1][0],
	prev[py1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1992: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1997: SimplifyCount[And] + SimplifyCount[Derivative[2][ux0][t] == 0] + SimplifyCount[Derivative[2][ux1][t] == 0] + SimplifyCount[Derivative[2][uy0][t] == 0] + SimplifyCount[Derivative[2][uy1][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux0][t] == 0] + SimplifyCount[Derivative[2][ux1][t] == 0] + SimplifyCount[Derivative[2][uy0][t] == 0] + SimplifyCount[Derivative[2][uy1][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000804}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$1995: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux0[t] - ux1[t])^2 + (uy0[t] - uy1[t])^2 == 4 && Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0,
	ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1] && ux1[0] == prev[px1, 0] && Derivative[1][ux1][0] == prev[px1, 1] && uy0[0] == prev[py0, 0] && Derivative[1][uy0][0] == prev[py0, 1] && uy1[0] == prev[py1, 0] && Derivative[1][uy1][0] == prev[py1, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux0[t] - ux1[t])^2 + (uy0[t] - uy1[t])^2 == 4 && Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2006: {(ux0[t] - ux1[t])^2 + (uy0[t] - uy1[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux1][t] == 0, Derivative[2][uy0][t] == 0, Derivative[2][uy1][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2006: {{Derivative[2][uy1][t] == 0}, {(ux0[t] - ux1[t])^2 + (uy0[t] - uy1[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux1][t] == 0, Derivative[2][uy0][t] == 0}, {uy1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Element[prev[py1, 0] + t*prev[py1, 1], Reals]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2052: SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[py1, 0] + t*prev[py1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[py1, 0] + t*prev[py1, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.000425}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2006: {{uy1[t] -> prev[py1, 0] + t*prev[py1, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2006: {(ux0[t] - ux1[t])^2 + (-10 + uy0[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux1][t] == 0, Derivative[2][uy0][t] == 0}, tVars$2006: {ux0[t], ux1[t], uy0[t], ux0[t], ux1[t], uy0[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2006: {{Derivative[2][uy0][t] == 0}, {(ux0[t] - ux1[t])^2 + (-10 + uy0[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux1][t] == 0}, {uy0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Element[prev[py0, 0] + t*prev[py0, 1], Reals]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2070: SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[py0, 0] + t*prev[py0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[py0, 0] + t*prev[py0, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.000348}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2006: {{uy0[t] -> prev[py0, 0] + t*prev[py0, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2006: {(-10 + t)^2 + (ux0[t] - ux1[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux1][t] == 0}, tVars$2006: {ux0[t], ux1[t], ux0[t], ux1[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2006: {{Derivative[2][ux1][t] == 0}, {(-10 + t)^2 + (ux0[t] - ux1[t])^2 == 4, Derivative[2][ux0][t] == 0}, {ux1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Element[prev[px1, 0] + t*prev[px1, 1], Reals]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2088: SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[px1, 0] + t*prev[px1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[px1, 0] + t*prev[px1, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.000337}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2006: {{ux1[t] -> prev[px1, 0] + t*prev[px1, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2006: {(-10 + t)^2 + (-10 + ux0[t])^2 == 4, Derivative[2][ux0][t] == 0}, tVars$2006: {ux0[t], ux0[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2006: {{Derivative[2][ux0][t] == 0}, {(-10 + t)^2 + (-10 + ux0[t])^2 == 4}, {ux0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Element[prev[px0, 0] + t*prev[px0, 1], Reals]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2106: SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[px0, 0] + t*prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[px0, 0] + t*prev[px0, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.000391}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2006: {{ux0[t] -> prev[px0, 0] + t*prev[px0, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$2003: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2002: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x0--x1-)^2+(y0--y1-)^2=4=>x0'*(x0--x1-)+y0'*(y0--y1-)=1-*(x1'-*(x0--x1-)+y1'-*(y0--y1-))&1-*(x0'-*(x0--x1-)+y0'-*(y0--y1-))=x1'*(x0--x1-)+y1'*(y0--y1-)&x0'*(y0--y1-)-y0'*(x0--x1-)=x0'-*(y0--y1-)-y0'-*(x0--x1-)&x1'*(y0--y1-)-y1'*(x0--x1-)=x1'-*(y0--y1-)-y1'-*(x0--x1-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x0--x2-)^2+(y0--y2-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2174: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0[0],
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2176: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux0][0],
	prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2179: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux2[0],
	prev[px2, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2182: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux2][0],
	prev[px2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2185: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy0[0],
	prev[py0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2188: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy0][0],
	prev[py0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2191: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy2[0],
	prev[py2, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2194: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy2][0],
	prev[py2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2197: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2202: SimplifyCount[And] + SimplifyCount[Derivative[2][ux0][t] == 0] + SimplifyCount[Derivative[2][ux2][t] == 0] + SimplifyCount[Derivative[2][uy0][t] == 0] + SimplifyCount[Derivative[2][uy2][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux0][t] == 0] + SimplifyCount[Derivative[2][ux2][t] == 0] + SimplifyCount[Derivative[2][uy0][t] == 0] + SimplifyCount[Derivative[2][uy2][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000824}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2200: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux0[t] - ux2[t])^2 + (uy0[t] - uy2[t])^2 == 4 && Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0,
	ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1] && ux2[0] == prev[px2, 0] && Derivative[1][ux2][0] == prev[px2, 1] && uy0[0] == prev[py0, 0] && Derivative[1][uy0][0] == prev[py0, 1] && uy2[0] == prev[py2, 0] && Derivative[1][uy2][0] == prev[py2, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux0[t] - ux2[t])^2 + (uy0[t] - uy2[t])^2 == 4 && Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2211: {(ux0[t] - ux2[t])^2 + (uy0[t] - uy2[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux2][t] == 0, Derivative[2][uy0][t] == 0, Derivative[2][uy2][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2211: {{Derivative[2][uy2][t] == 0}, {(ux0[t] - ux2[t])^2 + (uy0[t] - uy2[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux2][t] == 0, Derivative[2][uy0][t] == 0}, {uy2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Element[prev[py2, 0] + t*prev[py2, 1], Reals]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2247: SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[py2, 0] + t*prev[py2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[py2, 0] + t*prev[py2, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.000396}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2211: {{uy2[t] -> prev[py2, 0] + t*prev[py2, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2211: {(ux0[t] - ux2[t])^2 + (-15 + uy0[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux2][t] == 0, Derivative[2][uy0][t] == 0}, tVars$2211: {ux0[t], ux2[t], uy0[t], ux0[t], ux2[t], uy0[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2211: {{Derivative[2][uy0][t] == 0}, {(ux0[t] - ux2[t])^2 + (-15 + uy0[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux2][t] == 0}, {uy0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2211: {{uy0[t] -> prev[py0, 0] + t*prev[py0, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2211: {(-15 + t)^2 + (ux0[t] - ux2[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux2][t] == 0}, tVars$2211: {ux0[t], ux2[t], ux0[t], ux2[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2211: {{Derivative[2][ux2][t] == 0}, {(-15 + t)^2 + (ux0[t] - ux2[t])^2 == 4, Derivative[2][ux0][t] == 0}, {ux2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Element[prev[px2, 0] + t*prev[px2, 1], Reals]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2266: SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[px2, 0] + t*prev[px2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[px2, 0] + t*prev[px2, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.000387}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2211: {{ux2[t] -> prev[px2, 0] + t*prev[px2, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2211: {(-15 + t)^2 + (-15 + ux0[t])^2 == 4, Derivative[2][ux0][t] == 0}, tVars$2211: {ux0[t], ux0[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2211: {{Derivative[2][ux0][t] == 0}, {(-15 + t)^2 + (-15 + ux0[t])^2 == 4}, {ux0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2211: {{ux0[t] -> prev[px0, 0] + t*prev[px0, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$2208: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2207: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x0--x2-)^2+(y0--y2-)^2=4=>x0'*(x0--x2-)+y0'*(y0--y2-)=1-*(x2'-*(x0--x2-)+y2'-*(y0--y2-))&1-*(x0'-*(x0--x2-)+y0'-*(y0--y2-))=x2'*(x0--x2-)+y2'*(y0--y2-)&x0'*(y0--y2-)-y0'*(x0--x2-)=x0'-*(y0--y2-)-y0'-*(x0--x2-)&x2'*(y0--y2-)-y2'*(x0--x2-)=x2'-*(y0--y2-)-y2'-*(x0--x2-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x0--x3-)^2+(y0--y3-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2335: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0[0],
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2337: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux0][0],
	prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2340: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux3[0],
	prev[px3, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2343: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux3][0],
	prev[px3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2346: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy0[0],
	prev[py0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2349: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy0][0],
	prev[py0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2352: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy3[0],
	prev[py3, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2355: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy3][0],
	prev[py3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2358: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2363: SimplifyCount[And] + SimplifyCount[Derivative[2][ux0][t] == 0] + SimplifyCount[Derivative[2][ux3][t] == 0] + SimplifyCount[Derivative[2][uy0][t] == 0] + SimplifyCount[Derivative[2][uy3][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux0][t] == 0] + SimplifyCount[Derivative[2][ux3][t] == 0] + SimplifyCount[Derivative[2][uy0][t] == 0] + SimplifyCount[Derivative[2][uy3][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000833}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2361: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux0[t] - ux3[t])^2 + (uy0[t] - uy3[t])^2 == 4 && Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0,
	ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1] && ux3[0] == prev[px3, 0] && Derivative[1][ux3][0] == prev[px3, 1] && uy0[0] == prev[py0, 0] && Derivative[1][uy0][0] == prev[py0, 1] && uy3[0] == prev[py3, 0] && Derivative[1][uy3][0] == prev[py3, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux0[t] - ux3[t])^2 + (uy0[t] - uy3[t])^2 == 4 && Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2372: {(ux0[t] - ux3[t])^2 + (uy0[t] - uy3[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux3][t] == 0, Derivative[2][uy0][t] == 0, Derivative[2][uy3][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2372: {{Derivative[2][uy3][t] == 0}, {(ux0[t] - ux3[t])^2 + (uy0[t] - uy3[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux3][t] == 0, Derivative[2][uy0][t] == 0}, {uy3}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Element[prev[py3, 0] + t*prev[py3, 1], Reals]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2408: SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[py3, 0] + t*prev[py3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[py3, 0] + t*prev[py3, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.000384}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2372: {{uy3[t] -> prev[py3, 0] + t*prev[py3, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2372: {(ux0[t] - ux3[t])^2 + (-20 + uy0[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux3][t] == 0, Derivative[2][uy0][t] == 0}, tVars$2372: {ux0[t], ux3[t], uy0[t], ux0[t], ux3[t], uy0[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2372: {{Derivative[2][uy0][t] == 0}, {(ux0[t] - ux3[t])^2 + (-20 + uy0[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux3][t] == 0}, {uy0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2372: {{uy0[t] -> prev[py0, 0] + t*prev[py0, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2372: {(-20 + t)^2 + (ux0[t] - ux3[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux3][t] == 0}, tVars$2372: {ux0[t], ux3[t], ux0[t], ux3[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2372: {{Derivative[2][ux3][t] == 0}, {(-20 + t)^2 + (ux0[t] - ux3[t])^2 == 4, Derivative[2][ux0][t] == 0}, {ux3}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Element[prev[px3, 0] + t*prev[px3, 1], Reals]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2427: SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[px3, 0] + t*prev[px3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[px3, 0] + t*prev[px3, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.000404}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2372: {{ux3[t] -> prev[px3, 0] + t*prev[px3, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2372: {(-20 + t)^2 + (-20 + ux0[t])^2 == 4, Derivative[2][ux0][t] == 0}, tVars$2372: {ux0[t], ux0[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2372: {{Derivative[2][ux0][t] == 0}, {(-20 + t)^2 + (-20 + ux0[t])^2 == 4}, {ux0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2372: {{ux0[t] -> prev[px0, 0] + t*prev[px0, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$2369: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2368: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x0--x3-)^2+(y0--y3-)^2=4=>x0'*(x0--x3-)+y0'*(y0--y3-)=1-*(x3'-*(x0--x3-)+y3'-*(y0--y3-))&1-*(x0'-*(x0--x3-)+y0'-*(y0--y3-))=x3'*(x0--x3-)+y3'*(y0--y3-)&x0'*(y0--y3-)-y0'*(x0--x3-)=x0'-*(y0--y3-)-y0'-*(x0--x3-)&x3'*(y0--y3-)-y3'*(x0--x3-)=x3'-*(y0--y3-)-y3'-*(x0--x3-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x0--x4-)^2+(y0--y4-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2496: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0[0],
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2498: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux0][0],
	prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2501: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux4[0],
	prev[px4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2504: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux4][0],
	prev[px4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2507: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy0[0],
	prev[py0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2510: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy0][0],
	prev[py0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2513: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy4[0],
	prev[py4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2516: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy4][0],
	prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2519: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2524: SimplifyCount[And] + SimplifyCount[Derivative[2][ux0][t] == 0] + SimplifyCount[Derivative[2][ux4][t] == 0] + SimplifyCount[Derivative[2][uy0][t] == 0] + SimplifyCount[Derivative[2][uy4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux0][t] == 0] + SimplifyCount[Derivative[2][ux4][t] == 0] + SimplifyCount[Derivative[2][uy0][t] == 0] + SimplifyCount[Derivative[2][uy4][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000828}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2522: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux0[t] - ux4[t])^2 + (uy0[t] - uy4[t])^2 == 4 && Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0,
	ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1] && ux4[0] == prev[px4, 0] && Derivative[1][ux4][0] == prev[px4, 1] && uy0[0] == prev[py0, 0] && Derivative[1][uy0][0] == prev[py0, 1] && uy4[0] == prev[py4, 0] && Derivative[1][uy4][0] == prev[py4, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux0[t] - ux4[t])^2 + (uy0[t] - uy4[t])^2 == 4 && Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2533: {(ux0[t] - ux4[t])^2 + (uy0[t] - uy4[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux4][t] == 0, Derivative[2][uy0][t] == 0, Derivative[2][uy4][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2533: {{Derivative[2][uy4][t] == 0}, {(ux0[t] - ux4[t])^2 + (uy0[t] - uy4[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux4][t] == 0, Derivative[2][uy0][t] == 0}, {uy4}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Element[prev[py4, 0] + t*prev[py4, 1], Reals]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2569: SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[py4, 0] + t*prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[py4, 0] + t*prev[py4, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.000403}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2533: {{uy4[t] -> prev[py4, 0] + t*prev[py4, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2533: {(ux0[t] - ux4[t])^2 + (-25 + uy0[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux4][t] == 0, Derivative[2][uy0][t] == 0}, tVars$2533: {ux0[t], ux4[t], uy0[t], ux0[t], ux4[t], uy0[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2533: {{Derivative[2][uy0][t] == 0}, {(ux0[t] - ux4[t])^2 + (-25 + uy0[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux4][t] == 0}, {uy0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2533: {{uy0[t] -> prev[py0, 0] + t*prev[py0, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2533: {(-25 + t)^2 + (ux0[t] - ux4[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux4][t] == 0}, tVars$2533: {ux0[t], ux4[t], ux0[t], ux4[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2533: {{Derivative[2][ux4][t] == 0}, {(-25 + t)^2 + (ux0[t] - ux4[t])^2 == 4, Derivative[2][ux0][t] == 0}, {ux4}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Element[prev[px4, 0] + t*prev[px4, 1], Reals]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2588: SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[px4, 0] + t*prev[px4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[px4, 0] + t*prev[px4, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.000327}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2533: {{ux4[t] -> prev[px4, 0] + t*prev[px4, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2533: {(-25 + t)^2 + (-25 + ux0[t])^2 == 4, Derivative[2][ux0][t] == 0}, tVars$2533: {ux0[t], ux0[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2533: {{Derivative[2][ux0][t] == 0}, {(-25 + t)^2 + (-25 + ux0[t])^2 == 4}, {ux0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2533: {{ux0[t] -> prev[px0, 0] + t*prev[px0, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$2530: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2529: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x0--x4-)^2+(y0--y4-)^2=4=>x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-))&1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-)&x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)&x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x0--x5-)^2+(y0--y5-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2657: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0[0],
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2659: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux0][0],
	prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2662: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux5[0],
	prev[px5, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2665: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux5][0],
	prev[px5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2668: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy0[0],
	prev[py0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2671: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy0][0],
	prev[py0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2674: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy5[0],
	prev[py5, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2677: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy5][0],
	prev[py5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2680: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2685: SimplifyCount[And] + SimplifyCount[Derivative[2][ux0][t] == 0] + SimplifyCount[Derivative[2][ux5][t] == 0] + SimplifyCount[Derivative[2][uy0][t] == 0] + SimplifyCount[Derivative[2][uy5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux0][t] == 0] + SimplifyCount[Derivative[2][ux5][t] == 0] + SimplifyCount[Derivative[2][uy0][t] == 0] + SimplifyCount[Derivative[2][uy5][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000822}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2683: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux0[t] - ux5[t])^2 + (uy0[t] - uy5[t])^2 == 4 && Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0,
	ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1] && ux5[0] == prev[px5, 0] && Derivative[1][ux5][0] == prev[px5, 1] && uy0[0] == prev[py0, 0] && Derivative[1][uy0][0] == prev[py0, 1] && uy5[0] == prev[py5, 0] && Derivative[1][uy5][0] == prev[py5, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux0[t] - ux5[t])^2 + (uy0[t] - uy5[t])^2 == 4 && Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2694: {(ux0[t] - ux5[t])^2 + (uy0[t] - uy5[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux5][t] == 0, Derivative[2][uy0][t] == 0, Derivative[2][uy5][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2694: {{Derivative[2][uy5][t] == 0}, {(ux0[t] - ux5[t])^2 + (uy0[t] - uy5[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux5][t] == 0, Derivative[2][uy0][t] == 0}, {uy5}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Element[prev[py5, 0] + t*prev[py5, 1], Reals]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2730: SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[py5, 0] + t*prev[py5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[py5, 0] + t*prev[py5, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.000364}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2694: {{uy5[t] -> prev[py5, 0] + t*prev[py5, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2694: {(ux0[t] - ux5[t])^2 + (-30 + uy0[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux5][t] == 0, Derivative[2][uy0][t] == 0}, tVars$2694: {ux0[t], ux5[t], uy0[t], ux0[t], ux5[t], uy0[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2694: {{Derivative[2][uy0][t] == 0}, {(ux0[t] - ux5[t])^2 + (-30 + uy0[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux5][t] == 0}, {uy0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2694: {{uy0[t] -> prev[py0, 0] + t*prev[py0, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2694: {(-30 + t)^2 + (ux0[t] - ux5[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux5][t] == 0}, tVars$2694: {ux0[t], ux5[t], ux0[t], ux5[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2694: {{Derivative[2][ux5][t] == 0}, {(-30 + t)^2 + (ux0[t] - ux5[t])^2 == 4, Derivative[2][ux0][t] == 0}, {ux5}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Element[prev[px5, 0] + t*prev[px5, 1], Reals]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2749: SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[px5, 0] + t*prev[px5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[px5, 0] + t*prev[px5, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.000333}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2694: {{ux5[t] -> prev[px5, 0] + t*prev[px5, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2694: {(-30 + t)^2 + (-30 + ux0[t])^2 == 4, Derivative[2][ux0][t] == 0}, tVars$2694: {ux0[t], ux0[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2694: {{Derivative[2][ux0][t] == 0}, {(-30 + t)^2 + (-30 + ux0[t])^2 == 4}, {ux0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2694: {{ux0[t] -> prev[px0, 0] + t*prev[px0, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$2691: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2690: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x0--x5-)^2+(y0--y5-)^2=4=>x0'*(x0--x5-)+y0'*(y0--y5-)=1-*(x5'-*(x0--x5-)+y5'-*(y0--y5-))&1-*(x0'-*(x0--x5-)+y0'-*(y0--y5-))=x5'*(x0--x5-)+y5'*(y0--y5-)&x0'*(y0--y5-)-y0'*(x0--x5-)=x0'-*(y0--y5-)-y0'-*(x0--x5-)&x5'*(y0--y5-)-y5'*(x0--x5-)=x5'-*(y0--y5-)-y5'-*(x0--x5-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x0--x6-)^2+(y0--y6-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2818: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0[0],
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2820: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux0][0],
	prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2823: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux6[0],
	prev[px6, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2826: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux6][0],
	prev[px6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2829: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy0[0],
	prev[py0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2832: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy0][0],
	prev[py0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2835: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy6[0],
	prev[py6, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2838: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy6][0],
	prev[py6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2841: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2846: SimplifyCount[And] + SimplifyCount[Derivative[2][ux0][t] == 0] + SimplifyCount[Derivative[2][ux6][t] == 0] + SimplifyCount[Derivative[2][uy0][t] == 0] + SimplifyCount[Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux0][t] == 0] + SimplifyCount[Derivative[2][ux6][t] == 0] + SimplifyCount[Derivative[2][uy0][t] == 0] + SimplifyCount[Derivative[2][uy6][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000818}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2844: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux0[t] - ux6[t])^2 + (uy0[t] - uy6[t])^2 == 4 && Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0,
	ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1] && ux6[0] == prev[px6, 0] && Derivative[1][ux6][0] == prev[px6, 1] && uy0[0] == prev[py0, 0] && Derivative[1][uy0][0] == prev[py0, 1] && uy6[0] == prev[py6, 0] && Derivative[1][uy6][0] == prev[py6, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux0[t] - ux6[t])^2 + (uy0[t] - uy6[t])^2 == 4 && Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2855: {(ux0[t] - ux6[t])^2 + (uy0[t] - uy6[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux6][t] == 0, Derivative[2][uy0][t] == 0, Derivative[2][uy6][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2855: {{Derivative[2][uy6][t] == 0}, {(ux0[t] - ux6[t])^2 + (uy0[t] - uy6[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux6][t] == 0, Derivative[2][uy0][t] == 0}, {uy6}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Element[prev[py6, 0] + t*prev[py6, 1], Reals]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2891: SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[py6, 0] + t*prev[py6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[py6, 0] + t*prev[py6, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.000328}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2855: {{uy6[t] -> prev[py6, 0] + t*prev[py6, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2855: {(ux0[t] - ux6[t])^2 + (-35 + uy0[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux6][t] == 0, Derivative[2][uy0][t] == 0}, tVars$2855: {ux0[t], ux6[t], uy0[t], ux0[t], ux6[t], uy0[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2855: {{Derivative[2][uy0][t] == 0}, {(ux0[t] - ux6[t])^2 + (-35 + uy0[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux6][t] == 0}, {uy0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2855: {{uy0[t] -> prev[py0, 0] + t*prev[py0, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2855: {(-35 + t)^2 + (ux0[t] - ux6[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux6][t] == 0}, tVars$2855: {ux0[t], ux6[t], ux0[t], ux6[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2855: {{Derivative[2][ux6][t] == 0}, {(-35 + t)^2 + (ux0[t] - ux6[t])^2 == 4, Derivative[2][ux0][t] == 0}, {ux6}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Element[prev[px6, 0] + t*prev[px6, 1], Reals]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2910: SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[px6, 0] + t*prev[px6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[px6, 0] + t*prev[px6, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.00034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2855: {{ux6[t] -> prev[px6, 0] + t*prev[px6, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$2855: {(-35 + t)^2 + (-35 + ux0[t])^2 == 4, Derivative[2][ux0][t] == 0}, tVars$2855: {ux0[t], ux0[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$2855: {{Derivative[2][ux0][t] == 0}, {(-35 + t)^2 + (-35 + ux0[t])^2 == 4}, {ux0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$2855: {{ux0[t] -> prev[px0, 0] + t*prev[px0, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$2852: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2851: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x0--x6-)^2+(y0--y6-)^2=4=>x0'*(x0--x6-)+y0'*(y0--y6-)=1-*(x6'-*(x0--x6-)+y6'-*(y0--y6-))&1-*(x0'-*(x0--x6-)+y0'-*(y0--y6-))=x6'*(x0--x6-)+y6'*(y0--y6-)&x0'*(y0--y6-)-y0'*(x0--x6-)=x0'-*(y0--y6-)-y0'-*(x0--x6-)&x6'*(y0--y6-)-y6'*(x0--x6-)=x6'-*(y0--y6-)-y6'-*(x0--x6-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x0--x7-)^2+(y0--y7-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2979: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0[0],
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2981: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux0][0],
	prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2984: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux7[0],
	prev[px7, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2987: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux7][0],
	prev[px7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2990: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy0[0],
	prev[py0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2993: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy0][0],
	prev[py0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2996: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy7[0],
	prev[py7, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$2999: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy7][0],
	prev[py7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3002: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3007: SimplifyCount[And] + SimplifyCount[Derivative[2][ux0][t] == 0] + SimplifyCount[Derivative[2][ux7][t] == 0] + SimplifyCount[Derivative[2][uy0][t] == 0] + SimplifyCount[Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux0][t] == 0] + SimplifyCount[Derivative[2][ux7][t] == 0] + SimplifyCount[Derivative[2][uy0][t] == 0] + SimplifyCount[Derivative[2][uy7][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000923}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3005: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux0[t] - ux7[t])^2 + (uy0[t] - uy7[t])^2 == 4 && Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0,
	ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1] && ux7[0] == prev[px7, 0] && Derivative[1][ux7][0] == prev[px7, 1] && uy0[0] == prev[py0, 0] && Derivative[1][uy0][0] == prev[py0, 1] && uy7[0] == prev[py7, 0] && Derivative[1][uy7][0] == prev[py7, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux0[t] - ux7[t])^2 + (uy0[t] - uy7[t])^2 == 4 && Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3016: {(ux0[t] - ux7[t])^2 + (uy0[t] - uy7[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux7][t] == 0, Derivative[2][uy0][t] == 0, Derivative[2][uy7][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3016: {{Derivative[2][uy7][t] == 0}, {(ux0[t] - ux7[t])^2 + (uy0[t] - uy7[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux7][t] == 0, Derivative[2][uy0][t] == 0}, {uy7}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Element[prev[py7, 0] + t*prev[py7, 1], Reals]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3052: SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[py7, 0] + t*prev[py7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[py7, 0] + t*prev[py7, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.000371}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3016: {{uy7[t] -> prev[py7, 0] + t*prev[py7, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3016: {(ux0[t] - ux7[t])^2 + (-40 + uy0[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux7][t] == 0, Derivative[2][uy0][t] == 0}, tVars$3016: {ux0[t], ux7[t], uy0[t], ux0[t], ux7[t], uy0[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3016: {{Derivative[2][uy0][t] == 0}, {(ux0[t] - ux7[t])^2 + (-40 + uy0[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux7][t] == 0}, {uy0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3016: {{uy0[t] -> prev[py0, 0] + t*prev[py0, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3016: {(-40 + t)^2 + (ux0[t] - ux7[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux7][t] == 0}, tVars$3016: {ux0[t], ux7[t], ux0[t], ux7[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3016: {{Derivative[2][ux7][t] == 0}, {(-40 + t)^2 + (ux0[t] - ux7[t])^2 == 4, Derivative[2][ux0][t] == 0}, {ux7}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Element[prev[px7, 0] + t*prev[px7, 1], Reals]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3071: SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[px7, 0] + t*prev[px7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[px7, 0] + t*prev[px7, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.000387}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3016: {{ux7[t] -> prev[px7, 0] + t*prev[px7, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3016: {(-40 + t)^2 + (-40 + ux0[t])^2 == 4, Derivative[2][ux0][t] == 0}, tVars$3016: {ux0[t], ux0[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3016: {{Derivative[2][ux0][t] == 0}, {(-40 + t)^2 + (-40 + ux0[t])^2 == 4}, {ux0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3016: {{ux0[t] -> prev[px0, 0] + t*prev[px0, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$3013: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3012: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x0--x7-)^2+(y0--y7-)^2=4=>x0'*(x0--x7-)+y0'*(y0--y7-)=1-*(x7'-*(x0--x7-)+y7'-*(y0--y7-))&1-*(x0'-*(x0--x7-)+y0'-*(y0--y7-))=x7'*(x0--x7-)+y7'*(y0--y7-)&x0'*(y0--y7-)-y0'*(x0--x7-)=x0'-*(y0--y7-)-y0'-*(x0--x7-)&x7'*(y0--y7-)-y7'*(x0--x7-)=x7'-*(y0--y7-)-y7'-*(x0--x7-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x0--x8-)^2+(y0--y8-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3140: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0[0],
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3142: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux0][0],
	prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3145: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux8[0],
	prev[px8, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3148: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux8][0],
	prev[px8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3151: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy0[0],
	prev[py0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3154: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy0][0],
	prev[py0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3157: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy8[0],
	prev[py8, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3160: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy8][0],
	prev[py8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3163: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3168: SimplifyCount[And] + SimplifyCount[Derivative[2][ux0][t] == 0] + SimplifyCount[Derivative[2][ux8][t] == 0] + SimplifyCount[Derivative[2][uy0][t] == 0] + SimplifyCount[Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux0][t] == 0] + SimplifyCount[Derivative[2][ux8][t] == 0] + SimplifyCount[Derivative[2][uy0][t] == 0] + SimplifyCount[Derivative[2][uy8][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000828}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3166: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux0[t] - ux8[t])^2 + (uy0[t] - uy8[t])^2 == 4 && Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0,
	ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1] && ux8[0] == prev[px8, 0] && Derivative[1][ux8][0] == prev[px8, 1] && uy0[0] == prev[py0, 0] && Derivative[1][uy0][0] == prev[py0, 1] && uy8[0] == prev[py8, 0] && Derivative[1][uy8][0] == prev[py8, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux0[t] - ux8[t])^2 + (uy0[t] - uy8[t])^2 == 4 && Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3177: {(ux0[t] - ux8[t])^2 + (uy0[t] - uy8[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy0][t] == 0, Derivative[2][uy8][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3177: {{Derivative[2][uy8][t] == 0}, {(ux0[t] - ux8[t])^2 + (uy0[t] - uy8[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy0][t] == 0}, {uy8}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Element[prev[py8, 0] + t*prev[py8, 1], Reals]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3213: SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[py8, 0] + t*prev[py8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[py8, 0] + t*prev[py8, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.000396}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3177: {{uy8[t] -> prev[py8, 0] + t*prev[py8, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3177: {(ux0[t] - ux8[t])^2 + (-45 + uy0[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy0][t] == 0}, tVars$3177: {ux0[t], ux8[t], uy0[t], ux0[t], ux8[t], uy0[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3177: {{Derivative[2][uy0][t] == 0}, {(ux0[t] - ux8[t])^2 + (-45 + uy0[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux8][t] == 0}, {uy0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3177: {{uy0[t] -> prev[py0, 0] + t*prev[py0, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3177: {(-45 + t)^2 + (ux0[t] - ux8[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux8][t] == 0}, tVars$3177: {ux0[t], ux8[t], ux0[t], ux8[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3177: {{Derivative[2][ux8][t] == 0}, {(-45 + t)^2 + (ux0[t] - ux8[t])^2 == 4, Derivative[2][ux0][t] == 0}, {ux8}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Element[prev[px8, 0] + t*prev[px8, 1], Reals]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3232: SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[px8, 0] + t*prev[px8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[px8, 0] + t*prev[px8, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.000389}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3177: {{ux8[t] -> prev[px8, 0] + t*prev[px8, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3177: {(-45 + t)^2 + (-45 + ux0[t])^2 == 4, Derivative[2][ux0][t] == 0}, tVars$3177: {ux0[t], ux0[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3177: {{Derivative[2][ux0][t] == 0}, {(-45 + t)^2 + (-45 + ux0[t])^2 == 4}, {ux0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3177: {{ux0[t] -> prev[px0, 0] + t*prev[px0, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$3174: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3173: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x0--x8-)^2+(y0--y8-)^2=4=>x0'*(x0--x8-)+y0'*(y0--y8-)=1-*(x8'-*(x0--x8-)+y8'-*(y0--y8-))&1-*(x0'-*(x0--x8-)+y0'-*(y0--y8-))=x8'*(x0--x8-)+y8'*(y0--y8-)&x0'*(y0--y8-)-y0'*(x0--x8-)=x0'-*(y0--y8-)-y0'-*(x0--x8-)&x8'*(y0--y8-)-y8'*(x0--x8-)=x8'-*(y0--y8-)-y8'-*(x0--x8-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x0--x9-)^2+(y0--y9-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3301: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0[0],
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3303: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux0][0],
	prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3306: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux9[0],
	prev[px9, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3309: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux9][0],
	prev[px9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3312: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy0[0],
	prev[py0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3315: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy0][0],
	prev[py0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3318: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy9[0],
	prev[py9, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3321: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy9][0],
	prev[py9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3324: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3329: SimplifyCount[And] + SimplifyCount[Derivative[2][ux0][t] == 0] + SimplifyCount[Derivative[2][ux9][t] == 0] + SimplifyCount[Derivative[2][uy0][t] == 0] + SimplifyCount[Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux0][t] == 0] + SimplifyCount[Derivative[2][ux9][t] == 0] + SimplifyCount[Derivative[2][uy0][t] == 0] + SimplifyCount[Derivative[2][uy9][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000824}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3327: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux0[t] - ux9[t])^2 + (uy0[t] - uy9[t])^2 == 4 && Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0,
	ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1] && ux9[0] == prev[px9, 0] && Derivative[1][ux9][0] == prev[px9, 1] && uy0[0] == prev[py0, 0] && Derivative[1][uy0][0] == prev[py0, 1] && uy9[0] == prev[py9, 0] && Derivative[1][uy9][0] == prev[py9, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux0[t] - ux9[t])^2 + (uy0[t] - uy9[t])^2 == 4 && Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3338: {(ux0[t] - ux9[t])^2 + (uy0[t] - uy9[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy0][t] == 0, Derivative[2][uy9][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3338: {{Derivative[2][uy9][t] == 0}, {(ux0[t] - ux9[t])^2 + (uy0[t] - uy9[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy0][t] == 0}, {uy9}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Element[prev[py9, 0] + t*prev[py9, 1], Reals]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3374: SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[py9, 0] + t*prev[py9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[py9, 0] + t*prev[py9, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.000376}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3338: {{uy9[t] -> prev[py9, 0] + t*prev[py9, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3338: {(ux0[t] - ux9[t])^2 + (-50 + uy0[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy0][t] == 0}, tVars$3338: {ux0[t], ux9[t], uy0[t], ux0[t], ux9[t], uy0[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3338: {{Derivative[2][uy0][t] == 0}, {(ux0[t] - ux9[t])^2 + (-50 + uy0[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux9][t] == 0}, {uy0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3338: {{uy0[t] -> prev[py0, 0] + t*prev[py0, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3338: {(-50 + t)^2 + (ux0[t] - ux9[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux9][t] == 0}, tVars$3338: {ux0[t], ux9[t], ux0[t], ux9[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3338: {{Derivative[2][ux9][t] == 0}, {(-50 + t)^2 + (ux0[t] - ux9[t])^2 == 4, Derivative[2][ux0][t] == 0}, {ux9}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Element[prev[px9, 0] + t*prev[px9, 1], Reals]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3393: SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[px9, 0] + t*prev[px9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[Element] + SimplifyCount[Reals] + SimplifyCount[prev[px9, 0] + t*prev[px9, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.00033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3338: {{ux9[t] -> prev[px9, 0] + t*prev[px9, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3338: {(-50 + t)^2 + (-50 + ux0[t])^2 == 4, Derivative[2][ux0][t] == 0}, tVars$3338: {ux0[t], ux0[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3338: {{Derivative[2][ux0][t] == 0}, {(-50 + t)^2 + (-50 + ux0[t])^2 == 4}, {ux0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3338: {{ux0[t] -> prev[px0, 0] + t*prev[px0, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$3335: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3334: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x0--x9-)^2+(y0--y9-)^2=4=>x0'*(x0--x9-)+y0'*(y0--y9-)=1-*(x9'-*(x0--x9-)+y9'-*(y0--y9-))&1-*(x0'-*(x0--x9-)+y0'-*(y0--y9-))=x9'*(x0--x9-)+y9'*(y0--y9-)&x0'*(y0--y9-)-y0'*(x0--x9-)=x0'-*(y0--y9-)-y0'-*(x0--x9-)&x9'*(y0--y9-)-y9'*(x0--x9-)=x9'-*(y0--y9-)-y9'-*(x0--x9-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x1--x2-)^2+(y1--y2-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3462: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux1[0],
	prev[px1, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3464: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux1][0],
	prev[px1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3467: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux2[0],
	prev[px2, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3470: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux2][0],
	prev[px2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3473: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy1[0],
	prev[py1, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3476: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy1][0],
	prev[py1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3479: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy2[0],
	prev[py2, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3482: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy2][0],
	prev[py2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3485: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3490: SimplifyCount[And] + SimplifyCount[Derivative[2][ux1][t] == 0] + SimplifyCount[Derivative[2][ux2][t] == 0] + SimplifyCount[Derivative[2][uy1][t] == 0] + SimplifyCount[Derivative[2][uy2][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux1][t] == 0] + SimplifyCount[Derivative[2][ux2][t] == 0] + SimplifyCount[Derivative[2][uy1][t] == 0] + SimplifyCount[Derivative[2][uy2][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000841}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3488: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux1[t] - ux2[t])^2 + (uy1[t] - uy2[t])^2 == 4 && Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0,
	ux1[0] == prev[px1, 0] && Derivative[1][ux1][0] == prev[px1, 1] && ux2[0] == prev[px2, 0] && Derivative[1][ux2][0] == prev[px2, 1] && uy1[0] == prev[py1, 0] && Derivative[1][uy1][0] == prev[py1, 1] && uy2[0] == prev[py2, 0] && Derivative[1][uy2][0] == prev[py2, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux1[t] - ux2[t])^2 + (uy1[t] - uy2[t])^2 == 4 && Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3499: {(ux1[t] - ux2[t])^2 + (uy1[t] - uy2[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux2][t] == 0, Derivative[2][uy1][t] == 0, Derivative[2][uy2][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3499: {{Derivative[2][uy2][t] == 0}, {(ux1[t] - ux2[t])^2 + (uy1[t] - uy2[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux2][t] == 0, Derivative[2][uy1][t] == 0}, {uy2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3499: {{uy2[t] -> prev[py2, 0] + t*prev[py2, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3499: {(ux1[t] - ux2[t])^2 + (-15 + uy1[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux2][t] == 0, Derivative[2][uy1][t] == 0}, tVars$3499: {ux1[t], ux2[t], uy1[t], ux1[t], ux2[t], uy1[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3499: {{Derivative[2][uy1][t] == 0}, {(ux1[t] - ux2[t])^2 + (-15 + uy1[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux2][t] == 0}, {uy1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3499: {{uy1[t] -> prev[py1, 0] + t*prev[py1, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3499: {25 + (ux1[t] - ux2[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux2][t] == 0}, tVars$3499: {ux1[t], ux2[t], ux1[t], ux2[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3499: {{Derivative[2][ux2][t] == 0}, {25 + (ux1[t] - ux2[t])^2 == 4, Derivative[2][ux1][t] == 0}, {ux2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3499: {{ux2[t] -> prev[px2, 0] + t*prev[px2, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3499: {25 + (-15 + ux1[t])^2 == 4, Derivative[2][ux1][t] == 0}, tVars$3499: {ux1[t], ux1[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3499: {{Derivative[2][ux1][t] == 0}, {25 + (-15 + ux1[t])^2 == 4}, {ux1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3499: {{ux1[t] -> prev[px1, 0] + t*prev[px1, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$3496: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3495: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x1--x2-)^2+(y1--y2-)^2=4=>x1'*(x1--x2-)+y1'*(y1--y2-)=1-*(x2'-*(x1--x2-)+y2'-*(y1--y2-))&1-*(x1'-*(x1--x2-)+y1'-*(y1--y2-))=x2'*(x1--x2-)+y2'*(y1--y2-)&x1'*(y1--y2-)-y1'*(x1--x2-)=x1'-*(y1--y2-)-y1'-*(x1--x2-)&x2'*(y1--y2-)-y2'*(x1--x2-)=x2'-*(y1--y2-)-y2'-*(x1--x2-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x1--x3-)^2+(y1--y3-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3589: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux1[0],
	prev[px1, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3591: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux1][0],
	prev[px1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3594: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux3[0],
	prev[px3, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3597: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux3][0],
	prev[px3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3600: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy1[0],
	prev[py1, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3603: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy1][0],
	prev[py1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3606: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy3[0],
	prev[py3, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3609: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy3][0],
	prev[py3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3612: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3617: SimplifyCount[And] + SimplifyCount[Derivative[2][ux1][t] == 0] + SimplifyCount[Derivative[2][ux3][t] == 0] + SimplifyCount[Derivative[2][uy1][t] == 0] + SimplifyCount[Derivative[2][uy3][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux1][t] == 0] + SimplifyCount[Derivative[2][ux3][t] == 0] + SimplifyCount[Derivative[2][uy1][t] == 0] + SimplifyCount[Derivative[2][uy3][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000694}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3615: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux1[t] - ux3[t])^2 + (uy1[t] - uy3[t])^2 == 4 && Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0,
	ux1[0] == prev[px1, 0] && Derivative[1][ux1][0] == prev[px1, 1] && ux3[0] == prev[px3, 0] && Derivative[1][ux3][0] == prev[px3, 1] && uy1[0] == prev[py1, 0] && Derivative[1][uy1][0] == prev[py1, 1] && uy3[0] == prev[py3, 0] && Derivative[1][uy3][0] == prev[py3, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux1[t] - ux3[t])^2 + (uy1[t] - uy3[t])^2 == 4 && Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3626: {(ux1[t] - ux3[t])^2 + (uy1[t] - uy3[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux3][t] == 0, Derivative[2][uy1][t] == 0, Derivative[2][uy3][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3626: {{Derivative[2][uy3][t] == 0}, {(ux1[t] - ux3[t])^2 + (uy1[t] - uy3[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux3][t] == 0, Derivative[2][uy1][t] == 0}, {uy3}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3626: {{uy3[t] -> prev[py3, 0] + t*prev[py3, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3626: {(ux1[t] - ux3[t])^2 + (-20 + uy1[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux3][t] == 0, Derivative[2][uy1][t] == 0}, tVars$3626: {ux1[t], ux3[t], uy1[t], ux1[t], ux3[t], uy1[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3626: {{Derivative[2][uy1][t] == 0}, {(ux1[t] - ux3[t])^2 + (-20 + uy1[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux3][t] == 0}, {uy1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3626: {{uy1[t] -> prev[py1, 0] + t*prev[py1, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3626: {100 + (ux1[t] - ux3[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux3][t] == 0}, tVars$3626: {ux1[t], ux3[t], ux1[t], ux3[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3626: {{Derivative[2][ux3][t] == 0}, {100 + (ux1[t] - ux3[t])^2 == 4, Derivative[2][ux1][t] == 0}, {ux3}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3626: {{ux3[t] -> prev[px3, 0] + t*prev[px3, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3626: {100 + (-20 + ux1[t])^2 == 4, Derivative[2][ux1][t] == 0}, tVars$3626: {ux1[t], ux1[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3626: {{Derivative[2][ux1][t] == 0}, {100 + (-20 + ux1[t])^2 == 4}, {ux1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3626: {{ux1[t] -> prev[px1, 0] + t*prev[px1, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$3623: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3622: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x1--x3-)^2+(y1--y3-)^2=4=>x1'*(x1--x3-)+y1'*(y1--y3-)=1-*(x3'-*(x1--x3-)+y3'-*(y1--y3-))&1-*(x1'-*(x1--x3-)+y1'-*(y1--y3-))=x3'*(x1--x3-)+y3'*(y1--y3-)&x1'*(y1--y3-)-y1'*(x1--x3-)=x1'-*(y1--y3-)-y1'-*(x1--x3-)&x3'*(y1--y3-)-y3'*(x1--x3-)=x3'-*(y1--y3-)-y3'-*(x1--x3-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x1--x4-)^2+(y1--y4-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3716: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux1[0],
	prev[px1, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3718: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux1][0],
	prev[px1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3721: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux4[0],
	prev[px4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3724: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux4][0],
	prev[px4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3727: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy1[0],
	prev[py1, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3730: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy1][0],
	prev[py1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3733: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy4[0],
	prev[py4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3736: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy4][0],
	prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3739: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3744: SimplifyCount[And] + SimplifyCount[Derivative[2][ux1][t] == 0] + SimplifyCount[Derivative[2][ux4][t] == 0] + SimplifyCount[Derivative[2][uy1][t] == 0] + SimplifyCount[Derivative[2][uy4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux1][t] == 0] + SimplifyCount[Derivative[2][ux4][t] == 0] + SimplifyCount[Derivative[2][uy1][t] == 0] + SimplifyCount[Derivative[2][uy4][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000698}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3742: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux1[t] - ux4[t])^2 + (uy1[t] - uy4[t])^2 == 4 && Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0,
	ux1[0] == prev[px1, 0] && Derivative[1][ux1][0] == prev[px1, 1] && ux4[0] == prev[px4, 0] && Derivative[1][ux4][0] == prev[px4, 1] && uy1[0] == prev[py1, 0] && Derivative[1][uy1][0] == prev[py1, 1] && uy4[0] == prev[py4, 0] && Derivative[1][uy4][0] == prev[py4, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux1[t] - ux4[t])^2 + (uy1[t] - uy4[t])^2 == 4 && Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3753: {(ux1[t] - ux4[t])^2 + (uy1[t] - uy4[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux4][t] == 0, Derivative[2][uy1][t] == 0, Derivative[2][uy4][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3753: {{Derivative[2][uy4][t] == 0}, {(ux1[t] - ux4[t])^2 + (uy1[t] - uy4[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux4][t] == 0, Derivative[2][uy1][t] == 0}, {uy4}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3753: {{uy4[t] -> prev[py4, 0] + t*prev[py4, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3753: {(ux1[t] - ux4[t])^2 + (-25 + uy1[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux4][t] == 0, Derivative[2][uy1][t] == 0}, tVars$3753: {ux1[t], ux4[t], uy1[t], ux1[t], ux4[t], uy1[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3753: {{Derivative[2][uy1][t] == 0}, {(ux1[t] - ux4[t])^2 + (-25 + uy1[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux4][t] == 0}, {uy1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3753: {{uy1[t] -> prev[py1, 0] + t*prev[py1, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3753: {225 + (ux1[t] - ux4[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux4][t] == 0}, tVars$3753: {ux1[t], ux4[t], ux1[t], ux4[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3753: {{Derivative[2][ux4][t] == 0}, {225 + (ux1[t] - ux4[t])^2 == 4, Derivative[2][ux1][t] == 0}, {ux4}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3753: {{ux4[t] -> prev[px4, 0] + t*prev[px4, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3753: {225 + (-25 + ux1[t])^2 == 4, Derivative[2][ux1][t] == 0}, tVars$3753: {ux1[t], ux1[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3753: {{Derivative[2][ux1][t] == 0}, {225 + (-25 + ux1[t])^2 == 4}, {ux1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3753: {{ux1[t] -> prev[px1, 0] + t*prev[px1, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$3750: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3749: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x1--x4-)^2+(y1--y4-)^2=4=>x1'*(x1--x4-)+y1'*(y1--y4-)=1-*(x4'-*(x1--x4-)+y4'-*(y1--y4-))&1-*(x1'-*(x1--x4-)+y1'-*(y1--y4-))=x4'*(x1--x4-)+y4'*(y1--y4-)&x1'*(y1--y4-)-y1'*(x1--x4-)=x1'-*(y1--y4-)-y1'-*(x1--x4-)&x4'*(y1--y4-)-y4'*(x1--x4-)=x4'-*(y1--y4-)-y4'-*(x1--x4-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x1--x5-)^2+(y1--y5-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3843: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux1[0],
	prev[px1, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3845: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux1][0],
	prev[px1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3848: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux5[0],
	prev[px5, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3851: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux5][0],
	prev[px5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3854: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy1[0],
	prev[py1, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3857: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy1][0],
	prev[py1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3860: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy5[0],
	prev[py5, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3863: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy5][0],
	prev[py5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3866: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3871: SimplifyCount[And] + SimplifyCount[Derivative[2][ux1][t] == 0] + SimplifyCount[Derivative[2][ux5][t] == 0] + SimplifyCount[Derivative[2][uy1][t] == 0] + SimplifyCount[Derivative[2][uy5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux1][t] == 0] + SimplifyCount[Derivative[2][ux5][t] == 0] + SimplifyCount[Derivative[2][uy1][t] == 0] + SimplifyCount[Derivative[2][uy5][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000686}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3869: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux1[t] - ux5[t])^2 + (uy1[t] - uy5[t])^2 == 4 && Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0,
	ux1[0] == prev[px1, 0] && Derivative[1][ux1][0] == prev[px1, 1] && ux5[0] == prev[px5, 0] && Derivative[1][ux5][0] == prev[px5, 1] && uy1[0] == prev[py1, 0] && Derivative[1][uy1][0] == prev[py1, 1] && uy5[0] == prev[py5, 0] && Derivative[1][uy5][0] == prev[py5, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux1[t] - ux5[t])^2 + (uy1[t] - uy5[t])^2 == 4 && Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3880: {(ux1[t] - ux5[t])^2 + (uy1[t] - uy5[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux5][t] == 0, Derivative[2][uy1][t] == 0, Derivative[2][uy5][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3880: {{Derivative[2][uy5][t] == 0}, {(ux1[t] - ux5[t])^2 + (uy1[t] - uy5[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux5][t] == 0, Derivative[2][uy1][t] == 0}, {uy5}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3880: {{uy5[t] -> prev[py5, 0] + t*prev[py5, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3880: {(ux1[t] - ux5[t])^2 + (-30 + uy1[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux5][t] == 0, Derivative[2][uy1][t] == 0}, tVars$3880: {ux1[t], ux5[t], uy1[t], ux1[t], ux5[t], uy1[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3880: {{Derivative[2][uy1][t] == 0}, {(ux1[t] - ux5[t])^2 + (-30 + uy1[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux5][t] == 0}, {uy1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3880: {{uy1[t] -> prev[py1, 0] + t*prev[py1, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3880: {400 + (ux1[t] - ux5[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux5][t] == 0}, tVars$3880: {ux1[t], ux5[t], ux1[t], ux5[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3880: {{Derivative[2][ux5][t] == 0}, {400 + (ux1[t] - ux5[t])^2 == 4, Derivative[2][ux1][t] == 0}, {ux5}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3880: {{ux5[t] -> prev[px5, 0] + t*prev[px5, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$3880: {400 + (-30 + ux1[t])^2 == 4, Derivative[2][ux1][t] == 0}, tVars$3880: {ux1[t], ux1[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$3880: {{Derivative[2][ux1][t] == 0}, {400 + (-30 + ux1[t])^2 == 4}, {ux1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$3880: {{ux1[t] -> prev[px1, 0] + t*prev[px1, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$3877: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3876: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x1--x5-)^2+(y1--y5-)^2=4=>x1'*(x1--x5-)+y1'*(y1--y5-)=1-*(x5'-*(x1--x5-)+y5'-*(y1--y5-))&1-*(x1'-*(x1--x5-)+y1'-*(y1--y5-))=x5'*(x1--x5-)+y5'*(y1--y5-)&x1'*(y1--y5-)-y1'*(x1--x5-)=x1'-*(y1--y5-)-y1'-*(x1--x5-)&x5'*(y1--y5-)-y5'*(x1--x5-)=x5'-*(y1--y5-)-y5'-*(x1--x5-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x1--x6-)^2+(y1--y6-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3970: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux1[0],
	prev[px1, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3972: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux1][0],
	prev[px1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3975: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux6[0],
	prev[px6, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3978: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux6][0],
	prev[px6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3981: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy1[0],
	prev[py1, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3984: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy1][0],
	prev[py1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3987: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy6[0],
	prev[py6, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3990: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy6][0],
	prev[py6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3993: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3998: SimplifyCount[And] + SimplifyCount[Derivative[2][ux1][t] == 0] + SimplifyCount[Derivative[2][ux6][t] == 0] + SimplifyCount[Derivative[2][uy1][t] == 0] + SimplifyCount[Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux1][t] == 0] + SimplifyCount[Derivative[2][ux6][t] == 0] + SimplifyCount[Derivative[2][uy1][t] == 0] + SimplifyCount[Derivative[2][uy6][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000686}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$3996: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux1[t] - ux6[t])^2 + (uy1[t] - uy6[t])^2 == 4 && Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0,
	ux1[0] == prev[px1, 0] && Derivative[1][ux1][0] == prev[px1, 1] && ux6[0] == prev[px6, 0] && Derivative[1][ux6][0] == prev[px6, 1] && uy1[0] == prev[py1, 0] && Derivative[1][uy1][0] == prev[py1, 1] && uy6[0] == prev[py6, 0] && Derivative[1][uy6][0] == prev[py6, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux1[t] - ux6[t])^2 + (uy1[t] - uy6[t])^2 == 4 && Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4007: {(ux1[t] - ux6[t])^2 + (uy1[t] - uy6[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux6][t] == 0, Derivative[2][uy1][t] == 0, Derivative[2][uy6][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4007: {{Derivative[2][uy6][t] == 0}, {(ux1[t] - ux6[t])^2 + (uy1[t] - uy6[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux6][t] == 0, Derivative[2][uy1][t] == 0}, {uy6}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4007: {{uy6[t] -> prev[py6, 0] + t*prev[py6, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4007: {(ux1[t] - ux6[t])^2 + (-35 + uy1[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux6][t] == 0, Derivative[2][uy1][t] == 0}, tVars$4007: {ux1[t], ux6[t], uy1[t], ux1[t], ux6[t], uy1[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4007: {{Derivative[2][uy1][t] == 0}, {(ux1[t] - ux6[t])^2 + (-35 + uy1[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux6][t] == 0}, {uy1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4007: {{uy1[t] -> prev[py1, 0] + t*prev[py1, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4007: {625 + (ux1[t] - ux6[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux6][t] == 0}, tVars$4007: {ux1[t], ux6[t], ux1[t], ux6[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4007: {{Derivative[2][ux6][t] == 0}, {625 + (ux1[t] - ux6[t])^2 == 4, Derivative[2][ux1][t] == 0}, {ux6}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4007: {{ux6[t] -> prev[px6, 0] + t*prev[px6, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4007: {625 + (-35 + ux1[t])^2 == 4, Derivative[2][ux1][t] == 0}, tVars$4007: {ux1[t], ux1[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4007: {{Derivative[2][ux1][t] == 0}, {625 + (-35 + ux1[t])^2 == 4}, {ux1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4007: {{ux1[t] -> prev[px1, 0] + t*prev[px1, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$4004: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4003: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x1--x6-)^2+(y1--y6-)^2=4=>x1'*(x1--x6-)+y1'*(y1--y6-)=1-*(x6'-*(x1--x6-)+y6'-*(y1--y6-))&1-*(x1'-*(x1--x6-)+y1'-*(y1--y6-))=x6'*(x1--x6-)+y6'*(y1--y6-)&x1'*(y1--y6-)-y1'*(x1--x6-)=x1'-*(y1--y6-)-y1'-*(x1--x6-)&x6'*(y1--y6-)-y6'*(x1--x6-)=x6'-*(y1--y6-)-y6'-*(x1--x6-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x1--x7-)^2+(y1--y7-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4097: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux1[0],
	prev[px1, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4099: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux1][0],
	prev[px1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4102: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux7[0],
	prev[px7, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4105: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux7][0],
	prev[px7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4108: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy1[0],
	prev[py1, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4111: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy1][0],
	prev[py1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4114: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy7[0],
	prev[py7, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4117: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy7][0],
	prev[py7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4120: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4125: SimplifyCount[And] + SimplifyCount[Derivative[2][ux1][t] == 0] + SimplifyCount[Derivative[2][ux7][t] == 0] + SimplifyCount[Derivative[2][uy1][t] == 0] + SimplifyCount[Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux1][t] == 0] + SimplifyCount[Derivative[2][ux7][t] == 0] + SimplifyCount[Derivative[2][uy1][t] == 0] + SimplifyCount[Derivative[2][uy7][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000703}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4123: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux1[t] - ux7[t])^2 + (uy1[t] - uy7[t])^2 == 4 && Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0,
	ux1[0] == prev[px1, 0] && Derivative[1][ux1][0] == prev[px1, 1] && ux7[0] == prev[px7, 0] && Derivative[1][ux7][0] == prev[px7, 1] && uy1[0] == prev[py1, 0] && Derivative[1][uy1][0] == prev[py1, 1] && uy7[0] == prev[py7, 0] && Derivative[1][uy7][0] == prev[py7, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux1[t] - ux7[t])^2 + (uy1[t] - uy7[t])^2 == 4 && Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4134: {(ux1[t] - ux7[t])^2 + (uy1[t] - uy7[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux7][t] == 0, Derivative[2][uy1][t] == 0, Derivative[2][uy7][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4134: {{Derivative[2][uy7][t] == 0}, {(ux1[t] - ux7[t])^2 + (uy1[t] - uy7[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux7][t] == 0, Derivative[2][uy1][t] == 0}, {uy7}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4134: {{uy7[t] -> prev[py7, 0] + t*prev[py7, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4134: {(ux1[t] - ux7[t])^2 + (-40 + uy1[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux7][t] == 0, Derivative[2][uy1][t] == 0}, tVars$4134: {ux1[t], ux7[t], uy1[t], ux1[t], ux7[t], uy1[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4134: {{Derivative[2][uy1][t] == 0}, {(ux1[t] - ux7[t])^2 + (-40 + uy1[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux7][t] == 0}, {uy1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4134: {{uy1[t] -> prev[py1, 0] + t*prev[py1, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4134: {900 + (ux1[t] - ux7[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux7][t] == 0}, tVars$4134: {ux1[t], ux7[t], ux1[t], ux7[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4134: {{Derivative[2][ux7][t] == 0}, {900 + (ux1[t] - ux7[t])^2 == 4, Derivative[2][ux1][t] == 0}, {ux7}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4134: {{ux7[t] -> prev[px7, 0] + t*prev[px7, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4134: {900 + (-40 + ux1[t])^2 == 4, Derivative[2][ux1][t] == 0}, tVars$4134: {ux1[t], ux1[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4134: {{Derivative[2][ux1][t] == 0}, {900 + (-40 + ux1[t])^2 == 4}, {ux1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4134: {{ux1[t] -> prev[px1, 0] + t*prev[px1, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$4131: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4130: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x1--x7-)^2+(y1--y7-)^2=4=>x1'*(x1--x7-)+y1'*(y1--y7-)=1-*(x7'-*(x1--x7-)+y7'-*(y1--y7-))&1-*(x1'-*(x1--x7-)+y1'-*(y1--y7-))=x7'*(x1--x7-)+y7'*(y1--y7-)&x1'*(y1--y7-)-y1'*(x1--x7-)=x1'-*(y1--y7-)-y1'-*(x1--x7-)&x7'*(y1--y7-)-y7'*(x1--x7-)=x7'-*(y1--y7-)-y7'-*(x1--x7-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x1--x8-)^2+(y1--y8-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4224: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux1[0],
	prev[px1, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4226: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux1][0],
	prev[px1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4229: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux8[0],
	prev[px8, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4232: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux8][0],
	prev[px8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4235: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy1[0],
	prev[py1, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4238: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy1][0],
	prev[py1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4241: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy8[0],
	prev[py8, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4244: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy8][0],
	prev[py8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4247: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4252: SimplifyCount[And] + SimplifyCount[Derivative[2][ux1][t] == 0] + SimplifyCount[Derivative[2][ux8][t] == 0] + SimplifyCount[Derivative[2][uy1][t] == 0] + SimplifyCount[Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux1][t] == 0] + SimplifyCount[Derivative[2][ux8][t] == 0] + SimplifyCount[Derivative[2][uy1][t] == 0] + SimplifyCount[Derivative[2][uy8][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00069}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4250: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux1[t] - ux8[t])^2 + (uy1[t] - uy8[t])^2 == 4 && Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0,
	ux1[0] == prev[px1, 0] && Derivative[1][ux1][0] == prev[px1, 1] && ux8[0] == prev[px8, 0] && Derivative[1][ux8][0] == prev[px8, 1] && uy1[0] == prev[py1, 0] && Derivative[1][uy1][0] == prev[py1, 1] && uy8[0] == prev[py8, 0] && Derivative[1][uy8][0] == prev[py8, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux1[t] - ux8[t])^2 + (uy1[t] - uy8[t])^2 == 4 && Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4261: {(ux1[t] - ux8[t])^2 + (uy1[t] - uy8[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy1][t] == 0, Derivative[2][uy8][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4261: {{Derivative[2][uy8][t] == 0}, {(ux1[t] - ux8[t])^2 + (uy1[t] - uy8[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy1][t] == 0}, {uy8}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4261: {{uy8[t] -> prev[py8, 0] + t*prev[py8, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4261: {(ux1[t] - ux8[t])^2 + (-45 + uy1[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy1][t] == 0}, tVars$4261: {ux1[t], ux8[t], uy1[t], ux1[t], ux8[t], uy1[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4261: {{Derivative[2][uy1][t] == 0}, {(ux1[t] - ux8[t])^2 + (-45 + uy1[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux8][t] == 0}, {uy1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4261: {{uy1[t] -> prev[py1, 0] + t*prev[py1, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4261: {1225 + (ux1[t] - ux8[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux8][t] == 0}, tVars$4261: {ux1[t], ux8[t], ux1[t], ux8[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4261: {{Derivative[2][ux8][t] == 0}, {1225 + (ux1[t] - ux8[t])^2 == 4, Derivative[2][ux1][t] == 0}, {ux8}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4261: {{ux8[t] -> prev[px8, 0] + t*prev[px8, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4261: {1225 + (-45 + ux1[t])^2 == 4, Derivative[2][ux1][t] == 0}, tVars$4261: {ux1[t], ux1[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4261: {{Derivative[2][ux1][t] == 0}, {1225 + (-45 + ux1[t])^2 == 4}, {ux1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4261: {{ux1[t] -> prev[px1, 0] + t*prev[px1, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$4258: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4257: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x1--x8-)^2+(y1--y8-)^2=4=>x1'*(x1--x8-)+y1'*(y1--y8-)=1-*(x8'-*(x1--x8-)+y8'-*(y1--y8-))&1-*(x1'-*(x1--x8-)+y1'-*(y1--y8-))=x8'*(x1--x8-)+y8'*(y1--y8-)&x1'*(y1--y8-)-y1'*(x1--x8-)=x1'-*(y1--y8-)-y1'-*(x1--x8-)&x8'*(y1--y8-)-y8'*(x1--x8-)=x8'-*(y1--y8-)-y8'-*(x1--x8-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x1--x9-)^2+(y1--y9-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4351: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux1[0],
	prev[px1, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4353: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux1][0],
	prev[px1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4356: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux9[0],
	prev[px9, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4359: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux9][0],
	prev[px9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4362: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy1[0],
	prev[py1, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4365: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy1][0],
	prev[py1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4368: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy9[0],
	prev[py9, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4371: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy9][0],
	prev[py9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4374: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4379: SimplifyCount[And] + SimplifyCount[Derivative[2][ux1][t] == 0] + SimplifyCount[Derivative[2][ux9][t] == 0] + SimplifyCount[Derivative[2][uy1][t] == 0] + SimplifyCount[Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux1][t] == 0] + SimplifyCount[Derivative[2][ux9][t] == 0] + SimplifyCount[Derivative[2][uy1][t] == 0] + SimplifyCount[Derivative[2][uy9][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000683}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4377: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux1[t] - ux9[t])^2 + (uy1[t] - uy9[t])^2 == 4 && Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0,
	ux1[0] == prev[px1, 0] && Derivative[1][ux1][0] == prev[px1, 1] && ux9[0] == prev[px9, 0] && Derivative[1][ux9][0] == prev[px9, 1] && uy1[0] == prev[py1, 0] && Derivative[1][uy1][0] == prev[py1, 1] && uy9[0] == prev[py9, 0] && Derivative[1][uy9][0] == prev[py9, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux1[t] - ux9[t])^2 + (uy1[t] - uy9[t])^2 == 4 && Derivative[2][ux1][t] == 0 && Derivative[2][uy1][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4388: {(ux1[t] - ux9[t])^2 + (uy1[t] - uy9[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy1][t] == 0, Derivative[2][uy9][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4388: {{Derivative[2][uy9][t] == 0}, {(ux1[t] - ux9[t])^2 + (uy1[t] - uy9[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy1][t] == 0}, {uy9}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4388: {{uy9[t] -> prev[py9, 0] + t*prev[py9, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4388: {(ux1[t] - ux9[t])^2 + (-50 + uy1[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy1][t] == 0}, tVars$4388: {ux1[t], ux9[t], uy1[t], ux1[t], ux9[t], uy1[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4388: {{Derivative[2][uy1][t] == 0}, {(ux1[t] - ux9[t])^2 + (-50 + uy1[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux9][t] == 0}, {uy1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4388: {{uy1[t] -> prev[py1, 0] + t*prev[py1, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4388: {1600 + (ux1[t] - ux9[t])^2 == 4, Derivative[2][ux1][t] == 0, Derivative[2][ux9][t] == 0}, tVars$4388: {ux1[t], ux9[t], ux1[t], ux9[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4388: {{Derivative[2][ux9][t] == 0}, {1600 + (ux1[t] - ux9[t])^2 == 4, Derivative[2][ux1][t] == 0}, {ux9}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4388: {{ux9[t] -> prev[px9, 0] + t*prev[px9, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4388: {1600 + (-50 + ux1[t])^2 == 4, Derivative[2][ux1][t] == 0}, tVars$4388: {ux1[t], ux1[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4388: {{Derivative[2][ux1][t] == 0}, {1600 + (-50 + ux1[t])^2 == 4}, {ux1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4388: {{ux1[t] -> prev[px1, 0] + t*prev[px1, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$4385: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4384: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x1--x9-)^2+(y1--y9-)^2=4=>x1'*(x1--x9-)+y1'*(y1--y9-)=1-*(x9'-*(x1--x9-)+y9'-*(y1--y9-))&1-*(x1'-*(x1--x9-)+y1'-*(y1--y9-))=x9'*(x1--x9-)+y9'*(y1--y9-)&x1'*(y1--y9-)-y1'*(x1--x9-)=x1'-*(y1--y9-)-y1'-*(x1--x9-)&x9'*(y1--y9-)-y9'*(x1--x9-)=x9'-*(y1--y9-)-y9'-*(x1--x9-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x2--x3-)^2+(y2--y3-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4478: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux2[0],
	prev[px2, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4480: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux2][0],
	prev[px2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4483: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux3[0],
	prev[px3, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4486: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux3][0],
	prev[px3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4489: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy2[0],
	prev[py2, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4492: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy2][0],
	prev[py2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4495: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy3[0],
	prev[py3, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4498: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy3][0],
	prev[py3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4501: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4506: SimplifyCount[And] + SimplifyCount[Derivative[2][ux2][t] == 0] + SimplifyCount[Derivative[2][ux3][t] == 0] + SimplifyCount[Derivative[2][uy2][t] == 0] + SimplifyCount[Derivative[2][uy3][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux2][t] == 0] + SimplifyCount[Derivative[2][ux3][t] == 0] + SimplifyCount[Derivative[2][uy2][t] == 0] + SimplifyCount[Derivative[2][uy3][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000534}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4504: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux2[t] - ux3[t])^2 + (uy2[t] - uy3[t])^2 == 4 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0,
	ux2[0] == prev[px2, 0] && Derivative[1][ux2][0] == prev[px2, 1] && ux3[0] == prev[px3, 0] && Derivative[1][ux3][0] == prev[px3, 1] && uy2[0] == prev[py2, 0] && Derivative[1][uy2][0] == prev[py2, 1] && uy3[0] == prev[py3, 0] && Derivative[1][uy3][0] == prev[py3, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux2[t] - ux3[t])^2 + (uy2[t] - uy3[t])^2 == 4 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4515: {(ux2[t] - ux3[t])^2 + (uy2[t] - uy3[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux3][t] == 0, Derivative[2][uy2][t] == 0, Derivative[2][uy3][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4515: {{Derivative[2][uy3][t] == 0}, {(ux2[t] - ux3[t])^2 + (uy2[t] - uy3[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux3][t] == 0, Derivative[2][uy2][t] == 0}, {uy3}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4515: {{uy3[t] -> prev[py3, 0] + t*prev[py3, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4515: {(ux2[t] - ux3[t])^2 + (-20 + uy2[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux3][t] == 0, Derivative[2][uy2][t] == 0}, tVars$4515: {ux2[t], ux3[t], uy2[t], ux2[t], ux3[t], uy2[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4515: {{Derivative[2][uy2][t] == 0}, {(ux2[t] - ux3[t])^2 + (-20 + uy2[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux3][t] == 0}, {uy2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4515: {{uy2[t] -> prev[py2, 0] + t*prev[py2, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4515: {25 + (ux2[t] - ux3[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux3][t] == 0}, tVars$4515: {ux2[t], ux3[t], ux2[t], ux3[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4515: {{Derivative[2][ux3][t] == 0}, {25 + (ux2[t] - ux3[t])^2 == 4, Derivative[2][ux2][t] == 0}, {ux3}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4515: {{ux3[t] -> prev[px3, 0] + t*prev[px3, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4515: {25 + (-20 + ux2[t])^2 == 4, Derivative[2][ux2][t] == 0}, tVars$4515: {ux2[t], ux2[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4515: {{Derivative[2][ux2][t] == 0}, {25 + (-20 + ux2[t])^2 == 4}, {ux2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4515: {{ux2[t] -> prev[px2, 0] + t*prev[px2, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$4512: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4511: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x2--x3-)^2+(y2--y3-)^2=4=>x2'*(x2--x3-)+y2'*(y2--y3-)=1-*(x3'-*(x2--x3-)+y3'-*(y2--y3-))&1-*(x2'-*(x2--x3-)+y2'-*(y2--y3-))=x3'*(x2--x3-)+y3'*(y2--y3-)&x2'*(y2--y3-)-y2'*(x2--x3-)=x2'-*(y2--y3-)-y2'-*(x2--x3-)&x3'*(y2--y3-)-y3'*(x2--x3-)=x3'-*(y2--y3-)-y3'-*(x2--x3-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x2--x4-)^2+(y2--y4-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4605: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux2[0],
	prev[px2, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4607: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux2][0],
	prev[px2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4610: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux4[0],
	prev[px4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4613: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux4][0],
	prev[px4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4616: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy2[0],
	prev[py2, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4619: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy2][0],
	prev[py2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4622: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy4[0],
	prev[py4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4625: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy4][0],
	prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4628: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4633: SimplifyCount[And] + SimplifyCount[Derivative[2][ux2][t] == 0] + SimplifyCount[Derivative[2][ux4][t] == 0] + SimplifyCount[Derivative[2][uy2][t] == 0] + SimplifyCount[Derivative[2][uy4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux2][t] == 0] + SimplifyCount[Derivative[2][ux4][t] == 0] + SimplifyCount[Derivative[2][uy2][t] == 0] + SimplifyCount[Derivative[2][uy4][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000517}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4631: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux2[t] - ux4[t])^2 + (uy2[t] - uy4[t])^2 == 4 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0,
	ux2[0] == prev[px2, 0] && Derivative[1][ux2][0] == prev[px2, 1] && ux4[0] == prev[px4, 0] && Derivative[1][ux4][0] == prev[px4, 1] && uy2[0] == prev[py2, 0] && Derivative[1][uy2][0] == prev[py2, 1] && uy4[0] == prev[py4, 0] && Derivative[1][uy4][0] == prev[py4, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux2[t] - ux4[t])^2 + (uy2[t] - uy4[t])^2 == 4 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4642: {(ux2[t] - ux4[t])^2 + (uy2[t] - uy4[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux4][t] == 0, Derivative[2][uy2][t] == 0, Derivative[2][uy4][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4642: {{Derivative[2][uy4][t] == 0}, {(ux2[t] - ux4[t])^2 + (uy2[t] - uy4[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux4][t] == 0, Derivative[2][uy2][t] == 0}, {uy4}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4642: {{uy4[t] -> prev[py4, 0] + t*prev[py4, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4642: {(ux2[t] - ux4[t])^2 + (-25 + uy2[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux4][t] == 0, Derivative[2][uy2][t] == 0}, tVars$4642: {ux2[t], ux4[t], uy2[t], ux2[t], ux4[t], uy2[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4642: {{Derivative[2][uy2][t] == 0}, {(ux2[t] - ux4[t])^2 + (-25 + uy2[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux4][t] == 0}, {uy2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4642: {{uy2[t] -> prev[py2, 0] + t*prev[py2, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4642: {100 + (ux2[t] - ux4[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux4][t] == 0}, tVars$4642: {ux2[t], ux4[t], ux2[t], ux4[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4642: {{Derivative[2][ux4][t] == 0}, {100 + (ux2[t] - ux4[t])^2 == 4, Derivative[2][ux2][t] == 0}, {ux4}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4642: {{ux4[t] -> prev[px4, 0] + t*prev[px4, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4642: {100 + (-25 + ux2[t])^2 == 4, Derivative[2][ux2][t] == 0}, tVars$4642: {ux2[t], ux2[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4642: {{Derivative[2][ux2][t] == 0}, {100 + (-25 + ux2[t])^2 == 4}, {ux2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4642: {{ux2[t] -> prev[px2, 0] + t*prev[px2, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$4639: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4638: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x2--x4-)^2+(y2--y4-)^2=4=>x2'*(x2--x4-)+y2'*(y2--y4-)=1-*(x4'-*(x2--x4-)+y4'-*(y2--y4-))&1-*(x2'-*(x2--x4-)+y2'-*(y2--y4-))=x4'*(x2--x4-)+y4'*(y2--y4-)&x2'*(y2--y4-)-y2'*(x2--x4-)=x2'-*(y2--y4-)-y2'-*(x2--x4-)&x4'*(y2--y4-)-y4'*(x2--x4-)=x4'-*(y2--y4-)-y4'-*(x2--x4-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x2--x5-)^2+(y2--y5-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4732: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux2[0],
	prev[px2, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4734: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux2][0],
	prev[px2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4737: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux5[0],
	prev[px5, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4740: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux5][0],
	prev[px5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4743: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy2[0],
	prev[py2, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4746: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy2][0],
	prev[py2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4749: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy5[0],
	prev[py5, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4752: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy5][0],
	prev[py5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4755: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4760: SimplifyCount[And] + SimplifyCount[Derivative[2][ux2][t] == 0] + SimplifyCount[Derivative[2][ux5][t] == 0] + SimplifyCount[Derivative[2][uy2][t] == 0] + SimplifyCount[Derivative[2][uy5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux2][t] == 0] + SimplifyCount[Derivative[2][ux5][t] == 0] + SimplifyCount[Derivative[2][uy2][t] == 0] + SimplifyCount[Derivative[2][uy5][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000585}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4758: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux2[t] - ux5[t])^2 + (uy2[t] - uy5[t])^2 == 4 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0,
	ux2[0] == prev[px2, 0] && Derivative[1][ux2][0] == prev[px2, 1] && ux5[0] == prev[px5, 0] && Derivative[1][ux5][0] == prev[px5, 1] && uy2[0] == prev[py2, 0] && Derivative[1][uy2][0] == prev[py2, 1] && uy5[0] == prev[py5, 0] && Derivative[1][uy5][0] == prev[py5, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux2[t] - ux5[t])^2 + (uy2[t] - uy5[t])^2 == 4 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4769: {(ux2[t] - ux5[t])^2 + (uy2[t] - uy5[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux5][t] == 0, Derivative[2][uy2][t] == 0, Derivative[2][uy5][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4769: {{Derivative[2][uy5][t] == 0}, {(ux2[t] - ux5[t])^2 + (uy2[t] - uy5[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux5][t] == 0, Derivative[2][uy2][t] == 0}, {uy5}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4769: {{uy5[t] -> prev[py5, 0] + t*prev[py5, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4769: {(ux2[t] - ux5[t])^2 + (-30 + uy2[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux5][t] == 0, Derivative[2][uy2][t] == 0}, tVars$4769: {ux2[t], ux5[t], uy2[t], ux2[t], ux5[t], uy2[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4769: {{Derivative[2][uy2][t] == 0}, {(ux2[t] - ux5[t])^2 + (-30 + uy2[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux5][t] == 0}, {uy2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4769: {{uy2[t] -> prev[py2, 0] + t*prev[py2, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4769: {225 + (ux2[t] - ux5[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux5][t] == 0}, tVars$4769: {ux2[t], ux5[t], ux2[t], ux5[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4769: {{Derivative[2][ux5][t] == 0}, {225 + (ux2[t] - ux5[t])^2 == 4, Derivative[2][ux2][t] == 0}, {ux5}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4769: {{ux5[t] -> prev[px5, 0] + t*prev[px5, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4769: {225 + (-30 + ux2[t])^2 == 4, Derivative[2][ux2][t] == 0}, tVars$4769: {ux2[t], ux2[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4769: {{Derivative[2][ux2][t] == 0}, {225 + (-30 + ux2[t])^2 == 4}, {ux2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4769: {{ux2[t] -> prev[px2, 0] + t*prev[px2, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$4766: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4765: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x2--x5-)^2+(y2--y5-)^2=4=>x2'*(x2--x5-)+y2'*(y2--y5-)=1-*(x5'-*(x2--x5-)+y5'-*(y2--y5-))&1-*(x2'-*(x2--x5-)+y2'-*(y2--y5-))=x5'*(x2--x5-)+y5'*(y2--y5-)&x2'*(y2--y5-)-y2'*(x2--x5-)=x2'-*(y2--y5-)-y2'-*(x2--x5-)&x5'*(y2--y5-)-y5'*(x2--x5-)=x5'-*(y2--y5-)-y5'-*(x2--x5-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x2--x6-)^2+(y2--y6-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4859: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux2[0],
	prev[px2, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4861: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux2][0],
	prev[px2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4864: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux6[0],
	prev[px6, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4867: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux6][0],
	prev[px6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4870: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy2[0],
	prev[py2, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4873: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy2][0],
	prev[py2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4876: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy6[0],
	prev[py6, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4879: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy6][0],
	prev[py6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4882: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4887: SimplifyCount[And] + SimplifyCount[Derivative[2][ux2][t] == 0] + SimplifyCount[Derivative[2][ux6][t] == 0] + SimplifyCount[Derivative[2][uy2][t] == 0] + SimplifyCount[Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux2][t] == 0] + SimplifyCount[Derivative[2][ux6][t] == 0] + SimplifyCount[Derivative[2][uy2][t] == 0] + SimplifyCount[Derivative[2][uy6][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000543}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4885: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux2[t] - ux6[t])^2 + (uy2[t] - uy6[t])^2 == 4 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0,
	ux2[0] == prev[px2, 0] && Derivative[1][ux2][0] == prev[px2, 1] && ux6[0] == prev[px6, 0] && Derivative[1][ux6][0] == prev[px6, 1] && uy2[0] == prev[py2, 0] && Derivative[1][uy2][0] == prev[py2, 1] && uy6[0] == prev[py6, 0] && Derivative[1][uy6][0] == prev[py6, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux2[t] - ux6[t])^2 + (uy2[t] - uy6[t])^2 == 4 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4896: {(ux2[t] - ux6[t])^2 + (uy2[t] - uy6[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux6][t] == 0, Derivative[2][uy2][t] == 0, Derivative[2][uy6][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4896: {{Derivative[2][uy6][t] == 0}, {(ux2[t] - ux6[t])^2 + (uy2[t] - uy6[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux6][t] == 0, Derivative[2][uy2][t] == 0}, {uy6}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4896: {{uy6[t] -> prev[py6, 0] + t*prev[py6, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4896: {(ux2[t] - ux6[t])^2 + (-35 + uy2[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux6][t] == 0, Derivative[2][uy2][t] == 0}, tVars$4896: {ux2[t], ux6[t], uy2[t], ux2[t], ux6[t], uy2[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4896: {{Derivative[2][uy2][t] == 0}, {(ux2[t] - ux6[t])^2 + (-35 + uy2[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux6][t] == 0}, {uy2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4896: {{uy2[t] -> prev[py2, 0] + t*prev[py2, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4896: {400 + (ux2[t] - ux6[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux6][t] == 0}, tVars$4896: {ux2[t], ux6[t], ux2[t], ux6[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4896: {{Derivative[2][ux6][t] == 0}, {400 + (ux2[t] - ux6[t])^2 == 4, Derivative[2][ux2][t] == 0}, {ux6}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4896: {{ux6[t] -> prev[px6, 0] + t*prev[px6, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$4896: {400 + (-35 + ux2[t])^2 == 4, Derivative[2][ux2][t] == 0}, tVars$4896: {ux2[t], ux2[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$4896: {{Derivative[2][ux2][t] == 0}, {400 + (-35 + ux2[t])^2 == 4}, {ux2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$4896: {{ux2[t] -> prev[px2, 0] + t*prev[px2, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$4893: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4892: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x2--x6-)^2+(y2--y6-)^2=4=>x2'*(x2--x6-)+y2'*(y2--y6-)=1-*(x6'-*(x2--x6-)+y6'-*(y2--y6-))&1-*(x2'-*(x2--x6-)+y2'-*(y2--y6-))=x6'*(x2--x6-)+y6'*(y2--y6-)&x2'*(y2--y6-)-y2'*(x2--x6-)=x2'-*(y2--y6-)-y2'-*(x2--x6-)&x6'*(y2--y6-)-y6'*(x2--x6-)=x6'-*(y2--y6-)-y6'-*(x2--x6-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x2--x7-)^2+(y2--y7-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4986: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux2[0],
	prev[px2, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4988: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux2][0],
	prev[px2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4991: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux7[0],
	prev[px7, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4994: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux7][0],
	prev[px7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$4997: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy2[0],
	prev[py2, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5000: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy2][0],
	prev[py2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5003: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy7[0],
	prev[py7, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5006: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy7][0],
	prev[py7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5009: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5014: SimplifyCount[And] + SimplifyCount[Derivative[2][ux2][t] == 0] + SimplifyCount[Derivative[2][ux7][t] == 0] + SimplifyCount[Derivative[2][uy2][t] == 0] + SimplifyCount[Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux2][t] == 0] + SimplifyCount[Derivative[2][ux7][t] == 0] + SimplifyCount[Derivative[2][uy2][t] == 0] + SimplifyCount[Derivative[2][uy7][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000538}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5012: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux2[t] - ux7[t])^2 + (uy2[t] - uy7[t])^2 == 4 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0,
	ux2[0] == prev[px2, 0] && Derivative[1][ux2][0] == prev[px2, 1] && ux7[0] == prev[px7, 0] && Derivative[1][ux7][0] == prev[px7, 1] && uy2[0] == prev[py2, 0] && Derivative[1][uy2][0] == prev[py2, 1] && uy7[0] == prev[py7, 0] && Derivative[1][uy7][0] == prev[py7, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux2[t] - ux7[t])^2 + (uy2[t] - uy7[t])^2 == 4 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5023: {(ux2[t] - ux7[t])^2 + (uy2[t] - uy7[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux7][t] == 0, Derivative[2][uy2][t] == 0, Derivative[2][uy7][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5023: {{Derivative[2][uy7][t] == 0}, {(ux2[t] - ux7[t])^2 + (uy2[t] - uy7[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux7][t] == 0, Derivative[2][uy2][t] == 0}, {uy7}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5023: {{uy7[t] -> prev[py7, 0] + t*prev[py7, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5023: {(ux2[t] - ux7[t])^2 + (-40 + uy2[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux7][t] == 0, Derivative[2][uy2][t] == 0}, tVars$5023: {ux2[t], ux7[t], uy2[t], ux2[t], ux7[t], uy2[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5023: {{Derivative[2][uy2][t] == 0}, {(ux2[t] - ux7[t])^2 + (-40 + uy2[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux7][t] == 0}, {uy2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5023: {{uy2[t] -> prev[py2, 0] + t*prev[py2, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5023: {625 + (ux2[t] - ux7[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux7][t] == 0}, tVars$5023: {ux2[t], ux7[t], ux2[t], ux7[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5023: {{Derivative[2][ux7][t] == 0}, {625 + (ux2[t] - ux7[t])^2 == 4, Derivative[2][ux2][t] == 0}, {ux7}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5023: {{ux7[t] -> prev[px7, 0] + t*prev[px7, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5023: {625 + (-40 + ux2[t])^2 == 4, Derivative[2][ux2][t] == 0}, tVars$5023: {ux2[t], ux2[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5023: {{Derivative[2][ux2][t] == 0}, {625 + (-40 + ux2[t])^2 == 4}, {ux2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5023: {{ux2[t] -> prev[px2, 0] + t*prev[px2, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$5020: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5019: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x2--x7-)^2+(y2--y7-)^2=4=>x2'*(x2--x7-)+y2'*(y2--y7-)=1-*(x7'-*(x2--x7-)+y7'-*(y2--y7-))&1-*(x2'-*(x2--x7-)+y2'-*(y2--y7-))=x7'*(x2--x7-)+y7'*(y2--y7-)&x2'*(y2--y7-)-y2'*(x2--x7-)=x2'-*(y2--y7-)-y2'-*(x2--x7-)&x7'*(y2--y7-)-y7'*(x2--x7-)=x7'-*(y2--y7-)-y7'-*(x2--x7-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x2--x8-)^2+(y2--y8-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5113: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux2[0],
	prev[px2, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5115: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux2][0],
	prev[px2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5118: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux8[0],
	prev[px8, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5121: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux8][0],
	prev[px8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5124: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy2[0],
	prev[py2, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5127: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy2][0],
	prev[py2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5130: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy8[0],
	prev[py8, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5133: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy8][0],
	prev[py8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5136: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5141: SimplifyCount[And] + SimplifyCount[Derivative[2][ux2][t] == 0] + SimplifyCount[Derivative[2][ux8][t] == 0] + SimplifyCount[Derivative[2][uy2][t] == 0] + SimplifyCount[Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux2][t] == 0] + SimplifyCount[Derivative[2][ux8][t] == 0] + SimplifyCount[Derivative[2][uy2][t] == 0] + SimplifyCount[Derivative[2][uy8][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000518}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5139: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux2[t] - ux8[t])^2 + (uy2[t] - uy8[t])^2 == 4 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0,
	ux2[0] == prev[px2, 0] && Derivative[1][ux2][0] == prev[px2, 1] && ux8[0] == prev[px8, 0] && Derivative[1][ux8][0] == prev[px8, 1] && uy2[0] == prev[py2, 0] && Derivative[1][uy2][0] == prev[py2, 1] && uy8[0] == prev[py8, 0] && Derivative[1][uy8][0] == prev[py8, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux2[t] - ux8[t])^2 + (uy2[t] - uy8[t])^2 == 4 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5150: {(ux2[t] - ux8[t])^2 + (uy2[t] - uy8[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy2][t] == 0, Derivative[2][uy8][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5150: {{Derivative[2][uy8][t] == 0}, {(ux2[t] - ux8[t])^2 + (uy2[t] - uy8[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy2][t] == 0}, {uy8}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5150: {{uy8[t] -> prev[py8, 0] + t*prev[py8, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5150: {(ux2[t] - ux8[t])^2 + (-45 + uy2[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy2][t] == 0}, tVars$5150: {ux2[t], ux8[t], uy2[t], ux2[t], ux8[t], uy2[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5150: {{Derivative[2][uy2][t] == 0}, {(ux2[t] - ux8[t])^2 + (-45 + uy2[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux8][t] == 0}, {uy2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5150: {{uy2[t] -> prev[py2, 0] + t*prev[py2, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5150: {900 + (ux2[t] - ux8[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux8][t] == 0}, tVars$5150: {ux2[t], ux8[t], ux2[t], ux8[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5150: {{Derivative[2][ux8][t] == 0}, {900 + (ux2[t] - ux8[t])^2 == 4, Derivative[2][ux2][t] == 0}, {ux8}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5150: {{ux8[t] -> prev[px8, 0] + t*prev[px8, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5150: {900 + (-45 + ux2[t])^2 == 4, Derivative[2][ux2][t] == 0}, tVars$5150: {ux2[t], ux2[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5150: {{Derivative[2][ux2][t] == 0}, {900 + (-45 + ux2[t])^2 == 4}, {ux2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5150: {{ux2[t] -> prev[px2, 0] + t*prev[px2, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$5147: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5146: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x2--x8-)^2+(y2--y8-)^2=4=>x2'*(x2--x8-)+y2'*(y2--y8-)=1-*(x8'-*(x2--x8-)+y8'-*(y2--y8-))&1-*(x2'-*(x2--x8-)+y2'-*(y2--y8-))=x8'*(x2--x8-)+y8'*(y2--y8-)&x2'*(y2--y8-)-y2'*(x2--x8-)=x2'-*(y2--y8-)-y2'-*(x2--x8-)&x8'*(y2--y8-)-y8'*(x2--x8-)=x8'-*(y2--y8-)-y8'-*(x2--x8-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x2--x9-)^2+(y2--y9-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5240: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux2[0],
	prev[px2, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5242: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux2][0],
	prev[px2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5245: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux9[0],
	prev[px9, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5248: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux9][0],
	prev[px9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5251: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy2[0],
	prev[py2, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5254: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy2][0],
	prev[py2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5257: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy9[0],
	prev[py9, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5260: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy9][0],
	prev[py9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5263: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5268: SimplifyCount[And] + SimplifyCount[Derivative[2][ux2][t] == 0] + SimplifyCount[Derivative[2][ux9][t] == 0] + SimplifyCount[Derivative[2][uy2][t] == 0] + SimplifyCount[Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux2][t] == 0] + SimplifyCount[Derivative[2][ux9][t] == 0] + SimplifyCount[Derivative[2][uy2][t] == 0] + SimplifyCount[Derivative[2][uy9][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000506}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5266: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux2[t] - ux9[t])^2 + (uy2[t] - uy9[t])^2 == 4 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0,
	ux2[0] == prev[px2, 0] && Derivative[1][ux2][0] == prev[px2, 1] && ux9[0] == prev[px9, 0] && Derivative[1][ux9][0] == prev[px9, 1] && uy2[0] == prev[py2, 0] && Derivative[1][uy2][0] == prev[py2, 1] && uy9[0] == prev[py9, 0] && Derivative[1][uy9][0] == prev[py9, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux2[t] - ux9[t])^2 + (uy2[t] - uy9[t])^2 == 4 && Derivative[2][ux2][t] == 0 && Derivative[2][uy2][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5277: {(ux2[t] - ux9[t])^2 + (uy2[t] - uy9[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy2][t] == 0, Derivative[2][uy9][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5277: {{Derivative[2][uy9][t] == 0}, {(ux2[t] - ux9[t])^2 + (uy2[t] - uy9[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy2][t] == 0}, {uy9}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5277: {{uy9[t] -> prev[py9, 0] + t*prev[py9, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5277: {(ux2[t] - ux9[t])^2 + (-50 + uy2[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy2][t] == 0}, tVars$5277: {ux2[t], ux9[t], uy2[t], ux2[t], ux9[t], uy2[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5277: {{Derivative[2][uy2][t] == 0}, {(ux2[t] - ux9[t])^2 + (-50 + uy2[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux9][t] == 0}, {uy2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5277: {{uy2[t] -> prev[py2, 0] + t*prev[py2, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5277: {1225 + (ux2[t] - ux9[t])^2 == 4, Derivative[2][ux2][t] == 0, Derivative[2][ux9][t] == 0}, tVars$5277: {ux2[t], ux9[t], ux2[t], ux9[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5277: {{Derivative[2][ux9][t] == 0}, {1225 + (ux2[t] - ux9[t])^2 == 4, Derivative[2][ux2][t] == 0}, {ux9}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5277: {{ux9[t] -> prev[px9, 0] + t*prev[px9, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5277: {1225 + (-50 + ux2[t])^2 == 4, Derivative[2][ux2][t] == 0}, tVars$5277: {ux2[t], ux2[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5277: {{Derivative[2][ux2][t] == 0}, {1225 + (-50 + ux2[t])^2 == 4}, {ux2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5277: {{ux2[t] -> prev[px2, 0] + t*prev[px2, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$5274: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5273: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x2--x9-)^2+(y2--y9-)^2=4=>x2'*(x2--x9-)+y2'*(y2--y9-)=1-*(x9'-*(x2--x9-)+y9'-*(y2--y9-))&1-*(x2'-*(x2--x9-)+y2'-*(y2--y9-))=x9'*(x2--x9-)+y9'*(y2--y9-)&x2'*(y2--y9-)-y2'*(x2--x9-)=x2'-*(y2--y9-)-y2'-*(x2--x9-)&x9'*(y2--y9-)-y9'*(x2--x9-)=x9'-*(y2--y9-)-y9'-*(x2--x9-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x3--x4-)^2+(y3--y4-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5367: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux3[0],
	prev[px3, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5369: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux3][0],
	prev[px3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5372: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux4[0],
	prev[px4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5375: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux4][0],
	prev[px4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5378: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy3[0],
	prev[py3, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5381: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy3][0],
	prev[py3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5384: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy4[0],
	prev[py4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5387: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy4][0],
	prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5390: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5395: SimplifyCount[And] + SimplifyCount[Derivative[2][ux3][t] == 0] + SimplifyCount[Derivative[2][ux4][t] == 0] + SimplifyCount[Derivative[2][uy3][t] == 0] + SimplifyCount[Derivative[2][uy4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux3][t] == 0] + SimplifyCount[Derivative[2][ux4][t] == 0] + SimplifyCount[Derivative[2][uy3][t] == 0] + SimplifyCount[Derivative[2][uy4][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000542}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5393: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux3[t] - ux4[t])^2 + (uy3[t] - uy4[t])^2 == 4 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0,
	ux3[0] == prev[px3, 0] && Derivative[1][ux3][0] == prev[px3, 1] && ux4[0] == prev[px4, 0] && Derivative[1][ux4][0] == prev[px4, 1] && uy3[0] == prev[py3, 0] && Derivative[1][uy3][0] == prev[py3, 1] && uy4[0] == prev[py4, 0] && Derivative[1][uy4][0] == prev[py4, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux3[t] - ux4[t])^2 + (uy3[t] - uy4[t])^2 == 4 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5404: {(ux3[t] - ux4[t])^2 + (uy3[t] - uy4[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux4][t] == 0, Derivative[2][uy3][t] == 0, Derivative[2][uy4][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5404: {{Derivative[2][uy4][t] == 0}, {(ux3[t] - ux4[t])^2 + (uy3[t] - uy4[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux4][t] == 0, Derivative[2][uy3][t] == 0}, {uy4}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5404: {{uy4[t] -> prev[py4, 0] + t*prev[py4, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5404: {(ux3[t] - ux4[t])^2 + (-25 + uy3[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux4][t] == 0, Derivative[2][uy3][t] == 0}, tVars$5404: {ux3[t], ux4[t], uy3[t], ux3[t], ux4[t], uy3[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5404: {{Derivative[2][uy3][t] == 0}, {(ux3[t] - ux4[t])^2 + (-25 + uy3[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux4][t] == 0}, {uy3}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5404: {{uy3[t] -> prev[py3, 0] + t*prev[py3, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5404: {25 + (ux3[t] - ux4[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux4][t] == 0}, tVars$5404: {ux3[t], ux4[t], ux3[t], ux4[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5404: {{Derivative[2][ux4][t] == 0}, {25 + (ux3[t] - ux4[t])^2 == 4, Derivative[2][ux3][t] == 0}, {ux4}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5404: {{ux4[t] -> prev[px4, 0] + t*prev[px4, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5404: {25 + (-25 + ux3[t])^2 == 4, Derivative[2][ux3][t] == 0}, tVars$5404: {ux3[t], ux3[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5404: {{Derivative[2][ux3][t] == 0}, {25 + (-25 + ux3[t])^2 == 4}, {ux3}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5404: {{ux3[t] -> prev[px3, 0] + t*prev[px3, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$5401: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5400: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x3--x4-)^2+(y3--y4-)^2=4=>x3'*(x3--x4-)+y3'*(y3--y4-)=1-*(x4'-*(x3--x4-)+y4'-*(y3--y4-))&1-*(x3'-*(x3--x4-)+y3'-*(y3--y4-))=x4'*(x3--x4-)+y4'*(y3--y4-)&x3'*(y3--y4-)-y3'*(x3--x4-)=x3'-*(y3--y4-)-y3'-*(x3--x4-)&x4'*(y3--y4-)-y4'*(x3--x4-)=x4'-*(y3--y4-)-y4'-*(x3--x4-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x3--x5-)^2+(y3--y5-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5494: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux3[0],
	prev[px3, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5496: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux3][0],
	prev[px3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5499: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux5[0],
	prev[px5, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5502: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux5][0],
	prev[px5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5505: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy3[0],
	prev[py3, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5508: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy3][0],
	prev[py3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5511: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy5[0],
	prev[py5, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5514: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy5][0],
	prev[py5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5517: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5522: SimplifyCount[And] + SimplifyCount[Derivative[2][ux3][t] == 0] + SimplifyCount[Derivative[2][ux5][t] == 0] + SimplifyCount[Derivative[2][uy3][t] == 0] + SimplifyCount[Derivative[2][uy5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux3][t] == 0] + SimplifyCount[Derivative[2][ux5][t] == 0] + SimplifyCount[Derivative[2][uy3][t] == 0] + SimplifyCount[Derivative[2][uy5][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000531}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5520: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux3[t] - ux5[t])^2 + (uy3[t] - uy5[t])^2 == 4 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0,
	ux3[0] == prev[px3, 0] && Derivative[1][ux3][0] == prev[px3, 1] && ux5[0] == prev[px5, 0] && Derivative[1][ux5][0] == prev[px5, 1] && uy3[0] == prev[py3, 0] && Derivative[1][uy3][0] == prev[py3, 1] && uy5[0] == prev[py5, 0] && Derivative[1][uy5][0] == prev[py5, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux3[t] - ux5[t])^2 + (uy3[t] - uy5[t])^2 == 4 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5531: {(ux3[t] - ux5[t])^2 + (uy3[t] - uy5[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux5][t] == 0, Derivative[2][uy3][t] == 0, Derivative[2][uy5][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5531: {{Derivative[2][uy5][t] == 0}, {(ux3[t] - ux5[t])^2 + (uy3[t] - uy5[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux5][t] == 0, Derivative[2][uy3][t] == 0}, {uy5}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5531: {{uy5[t] -> prev[py5, 0] + t*prev[py5, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5531: {(ux3[t] - ux5[t])^2 + (-30 + uy3[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux5][t] == 0, Derivative[2][uy3][t] == 0}, tVars$5531: {ux3[t], ux5[t], uy3[t], ux3[t], ux5[t], uy3[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5531: {{Derivative[2][uy3][t] == 0}, {(ux3[t] - ux5[t])^2 + (-30 + uy3[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux5][t] == 0}, {uy3}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5531: {{uy3[t] -> prev[py3, 0] + t*prev[py3, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5531: {100 + (ux3[t] - ux5[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux5][t] == 0}, tVars$5531: {ux3[t], ux5[t], ux3[t], ux5[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5531: {{Derivative[2][ux5][t] == 0}, {100 + (ux3[t] - ux5[t])^2 == 4, Derivative[2][ux3][t] == 0}, {ux5}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5531: {{ux5[t] -> prev[px5, 0] + t*prev[px5, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5531: {100 + (-30 + ux3[t])^2 == 4, Derivative[2][ux3][t] == 0}, tVars$5531: {ux3[t], ux3[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5531: {{Derivative[2][ux3][t] == 0}, {100 + (-30 + ux3[t])^2 == 4}, {ux3}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5531: {{ux3[t] -> prev[px3, 0] + t*prev[px3, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$5528: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5527: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x3--x5-)^2+(y3--y5-)^2=4=>x3'*(x3--x5-)+y3'*(y3--y5-)=1-*(x5'-*(x3--x5-)+y5'-*(y3--y5-))&1-*(x3'-*(x3--x5-)+y3'-*(y3--y5-))=x5'*(x3--x5-)+y5'*(y3--y5-)&x3'*(y3--y5-)-y3'*(x3--x5-)=x3'-*(y3--y5-)-y3'-*(x3--x5-)&x5'*(y3--y5-)-y5'*(x3--x5-)=x5'-*(y3--y5-)-y5'-*(x3--x5-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x3--x6-)^2+(y3--y6-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5621: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux3[0],
	prev[px3, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5623: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux3][0],
	prev[px3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5626: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux6[0],
	prev[px6, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5629: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux6][0],
	prev[px6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5632: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy3[0],
	prev[py3, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5635: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy3][0],
	prev[py3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5638: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy6[0],
	prev[py6, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5641: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy6][0],
	prev[py6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5644: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5649: SimplifyCount[And] + SimplifyCount[Derivative[2][ux3][t] == 0] + SimplifyCount[Derivative[2][ux6][t] == 0] + SimplifyCount[Derivative[2][uy3][t] == 0] + SimplifyCount[Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux3][t] == 0] + SimplifyCount[Derivative[2][ux6][t] == 0] + SimplifyCount[Derivative[2][uy3][t] == 0] + SimplifyCount[Derivative[2][uy6][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000542}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5647: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux3[t] - ux6[t])^2 + (uy3[t] - uy6[t])^2 == 4 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0,
	ux3[0] == prev[px3, 0] && Derivative[1][ux3][0] == prev[px3, 1] && ux6[0] == prev[px6, 0] && Derivative[1][ux6][0] == prev[px6, 1] && uy3[0] == prev[py3, 0] && Derivative[1][uy3][0] == prev[py3, 1] && uy6[0] == prev[py6, 0] && Derivative[1][uy6][0] == prev[py6, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux3[t] - ux6[t])^2 + (uy3[t] - uy6[t])^2 == 4 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5658: {(ux3[t] - ux6[t])^2 + (uy3[t] - uy6[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux6][t] == 0, Derivative[2][uy3][t] == 0, Derivative[2][uy6][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5658: {{Derivative[2][uy6][t] == 0}, {(ux3[t] - ux6[t])^2 + (uy3[t] - uy6[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux6][t] == 0, Derivative[2][uy3][t] == 0}, {uy6}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5658: {{uy6[t] -> prev[py6, 0] + t*prev[py6, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5658: {(ux3[t] - ux6[t])^2 + (-35 + uy3[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux6][t] == 0, Derivative[2][uy3][t] == 0}, tVars$5658: {ux3[t], ux6[t], uy3[t], ux3[t], ux6[t], uy3[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5658: {{Derivative[2][uy3][t] == 0}, {(ux3[t] - ux6[t])^2 + (-35 + uy3[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux6][t] == 0}, {uy3}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5658: {{uy3[t] -> prev[py3, 0] + t*prev[py3, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5658: {225 + (ux3[t] - ux6[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux6][t] == 0}, tVars$5658: {ux3[t], ux6[t], ux3[t], ux6[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5658: {{Derivative[2][ux6][t] == 0}, {225 + (ux3[t] - ux6[t])^2 == 4, Derivative[2][ux3][t] == 0}, {ux6}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5658: {{ux6[t] -> prev[px6, 0] + t*prev[px6, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5658: {225 + (-35 + ux3[t])^2 == 4, Derivative[2][ux3][t] == 0}, tVars$5658: {ux3[t], ux3[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5658: {{Derivative[2][ux3][t] == 0}, {225 + (-35 + ux3[t])^2 == 4}, {ux3}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5658: {{ux3[t] -> prev[px3, 0] + t*prev[px3, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$5655: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5654: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x3--x6-)^2+(y3--y6-)^2=4=>x3'*(x3--x6-)+y3'*(y3--y6-)=1-*(x6'-*(x3--x6-)+y6'-*(y3--y6-))&1-*(x3'-*(x3--x6-)+y3'-*(y3--y6-))=x6'*(x3--x6-)+y6'*(y3--y6-)&x3'*(y3--y6-)-y3'*(x3--x6-)=x3'-*(y3--y6-)-y3'-*(x3--x6-)&x6'*(y3--y6-)-y6'*(x3--x6-)=x6'-*(y3--y6-)-y6'-*(x3--x6-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x3--x7-)^2+(y3--y7-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5748: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux3[0],
	prev[px3, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5750: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux3][0],
	prev[px3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5753: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux7[0],
	prev[px7, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5756: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux7][0],
	prev[px7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5759: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy3[0],
	prev[py3, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5762: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy3][0],
	prev[py3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5765: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy7[0],
	prev[py7, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5768: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy7][0],
	prev[py7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5771: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5776: SimplifyCount[And] + SimplifyCount[Derivative[2][ux3][t] == 0] + SimplifyCount[Derivative[2][ux7][t] == 0] + SimplifyCount[Derivative[2][uy3][t] == 0] + SimplifyCount[Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux3][t] == 0] + SimplifyCount[Derivative[2][ux7][t] == 0] + SimplifyCount[Derivative[2][uy3][t] == 0] + SimplifyCount[Derivative[2][uy7][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000529}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5774: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux3[t] - ux7[t])^2 + (uy3[t] - uy7[t])^2 == 4 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0,
	ux3[0] == prev[px3, 0] && Derivative[1][ux3][0] == prev[px3, 1] && ux7[0] == prev[px7, 0] && Derivative[1][ux7][0] == prev[px7, 1] && uy3[0] == prev[py3, 0] && Derivative[1][uy3][0] == prev[py3, 1] && uy7[0] == prev[py7, 0] && Derivative[1][uy7][0] == prev[py7, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux3[t] - ux7[t])^2 + (uy3[t] - uy7[t])^2 == 4 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5785: {(ux3[t] - ux7[t])^2 + (uy3[t] - uy7[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux7][t] == 0, Derivative[2][uy3][t] == 0, Derivative[2][uy7][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5785: {{Derivative[2][uy7][t] == 0}, {(ux3[t] - ux7[t])^2 + (uy3[t] - uy7[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux7][t] == 0, Derivative[2][uy3][t] == 0}, {uy7}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5785: {{uy7[t] -> prev[py7, 0] + t*prev[py7, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5785: {(ux3[t] - ux7[t])^2 + (-40 + uy3[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux7][t] == 0, Derivative[2][uy3][t] == 0}, tVars$5785: {ux3[t], ux7[t], uy3[t], ux3[t], ux7[t], uy3[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5785: {{Derivative[2][uy3][t] == 0}, {(ux3[t] - ux7[t])^2 + (-40 + uy3[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux7][t] == 0}, {uy3}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5785: {{uy3[t] -> prev[py3, 0] + t*prev[py3, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5785: {400 + (ux3[t] - ux7[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux7][t] == 0}, tVars$5785: {ux3[t], ux7[t], ux3[t], ux7[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5785: {{Derivative[2][ux7][t] == 0}, {400 + (ux3[t] - ux7[t])^2 == 4, Derivative[2][ux3][t] == 0}, {ux7}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5785: {{ux7[t] -> prev[px7, 0] + t*prev[px7, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5785: {400 + (-40 + ux3[t])^2 == 4, Derivative[2][ux3][t] == 0}, tVars$5785: {ux3[t], ux3[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5785: {{Derivative[2][ux3][t] == 0}, {400 + (-40 + ux3[t])^2 == 4}, {ux3}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5785: {{ux3[t] -> prev[px3, 0] + t*prev[px3, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$5782: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5781: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x3--x7-)^2+(y3--y7-)^2=4=>x3'*(x3--x7-)+y3'*(y3--y7-)=1-*(x7'-*(x3--x7-)+y7'-*(y3--y7-))&1-*(x3'-*(x3--x7-)+y3'-*(y3--y7-))=x7'*(x3--x7-)+y7'*(y3--y7-)&x3'*(y3--y7-)-y3'*(x3--x7-)=x3'-*(y3--y7-)-y3'-*(x3--x7-)&x7'*(y3--y7-)-y7'*(x3--x7-)=x7'-*(y3--y7-)-y7'-*(x3--x7-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x3--x8-)^2+(y3--y8-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5875: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux3[0],
	prev[px3, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5877: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux3][0],
	prev[px3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5880: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux8[0],
	prev[px8, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5883: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux8][0],
	prev[px8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5886: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy3[0],
	prev[py3, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5889: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy3][0],
	prev[py3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5892: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy8[0],
	prev[py8, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5895: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy8][0],
	prev[py8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5898: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5903: SimplifyCount[And] + SimplifyCount[Derivative[2][ux3][t] == 0] + SimplifyCount[Derivative[2][ux8][t] == 0] + SimplifyCount[Derivative[2][uy3][t] == 0] + SimplifyCount[Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux3][t] == 0] + SimplifyCount[Derivative[2][ux8][t] == 0] + SimplifyCount[Derivative[2][uy3][t] == 0] + SimplifyCount[Derivative[2][uy8][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000534}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5901: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux3[t] - ux8[t])^2 + (uy3[t] - uy8[t])^2 == 4 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0,
	ux3[0] == prev[px3, 0] && Derivative[1][ux3][0] == prev[px3, 1] && ux8[0] == prev[px8, 0] && Derivative[1][ux8][0] == prev[px8, 1] && uy3[0] == prev[py3, 0] && Derivative[1][uy3][0] == prev[py3, 1] && uy8[0] == prev[py8, 0] && Derivative[1][uy8][0] == prev[py8, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux3[t] - ux8[t])^2 + (uy3[t] - uy8[t])^2 == 4 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5912: {(ux3[t] - ux8[t])^2 + (uy3[t] - uy8[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy3][t] == 0, Derivative[2][uy8][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5912: {{Derivative[2][uy8][t] == 0}, {(ux3[t] - ux8[t])^2 + (uy3[t] - uy8[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy3][t] == 0}, {uy8}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5912: {{uy8[t] -> prev[py8, 0] + t*prev[py8, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5912: {(ux3[t] - ux8[t])^2 + (-45 + uy3[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy3][t] == 0}, tVars$5912: {ux3[t], ux8[t], uy3[t], ux3[t], ux8[t], uy3[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5912: {{Derivative[2][uy3][t] == 0}, {(ux3[t] - ux8[t])^2 + (-45 + uy3[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux8][t] == 0}, {uy3}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5912: {{uy3[t] -> prev[py3, 0] + t*prev[py3, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5912: {625 + (ux3[t] - ux8[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux8][t] == 0}, tVars$5912: {ux3[t], ux8[t], ux3[t], ux8[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5912: {{Derivative[2][ux8][t] == 0}, {625 + (ux3[t] - ux8[t])^2 == 4, Derivative[2][ux3][t] == 0}, {ux8}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5912: {{ux8[t] -> prev[px8, 0] + t*prev[px8, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$5912: {625 + (-45 + ux3[t])^2 == 4, Derivative[2][ux3][t] == 0}, tVars$5912: {ux3[t], ux3[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$5912: {{Derivative[2][ux3][t] == 0}, {625 + (-45 + ux3[t])^2 == 4}, {ux3}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$5912: {{ux3[t] -> prev[px3, 0] + t*prev[px3, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$5909: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$5908: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x3--x8-)^2+(y3--y8-)^2=4=>x3'*(x3--x8-)+y3'*(y3--y8-)=1-*(x8'-*(x3--x8-)+y8'-*(y3--y8-))&1-*(x3'-*(x3--x8-)+y3'-*(y3--y8-))=x8'*(x3--x8-)+y8'*(y3--y8-)&x3'*(y3--y8-)-y3'*(x3--x8-)=x3'-*(y3--y8-)-y3'-*(x3--x8-)&x8'*(y3--y8-)-y8'*(x3--x8-)=x8'-*(y3--y8-)-y8'-*(x3--x8-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x3--x9-)^2+(y3--y9-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6002: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux3[0],
	prev[px3, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6004: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux3][0],
	prev[px3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6007: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux9[0],
	prev[px9, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6010: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux9][0],
	prev[px9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6013: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy3[0],
	prev[py3, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6016: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy3][0],
	prev[py3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6019: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy9[0],
	prev[py9, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6022: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy9][0],
	prev[py9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6025: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6030: SimplifyCount[And] + SimplifyCount[Derivative[2][ux3][t] == 0] + SimplifyCount[Derivative[2][ux9][t] == 0] + SimplifyCount[Derivative[2][uy3][t] == 0] + SimplifyCount[Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux3][t] == 0] + SimplifyCount[Derivative[2][ux9][t] == 0] + SimplifyCount[Derivative[2][uy3][t] == 0] + SimplifyCount[Derivative[2][uy9][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000531}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6028: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux3[t] - ux9[t])^2 + (uy3[t] - uy9[t])^2 == 4 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0,
	ux3[0] == prev[px3, 0] && Derivative[1][ux3][0] == prev[px3, 1] && ux9[0] == prev[px9, 0] && Derivative[1][ux9][0] == prev[px9, 1] && uy3[0] == prev[py3, 0] && Derivative[1][uy3][0] == prev[py3, 1] && uy9[0] == prev[py9, 0] && Derivative[1][uy9][0] == prev[py9, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux3[t] - ux9[t])^2 + (uy3[t] - uy9[t])^2 == 4 && Derivative[2][ux3][t] == 0 && Derivative[2][uy3][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6039: {(ux3[t] - ux9[t])^2 + (uy3[t] - uy9[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy3][t] == 0, Derivative[2][uy9][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6039: {{Derivative[2][uy9][t] == 0}, {(ux3[t] - ux9[t])^2 + (uy3[t] - uy9[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy3][t] == 0}, {uy9}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6039: {{uy9[t] -> prev[py9, 0] + t*prev[py9, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6039: {(ux3[t] - ux9[t])^2 + (-50 + uy3[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy3][t] == 0}, tVars$6039: {ux3[t], ux9[t], uy3[t], ux3[t], ux9[t], uy3[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6039: {{Derivative[2][uy3][t] == 0}, {(ux3[t] - ux9[t])^2 + (-50 + uy3[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux9][t] == 0}, {uy3}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6039: {{uy3[t] -> prev[py3, 0] + t*prev[py3, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6039: {900 + (ux3[t] - ux9[t])^2 == 4, Derivative[2][ux3][t] == 0, Derivative[2][ux9][t] == 0}, tVars$6039: {ux3[t], ux9[t], ux3[t], ux9[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6039: {{Derivative[2][ux9][t] == 0}, {900 + (ux3[t] - ux9[t])^2 == 4, Derivative[2][ux3][t] == 0}, {ux9}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6039: {{ux9[t] -> prev[px9, 0] + t*prev[px9, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6039: {900 + (-50 + ux3[t])^2 == 4, Derivative[2][ux3][t] == 0}, tVars$6039: {ux3[t], ux3[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6039: {{Derivative[2][ux3][t] == 0}, {900 + (-50 + ux3[t])^2 == 4}, {ux3}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6039: {{ux3[t] -> prev[px3, 0] + t*prev[px3, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$6036: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6035: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x3--x9-)^2+(y3--y9-)^2=4=>x3'*(x3--x9-)+y3'*(y3--y9-)=1-*(x9'-*(x3--x9-)+y9'-*(y3--y9-))&1-*(x3'-*(x3--x9-)+y3'-*(y3--y9-))=x9'*(x3--x9-)+y9'*(y3--y9-)&x3'*(y3--y9-)-y3'*(x3--x9-)=x3'-*(y3--y9-)-y3'-*(x3--x9-)&x9'*(y3--y9-)-y9'*(x3--x9-)=x9'-*(y3--y9-)-y9'-*(x3--x9-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x4--x5-)^2+(y4--y5-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6129: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux4[0],
	prev[px4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6131: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux4][0],
	prev[px4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6134: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux5[0],
	prev[px5, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6137: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux5][0],
	prev[px5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6140: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy4[0],
	prev[py4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6143: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy4][0],
	prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6146: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy5[0],
	prev[py5, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6149: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy5][0],
	prev[py5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6152: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6157: SimplifyCount[And] + SimplifyCount[Derivative[2][ux4][t] == 0] + SimplifyCount[Derivative[2][ux5][t] == 0] + SimplifyCount[Derivative[2][uy4][t] == 0] + SimplifyCount[Derivative[2][uy5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux4][t] == 0] + SimplifyCount[Derivative[2][ux5][t] == 0] + SimplifyCount[Derivative[2][uy4][t] == 0] + SimplifyCount[Derivative[2][uy5][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000532}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6155: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux4[t] - ux5[t])^2 + (uy4[t] - uy5[t])^2 == 4 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0,
	ux4[0] == prev[px4, 0] && Derivative[1][ux4][0] == prev[px4, 1] && ux5[0] == prev[px5, 0] && Derivative[1][ux5][0] == prev[px5, 1] && uy4[0] == prev[py4, 0] && Derivative[1][uy4][0] == prev[py4, 1] && uy5[0] == prev[py5, 0] && Derivative[1][uy5][0] == prev[py5, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux4[t] - ux5[t])^2 + (uy4[t] - uy5[t])^2 == 4 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6166: {(ux4[t] - ux5[t])^2 + (uy4[t] - uy5[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux5][t] == 0, Derivative[2][uy4][t] == 0, Derivative[2][uy5][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6166: {{Derivative[2][uy5][t] == 0}, {(ux4[t] - ux5[t])^2 + (uy4[t] - uy5[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux5][t] == 0, Derivative[2][uy4][t] == 0}, {uy5}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6166: {{uy5[t] -> prev[py5, 0] + t*prev[py5, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6166: {(ux4[t] - ux5[t])^2 + (-30 + uy4[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux5][t] == 0, Derivative[2][uy4][t] == 0}, tVars$6166: {ux4[t], ux5[t], uy4[t], ux4[t], ux5[t], uy4[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6166: {{Derivative[2][uy4][t] == 0}, {(ux4[t] - ux5[t])^2 + (-30 + uy4[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux5][t] == 0}, {uy4}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6166: {{uy4[t] -> prev[py4, 0] + t*prev[py4, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6166: {25 + (ux4[t] - ux5[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux5][t] == 0}, tVars$6166: {ux4[t], ux5[t], ux4[t], ux5[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6166: {{Derivative[2][ux5][t] == 0}, {25 + (ux4[t] - ux5[t])^2 == 4, Derivative[2][ux4][t] == 0}, {ux5}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6166: {{ux5[t] -> prev[px5, 0] + t*prev[px5, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6166: {25 + (-30 + ux4[t])^2 == 4, Derivative[2][ux4][t] == 0}, tVars$6166: {ux4[t], ux4[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6166: {{Derivative[2][ux4][t] == 0}, {25 + (-30 + ux4[t])^2 == 4}, {ux4}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6166: {{ux4[t] -> prev[px4, 0] + t*prev[px4, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$6163: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6162: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x4--x5-)^2+(y4--y5-)^2=4=>x4'*(x4--x5-)+y4'*(y4--y5-)=1-*(x5'-*(x4--x5-)+y5'-*(y4--y5-))&1-*(x4'-*(x4--x5-)+y4'-*(y4--y5-))=x5'*(x4--x5-)+y5'*(y4--y5-)&x4'*(y4--y5-)-y4'*(x4--x5-)=x4'-*(y4--y5-)-y4'-*(x4--x5-)&x5'*(y4--y5-)-y5'*(x4--x5-)=x5'-*(y4--y5-)-y5'-*(x4--x5-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x4--x6-)^2+(y4--y6-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6256: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux4[0],
	prev[px4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6258: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux4][0],
	prev[px4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6261: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux6[0],
	prev[px6, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6264: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux6][0],
	prev[px6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6267: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy4[0],
	prev[py4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6270: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy4][0],
	prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6273: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy6[0],
	prev[py6, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6276: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy6][0],
	prev[py6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6279: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6284: SimplifyCount[And] + SimplifyCount[Derivative[2][ux4][t] == 0] + SimplifyCount[Derivative[2][ux6][t] == 0] + SimplifyCount[Derivative[2][uy4][t] == 0] + SimplifyCount[Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux4][t] == 0] + SimplifyCount[Derivative[2][ux6][t] == 0] + SimplifyCount[Derivative[2][uy4][t] == 0] + SimplifyCount[Derivative[2][uy6][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000546}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6282: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux4[t] - ux6[t])^2 + (uy4[t] - uy6[t])^2 == 4 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0,
	ux4[0] == prev[px4, 0] && Derivative[1][ux4][0] == prev[px4, 1] && ux6[0] == prev[px6, 0] && Derivative[1][ux6][0] == prev[px6, 1] && uy4[0] == prev[py4, 0] && Derivative[1][uy4][0] == prev[py4, 1] && uy6[0] == prev[py6, 0] && Derivative[1][uy6][0] == prev[py6, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux4[t] - ux6[t])^2 + (uy4[t] - uy6[t])^2 == 4 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6293: {(ux4[t] - ux6[t])^2 + (uy4[t] - uy6[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux6][t] == 0, Derivative[2][uy4][t] == 0, Derivative[2][uy6][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6293: {{Derivative[2][uy6][t] == 0}, {(ux4[t] - ux6[t])^2 + (uy4[t] - uy6[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux6][t] == 0, Derivative[2][uy4][t] == 0}, {uy6}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6293: {{uy6[t] -> prev[py6, 0] + t*prev[py6, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6293: {(ux4[t] - ux6[t])^2 + (-35 + uy4[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux6][t] == 0, Derivative[2][uy4][t] == 0}, tVars$6293: {ux4[t], ux6[t], uy4[t], ux4[t], ux6[t], uy4[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6293: {{Derivative[2][uy4][t] == 0}, {(ux4[t] - ux6[t])^2 + (-35 + uy4[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux6][t] == 0}, {uy4}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6293: {{uy4[t] -> prev[py4, 0] + t*prev[py4, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6293: {100 + (ux4[t] - ux6[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux6][t] == 0}, tVars$6293: {ux4[t], ux6[t], ux4[t], ux6[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6293: {{Derivative[2][ux6][t] == 0}, {100 + (ux4[t] - ux6[t])^2 == 4, Derivative[2][ux4][t] == 0}, {ux6}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6293: {{ux6[t] -> prev[px6, 0] + t*prev[px6, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6293: {100 + (-35 + ux4[t])^2 == 4, Derivative[2][ux4][t] == 0}, tVars$6293: {ux4[t], ux4[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6293: {{Derivative[2][ux4][t] == 0}, {100 + (-35 + ux4[t])^2 == 4}, {ux4}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6293: {{ux4[t] -> prev[px4, 0] + t*prev[px4, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$6290: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6289: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x4--x6-)^2+(y4--y6-)^2=4=>x4'*(x4--x6-)+y4'*(y4--y6-)=1-*(x6'-*(x4--x6-)+y6'-*(y4--y6-))&1-*(x4'-*(x4--x6-)+y4'-*(y4--y6-))=x6'*(x4--x6-)+y6'*(y4--y6-)&x4'*(y4--y6-)-y4'*(x4--x6-)=x4'-*(y4--y6-)-y4'-*(x4--x6-)&x6'*(y4--y6-)-y6'*(x4--x6-)=x6'-*(y4--y6-)-y6'-*(x4--x6-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x4--x7-)^2+(y4--y7-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6383: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux4[0],
	prev[px4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6385: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux4][0],
	prev[px4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6388: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux7[0],
	prev[px7, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6391: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux7][0],
	prev[px7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6394: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy4[0],
	prev[py4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6397: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy4][0],
	prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6400: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy7[0],
	prev[py7, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6403: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy7][0],
	prev[py7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6406: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6411: SimplifyCount[And] + SimplifyCount[Derivative[2][ux4][t] == 0] + SimplifyCount[Derivative[2][ux7][t] == 0] + SimplifyCount[Derivative[2][uy4][t] == 0] + SimplifyCount[Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux4][t] == 0] + SimplifyCount[Derivative[2][ux7][t] == 0] + SimplifyCount[Derivative[2][uy4][t] == 0] + SimplifyCount[Derivative[2][uy7][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000728}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6409: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux4[t] - ux7[t])^2 + (uy4[t] - uy7[t])^2 == 4 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0,
	ux4[0] == prev[px4, 0] && Derivative[1][ux4][0] == prev[px4, 1] && ux7[0] == prev[px7, 0] && Derivative[1][ux7][0] == prev[px7, 1] && uy4[0] == prev[py4, 0] && Derivative[1][uy4][0] == prev[py4, 1] && uy7[0] == prev[py7, 0] && Derivative[1][uy7][0] == prev[py7, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux4[t] - ux7[t])^2 + (uy4[t] - uy7[t])^2 == 4 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6420: {(ux4[t] - ux7[t])^2 + (uy4[t] - uy7[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux7][t] == 0, Derivative[2][uy4][t] == 0, Derivative[2][uy7][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6420: {{Derivative[2][uy7][t] == 0}, {(ux4[t] - ux7[t])^2 + (uy4[t] - uy7[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux7][t] == 0, Derivative[2][uy4][t] == 0}, {uy7}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6420: {{uy7[t] -> prev[py7, 0] + t*prev[py7, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6420: {(ux4[t] - ux7[t])^2 + (-40 + uy4[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux7][t] == 0, Derivative[2][uy4][t] == 0}, tVars$6420: {ux4[t], ux7[t], uy4[t], ux4[t], ux7[t], uy4[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6420: {{Derivative[2][uy4][t] == 0}, {(ux4[t] - ux7[t])^2 + (-40 + uy4[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux7][t] == 0}, {uy4}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6420: {{uy4[t] -> prev[py4, 0] + t*prev[py4, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6420: {225 + (ux4[t] - ux7[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux7][t] == 0}, tVars$6420: {ux4[t], ux7[t], ux4[t], ux7[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6420: {{Derivative[2][ux7][t] == 0}, {225 + (ux4[t] - ux7[t])^2 == 4, Derivative[2][ux4][t] == 0}, {ux7}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6420: {{ux7[t] -> prev[px7, 0] + t*prev[px7, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6420: {225 + (-40 + ux4[t])^2 == 4, Derivative[2][ux4][t] == 0}, tVars$6420: {ux4[t], ux4[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6420: {{Derivative[2][ux4][t] == 0}, {225 + (-40 + ux4[t])^2 == 4}, {ux4}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6420: {{ux4[t] -> prev[px4, 0] + t*prev[px4, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$6417: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6416: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x4--x7-)^2+(y4--y7-)^2=4=>x4'*(x4--x7-)+y4'*(y4--y7-)=1-*(x7'-*(x4--x7-)+y7'-*(y4--y7-))&1-*(x4'-*(x4--x7-)+y4'-*(y4--y7-))=x7'*(x4--x7-)+y7'*(y4--y7-)&x4'*(y4--y7-)-y4'*(x4--x7-)=x4'-*(y4--y7-)-y4'-*(x4--x7-)&x7'*(y4--y7-)-y7'*(x4--x7-)=x7'-*(y4--y7-)-y7'-*(x4--x7-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x4--x8-)^2+(y4--y8-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6510: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux4[0],
	prev[px4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6512: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux4][0],
	prev[px4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6515: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux8[0],
	prev[px8, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6518: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux8][0],
	prev[px8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6521: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy4[0],
	prev[py4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6524: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy4][0],
	prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6527: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy8[0],
	prev[py8, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6530: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy8][0],
	prev[py8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6533: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6538: SimplifyCount[And] + SimplifyCount[Derivative[2][ux4][t] == 0] + SimplifyCount[Derivative[2][ux8][t] == 0] + SimplifyCount[Derivative[2][uy4][t] == 0] + SimplifyCount[Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux4][t] == 0] + SimplifyCount[Derivative[2][ux8][t] == 0] + SimplifyCount[Derivative[2][uy4][t] == 0] + SimplifyCount[Derivative[2][uy8][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000531}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6536: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux4[t] - ux8[t])^2 + (uy4[t] - uy8[t])^2 == 4 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0,
	ux4[0] == prev[px4, 0] && Derivative[1][ux4][0] == prev[px4, 1] && ux8[0] == prev[px8, 0] && Derivative[1][ux8][0] == prev[px8, 1] && uy4[0] == prev[py4, 0] && Derivative[1][uy4][0] == prev[py4, 1] && uy8[0] == prev[py8, 0] && Derivative[1][uy8][0] == prev[py8, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux4[t] - ux8[t])^2 + (uy4[t] - uy8[t])^2 == 4 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6547: {(ux4[t] - ux8[t])^2 + (uy4[t] - uy8[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy4][t] == 0, Derivative[2][uy8][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6547: {{Derivative[2][uy8][t] == 0}, {(ux4[t] - ux8[t])^2 + (uy4[t] - uy8[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy4][t] == 0}, {uy8}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6547: {{uy8[t] -> prev[py8, 0] + t*prev[py8, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6547: {(ux4[t] - ux8[t])^2 + (-45 + uy4[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy4][t] == 0}, tVars$6547: {ux4[t], ux8[t], uy4[t], ux4[t], ux8[t], uy4[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6547: {{Derivative[2][uy4][t] == 0}, {(ux4[t] - ux8[t])^2 + (-45 + uy4[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux8][t] == 0}, {uy4}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6547: {{uy4[t] -> prev[py4, 0] + t*prev[py4, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6547: {400 + (ux4[t] - ux8[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux8][t] == 0}, tVars$6547: {ux4[t], ux8[t], ux4[t], ux8[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6547: {{Derivative[2][ux8][t] == 0}, {400 + (ux4[t] - ux8[t])^2 == 4, Derivative[2][ux4][t] == 0}, {ux8}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6547: {{ux8[t] -> prev[px8, 0] + t*prev[px8, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6547: {400 + (-45 + ux4[t])^2 == 4, Derivative[2][ux4][t] == 0}, tVars$6547: {ux4[t], ux4[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6547: {{Derivative[2][ux4][t] == 0}, {400 + (-45 + ux4[t])^2 == 4}, {ux4}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6547: {{ux4[t] -> prev[px4, 0] + t*prev[px4, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$6544: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6543: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x4--x8-)^2+(y4--y8-)^2=4=>x4'*(x4--x8-)+y4'*(y4--y8-)=1-*(x8'-*(x4--x8-)+y8'-*(y4--y8-))&1-*(x4'-*(x4--x8-)+y4'-*(y4--y8-))=x8'*(x4--x8-)+y8'*(y4--y8-)&x4'*(y4--y8-)-y4'*(x4--x8-)=x4'-*(y4--y8-)-y4'-*(x4--x8-)&x8'*(y4--y8-)-y8'*(x4--x8-)=x8'-*(y4--y8-)-y8'-*(x4--x8-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x4--x9-)^2+(y4--y9-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6637: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux4[0],
	prev[px4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6639: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux4][0],
	prev[px4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6642: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux9[0],
	prev[px9, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6645: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux9][0],
	prev[px9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6648: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy4[0],
	prev[py4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6651: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy4][0],
	prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6654: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy9[0],
	prev[py9, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6657: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy9][0],
	prev[py9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6660: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6665: SimplifyCount[And] + SimplifyCount[Derivative[2][ux4][t] == 0] + SimplifyCount[Derivative[2][ux9][t] == 0] + SimplifyCount[Derivative[2][uy4][t] == 0] + SimplifyCount[Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux4][t] == 0] + SimplifyCount[Derivative[2][ux9][t] == 0] + SimplifyCount[Derivative[2][uy4][t] == 0] + SimplifyCount[Derivative[2][uy9][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000531}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6663: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux4[t] - ux9[t])^2 + (uy4[t] - uy9[t])^2 == 4 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0,
	ux4[0] == prev[px4, 0] && Derivative[1][ux4][0] == prev[px4, 1] && ux9[0] == prev[px9, 0] && Derivative[1][ux9][0] == prev[px9, 1] && uy4[0] == prev[py4, 0] && Derivative[1][uy4][0] == prev[py4, 1] && uy9[0] == prev[py9, 0] && Derivative[1][uy9][0] == prev[py9, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux4[t] - ux9[t])^2 + (uy4[t] - uy9[t])^2 == 4 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6674: {(ux4[t] - ux9[t])^2 + (uy4[t] - uy9[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy4][t] == 0, Derivative[2][uy9][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6674: {{Derivative[2][uy9][t] == 0}, {(ux4[t] - ux9[t])^2 + (uy4[t] - uy9[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy4][t] == 0}, {uy9}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6674: {{uy9[t] -> prev[py9, 0] + t*prev[py9, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6674: {(ux4[t] - ux9[t])^2 + (-50 + uy4[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy4][t] == 0}, tVars$6674: {ux4[t], ux9[t], uy4[t], ux4[t], ux9[t], uy4[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6674: {{Derivative[2][uy4][t] == 0}, {(ux4[t] - ux9[t])^2 + (-50 + uy4[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux9][t] == 0}, {uy4}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6674: {{uy4[t] -> prev[py4, 0] + t*prev[py4, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6674: {625 + (ux4[t] - ux9[t])^2 == 4, Derivative[2][ux4][t] == 0, Derivative[2][ux9][t] == 0}, tVars$6674: {ux4[t], ux9[t], ux4[t], ux9[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6674: {{Derivative[2][ux9][t] == 0}, {625 + (ux4[t] - ux9[t])^2 == 4, Derivative[2][ux4][t] == 0}, {ux9}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6674: {{ux9[t] -> prev[px9, 0] + t*prev[px9, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6674: {625 + (-50 + ux4[t])^2 == 4, Derivative[2][ux4][t] == 0}, tVars$6674: {ux4[t], ux4[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6674: {{Derivative[2][ux4][t] == 0}, {625 + (-50 + ux4[t])^2 == 4}, {ux4}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6674: {{ux4[t] -> prev[px4, 0] + t*prev[px4, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$6671: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6670: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x4--x9-)^2+(y4--y9-)^2=4=>x4'*(x4--x9-)+y4'*(y4--y9-)=1-*(x9'-*(x4--x9-)+y9'-*(y4--y9-))&1-*(x4'-*(x4--x9-)+y4'-*(y4--y9-))=x9'*(x4--x9-)+y9'*(y4--y9-)&x4'*(y4--y9-)-y4'*(x4--x9-)=x4'-*(y4--y9-)-y4'-*(x4--x9-)&x9'*(y4--y9-)-y9'*(x4--x9-)=x9'-*(y4--y9-)-y9'-*(x4--x9-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x5--x6-)^2+(y5--y6-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6764: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux5[0],
	prev[px5, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6766: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux5][0],
	prev[px5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6769: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux6[0],
	prev[px6, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6772: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux6][0],
	prev[px6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6775: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy5[0],
	prev[py5, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6778: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy5][0],
	prev[py5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6781: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy6[0],
	prev[py6, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6784: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy6][0],
	prev[py6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6787: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6792: SimplifyCount[And] + SimplifyCount[Derivative[2][ux5][t] == 0] + SimplifyCount[Derivative[2][ux6][t] == 0] + SimplifyCount[Derivative[2][uy5][t] == 0] + SimplifyCount[Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux5][t] == 0] + SimplifyCount[Derivative[2][ux6][t] == 0] + SimplifyCount[Derivative[2][uy5][t] == 0] + SimplifyCount[Derivative[2][uy6][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000526}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6790: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux5[t] - ux6[t])^2 + (uy5[t] - uy6[t])^2 == 4 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0,
	ux5[0] == prev[px5, 0] && Derivative[1][ux5][0] == prev[px5, 1] && ux6[0] == prev[px6, 0] && Derivative[1][ux6][0] == prev[px6, 1] && uy5[0] == prev[py5, 0] && Derivative[1][uy5][0] == prev[py5, 1] && uy6[0] == prev[py6, 0] && Derivative[1][uy6][0] == prev[py6, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux5[t] - ux6[t])^2 + (uy5[t] - uy6[t])^2 == 4 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6801: {(ux5[t] - ux6[t])^2 + (uy5[t] - uy6[t])^2 == 4, Derivative[2][ux5][t] == 0, Derivative[2][ux6][t] == 0, Derivative[2][uy5][t] == 0, Derivative[2][uy6][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6801: {{Derivative[2][uy6][t] == 0}, {(ux5[t] - ux6[t])^2 + (uy5[t] - uy6[t])^2 == 4, Derivative[2][ux5][t] == 0, Derivative[2][ux6][t] == 0, Derivative[2][uy5][t] == 0}, {uy6}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6801: {{uy6[t] -> prev[py6, 0] + t*prev[py6, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6801: {(ux5[t] - ux6[t])^2 + (-35 + uy5[t])^2 == 4, Derivative[2][ux5][t] == 0, Derivative[2][ux6][t] == 0, Derivative[2][uy5][t] == 0}, tVars$6801: {ux5[t], ux6[t], uy5[t], ux5[t], ux6[t], uy5[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6801: {{Derivative[2][uy5][t] == 0}, {(ux5[t] - ux6[t])^2 + (-35 + uy5[t])^2 == 4, Derivative[2][ux5][t] == 0, Derivative[2][ux6][t] == 0}, {uy5}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6801: {{uy5[t] -> prev[py5, 0] + t*prev[py5, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6801: {25 + (ux5[t] - ux6[t])^2 == 4, Derivative[2][ux5][t] == 0, Derivative[2][ux6][t] == 0}, tVars$6801: {ux5[t], ux6[t], ux5[t], ux6[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6801: {{Derivative[2][ux6][t] == 0}, {25 + (ux5[t] - ux6[t])^2 == 4, Derivative[2][ux5][t] == 0}, {ux6}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6801: {{ux6[t] -> prev[px6, 0] + t*prev[px6, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6801: {25 + (-35 + ux5[t])^2 == 4, Derivative[2][ux5][t] == 0}, tVars$6801: {ux5[t], ux5[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6801: {{Derivative[2][ux5][t] == 0}, {25 + (-35 + ux5[t])^2 == 4}, {ux5}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6801: {{ux5[t] -> prev[px5, 0] + t*prev[px5, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$6798: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6797: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x5--x6-)^2+(y5--y6-)^2=4=>x5'*(x5--x6-)+y5'*(y5--y6-)=1-*(x6'-*(x5--x6-)+y6'-*(y5--y6-))&1-*(x5'-*(x5--x6-)+y5'-*(y5--y6-))=x6'*(x5--x6-)+y6'*(y5--y6-)&x5'*(y5--y6-)-y5'*(x5--x6-)=x5'-*(y5--y6-)-y5'-*(x5--x6-)&x6'*(y5--y6-)-y6'*(x5--x6-)=x6'-*(y5--y6-)-y6'-*(x5--x6-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x5--x7-)^2+(y5--y7-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6891: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux5[0],
	prev[px5, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6893: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux5][0],
	prev[px5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6896: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux7[0],
	prev[px7, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6899: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux7][0],
	prev[px7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6902: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy5[0],
	prev[py5, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6905: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy5][0],
	prev[py5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6908: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy7[0],
	prev[py7, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6911: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy7][0],
	prev[py7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6914: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6919: SimplifyCount[And] + SimplifyCount[Derivative[2][ux5][t] == 0] + SimplifyCount[Derivative[2][ux7][t] == 0] + SimplifyCount[Derivative[2][uy5][t] == 0] + SimplifyCount[Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux5][t] == 0] + SimplifyCount[Derivative[2][ux7][t] == 0] + SimplifyCount[Derivative[2][uy5][t] == 0] + SimplifyCount[Derivative[2][uy7][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000531}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6917: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux5[t] - ux7[t])^2 + (uy5[t] - uy7[t])^2 == 4 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0,
	ux5[0] == prev[px5, 0] && Derivative[1][ux5][0] == prev[px5, 1] && ux7[0] == prev[px7, 0] && Derivative[1][ux7][0] == prev[px7, 1] && uy5[0] == prev[py5, 0] && Derivative[1][uy5][0] == prev[py5, 1] && uy7[0] == prev[py7, 0] && Derivative[1][uy7][0] == prev[py7, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux5[t] - ux7[t])^2 + (uy5[t] - uy7[t])^2 == 4 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6928: {(ux5[t] - ux7[t])^2 + (uy5[t] - uy7[t])^2 == 4, Derivative[2][ux5][t] == 0, Derivative[2][ux7][t] == 0, Derivative[2][uy5][t] == 0, Derivative[2][uy7][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6928: {{Derivative[2][uy7][t] == 0}, {(ux5[t] - ux7[t])^2 + (uy5[t] - uy7[t])^2 == 4, Derivative[2][ux5][t] == 0, Derivative[2][ux7][t] == 0, Derivative[2][uy5][t] == 0}, {uy7}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6928: {{uy7[t] -> prev[py7, 0] + t*prev[py7, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6928: {(ux5[t] - ux7[t])^2 + (-40 + uy5[t])^2 == 4, Derivative[2][ux5][t] == 0, Derivative[2][ux7][t] == 0, Derivative[2][uy5][t] == 0}, tVars$6928: {ux5[t], ux7[t], uy5[t], ux5[t], ux7[t], uy5[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6928: {{Derivative[2][uy5][t] == 0}, {(ux5[t] - ux7[t])^2 + (-40 + uy5[t])^2 == 4, Derivative[2][ux5][t] == 0, Derivative[2][ux7][t] == 0}, {uy5}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6928: {{uy5[t] -> prev[py5, 0] + t*prev[py5, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6928: {100 + (ux5[t] - ux7[t])^2 == 4, Derivative[2][ux5][t] == 0, Derivative[2][ux7][t] == 0}, tVars$6928: {ux5[t], ux7[t], ux5[t], ux7[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6928: {{Derivative[2][ux7][t] == 0}, {100 + (ux5[t] - ux7[t])^2 == 4, Derivative[2][ux5][t] == 0}, {ux7}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6928: {{ux7[t] -> prev[px7, 0] + t*prev[px7, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$6928: {100 + (-40 + ux5[t])^2 == 4, Derivative[2][ux5][t] == 0}, tVars$6928: {ux5[t], ux5[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$6928: {{Derivative[2][ux5][t] == 0}, {100 + (-40 + ux5[t])^2 == 4}, {ux5}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$6928: {{ux5[t] -> prev[px5, 0] + t*prev[px5, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$6925: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$6924: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x5--x7-)^2+(y5--y7-)^2=4=>x5'*(x5--x7-)+y5'*(y5--y7-)=1-*(x7'-*(x5--x7-)+y7'-*(y5--y7-))&1-*(x5'-*(x5--x7-)+y5'-*(y5--y7-))=x7'*(x5--x7-)+y7'*(y5--y7-)&x5'*(y5--y7-)-y5'*(x5--x7-)=x5'-*(y5--y7-)-y5'-*(x5--x7-)&x7'*(y5--y7-)-y7'*(x5--x7-)=x7'-*(y5--y7-)-y7'-*(x5--x7-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x5--x8-)^2+(y5--y8-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7018: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux5[0],
	prev[px5, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7020: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux5][0],
	prev[px5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7023: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux8[0],
	prev[px8, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7026: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux8][0],
	prev[px8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7029: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy5[0],
	prev[py5, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7032: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy5][0],
	prev[py5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7035: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy8[0],
	prev[py8, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7038: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy8][0],
	prev[py8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7041: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7046: SimplifyCount[And] + SimplifyCount[Derivative[2][ux5][t] == 0] + SimplifyCount[Derivative[2][ux8][t] == 0] + SimplifyCount[Derivative[2][uy5][t] == 0] + SimplifyCount[Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux5][t] == 0] + SimplifyCount[Derivative[2][ux8][t] == 0] + SimplifyCount[Derivative[2][uy5][t] == 0] + SimplifyCount[Derivative[2][uy8][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000537}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7044: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux5[t] - ux8[t])^2 + (uy5[t] - uy8[t])^2 == 4 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0,
	ux5[0] == prev[px5, 0] && Derivative[1][ux5][0] == prev[px5, 1] && ux8[0] == prev[px8, 0] && Derivative[1][ux8][0] == prev[px8, 1] && uy5[0] == prev[py5, 0] && Derivative[1][uy5][0] == prev[py5, 1] && uy8[0] == prev[py8, 0] && Derivative[1][uy8][0] == prev[py8, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux5[t] - ux8[t])^2 + (uy5[t] - uy8[t])^2 == 4 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7055: {(ux5[t] - ux8[t])^2 + (uy5[t] - uy8[t])^2 == 4, Derivative[2][ux5][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy5][t] == 0, Derivative[2][uy8][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7055: {{Derivative[2][uy8][t] == 0}, {(ux5[t] - ux8[t])^2 + (uy5[t] - uy8[t])^2 == 4, Derivative[2][ux5][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy5][t] == 0}, {uy8}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7055: {{uy8[t] -> prev[py8, 0] + t*prev[py8, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7055: {(ux5[t] - ux8[t])^2 + (-45 + uy5[t])^2 == 4, Derivative[2][ux5][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy5][t] == 0}, tVars$7055: {ux5[t], ux8[t], uy5[t], ux5[t], ux8[t], uy5[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7055: {{Derivative[2][uy5][t] == 0}, {(ux5[t] - ux8[t])^2 + (-45 + uy5[t])^2 == 4, Derivative[2][ux5][t] == 0, Derivative[2][ux8][t] == 0}, {uy5}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7055: {{uy5[t] -> prev[py5, 0] + t*prev[py5, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7055: {225 + (ux5[t] - ux8[t])^2 == 4, Derivative[2][ux5][t] == 0, Derivative[2][ux8][t] == 0}, tVars$7055: {ux5[t], ux8[t], ux5[t], ux8[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7055: {{Derivative[2][ux8][t] == 0}, {225 + (ux5[t] - ux8[t])^2 == 4, Derivative[2][ux5][t] == 0}, {ux8}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7055: {{ux8[t] -> prev[px8, 0] + t*prev[px8, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7055: {225 + (-45 + ux5[t])^2 == 4, Derivative[2][ux5][t] == 0}, tVars$7055: {ux5[t], ux5[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7055: {{Derivative[2][ux5][t] == 0}, {225 + (-45 + ux5[t])^2 == 4}, {ux5}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7055: {{ux5[t] -> prev[px5, 0] + t*prev[px5, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$7052: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7051: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x5--x8-)^2+(y5--y8-)^2=4=>x5'*(x5--x8-)+y5'*(y5--y8-)=1-*(x8'-*(x5--x8-)+y8'-*(y5--y8-))&1-*(x5'-*(x5--x8-)+y5'-*(y5--y8-))=x8'*(x5--x8-)+y8'*(y5--y8-)&x5'*(y5--y8-)-y5'*(x5--x8-)=x5'-*(y5--y8-)-y5'-*(x5--x8-)&x8'*(y5--y8-)-y8'*(x5--x8-)=x8'-*(y5--y8-)-y8'-*(x5--x8-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x5--x9-)^2+(y5--y9-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7145: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux5[0],
	prev[px5, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7147: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux5][0],
	prev[px5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7150: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux9[0],
	prev[px9, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7153: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux9][0],
	prev[px9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7156: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy5[0],
	prev[py5, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7159: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy5][0],
	prev[py5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7162: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy9[0],
	prev[py9, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7165: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy9][0],
	prev[py9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7168: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7173: SimplifyCount[And] + SimplifyCount[Derivative[2][ux5][t] == 0] + SimplifyCount[Derivative[2][ux9][t] == 0] + SimplifyCount[Derivative[2][uy5][t] == 0] + SimplifyCount[Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux5][t] == 0] + SimplifyCount[Derivative[2][ux9][t] == 0] + SimplifyCount[Derivative[2][uy5][t] == 0] + SimplifyCount[Derivative[2][uy9][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000535}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7171: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux5[t] - ux9[t])^2 + (uy5[t] - uy9[t])^2 == 4 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0,
	ux5[0] == prev[px5, 0] && Derivative[1][ux5][0] == prev[px5, 1] && ux9[0] == prev[px9, 0] && Derivative[1][ux9][0] == prev[px9, 1] && uy5[0] == prev[py5, 0] && Derivative[1][uy5][0] == prev[py5, 1] && uy9[0] == prev[py9, 0] && Derivative[1][uy9][0] == prev[py9, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux5[t] - ux9[t])^2 + (uy5[t] - uy9[t])^2 == 4 && Derivative[2][ux5][t] == 0 && Derivative[2][uy5][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7182: {(ux5[t] - ux9[t])^2 + (uy5[t] - uy9[t])^2 == 4, Derivative[2][ux5][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy5][t] == 0, Derivative[2][uy9][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7182: {{Derivative[2][uy9][t] == 0}, {(ux5[t] - ux9[t])^2 + (uy5[t] - uy9[t])^2 == 4, Derivative[2][ux5][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy5][t] == 0}, {uy9}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7182: {{uy9[t] -> prev[py9, 0] + t*prev[py9, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7182: {(ux5[t] - ux9[t])^2 + (-50 + uy5[t])^2 == 4, Derivative[2][ux5][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy5][t] == 0}, tVars$7182: {ux5[t], ux9[t], uy5[t], ux5[t], ux9[t], uy5[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7182: {{Derivative[2][uy5][t] == 0}, {(ux5[t] - ux9[t])^2 + (-50 + uy5[t])^2 == 4, Derivative[2][ux5][t] == 0, Derivative[2][ux9][t] == 0}, {uy5}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7182: {{uy5[t] -> prev[py5, 0] + t*prev[py5, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7182: {400 + (ux5[t] - ux9[t])^2 == 4, Derivative[2][ux5][t] == 0, Derivative[2][ux9][t] == 0}, tVars$7182: {ux5[t], ux9[t], ux5[t], ux9[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7182: {{Derivative[2][ux9][t] == 0}, {400 + (ux5[t] - ux9[t])^2 == 4, Derivative[2][ux5][t] == 0}, {ux9}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7182: {{ux9[t] -> prev[px9, 0] + t*prev[px9, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7182: {400 + (-50 + ux5[t])^2 == 4, Derivative[2][ux5][t] == 0}, tVars$7182: {ux5[t], ux5[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7182: {{Derivative[2][ux5][t] == 0}, {400 + (-50 + ux5[t])^2 == 4}, {ux5}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7182: {{ux5[t] -> prev[px5, 0] + t*prev[px5, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$7179: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7178: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x5--x9-)^2+(y5--y9-)^2=4=>x5'*(x5--x9-)+y5'*(y5--y9-)=1-*(x9'-*(x5--x9-)+y9'-*(y5--y9-))&1-*(x5'-*(x5--x9-)+y5'-*(y5--y9-))=x9'*(x5--x9-)+y9'*(y5--y9-)&x5'*(y5--y9-)-y5'*(x5--x9-)=x5'-*(y5--y9-)-y5'-*(x5--x9-)&x9'*(y5--y9-)-y9'*(x5--x9-)=x9'-*(y5--y9-)-y9'-*(x5--x9-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x6--x7-)^2+(y6--y7-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7272: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux6[0],
	prev[px6, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7274: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux6][0],
	prev[px6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7277: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux7[0],
	prev[px7, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7280: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux7][0],
	prev[px7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7283: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy6[0],
	prev[py6, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7286: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy6][0],
	prev[py6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7289: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy7[0],
	prev[py7, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7292: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy7][0],
	prev[py7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7295: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7300: SimplifyCount[And] + SimplifyCount[Derivative[2][ux6][t] == 0] + SimplifyCount[Derivative[2][ux7][t] == 0] + SimplifyCount[Derivative[2][uy6][t] == 0] + SimplifyCount[Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux6][t] == 0] + SimplifyCount[Derivative[2][ux7][t] == 0] + SimplifyCount[Derivative[2][uy6][t] == 0] + SimplifyCount[Derivative[2][uy7][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000544}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7298: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux6[t] - ux7[t])^2 + (uy6[t] - uy7[t])^2 == 4 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0,
	ux6[0] == prev[px6, 0] && Derivative[1][ux6][0] == prev[px6, 1] && ux7[0] == prev[px7, 0] && Derivative[1][ux7][0] == prev[px7, 1] && uy6[0] == prev[py6, 0] && Derivative[1][uy6][0] == prev[py6, 1] && uy7[0] == prev[py7, 0] && Derivative[1][uy7][0] == prev[py7, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux6[t] - ux7[t])^2 + (uy6[t] - uy7[t])^2 == 4 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7309: {(ux6[t] - ux7[t])^2 + (uy6[t] - uy7[t])^2 == 4, Derivative[2][ux6][t] == 0, Derivative[2][ux7][t] == 0, Derivative[2][uy6][t] == 0, Derivative[2][uy7][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7309: {{Derivative[2][uy7][t] == 0}, {(ux6[t] - ux7[t])^2 + (uy6[t] - uy7[t])^2 == 4, Derivative[2][ux6][t] == 0, Derivative[2][ux7][t] == 0, Derivative[2][uy6][t] == 0}, {uy7}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7309: {{uy7[t] -> prev[py7, 0] + t*prev[py7, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7309: {(ux6[t] - ux7[t])^2 + (-40 + uy6[t])^2 == 4, Derivative[2][ux6][t] == 0, Derivative[2][ux7][t] == 0, Derivative[2][uy6][t] == 0}, tVars$7309: {ux6[t], ux7[t], uy6[t], ux6[t], ux7[t], uy6[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7309: {{Derivative[2][uy6][t] == 0}, {(ux6[t] - ux7[t])^2 + (-40 + uy6[t])^2 == 4, Derivative[2][ux6][t] == 0, Derivative[2][ux7][t] == 0}, {uy6}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7309: {{uy6[t] -> prev[py6, 0] + t*prev[py6, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7309: {25 + (ux6[t] - ux7[t])^2 == 4, Derivative[2][ux6][t] == 0, Derivative[2][ux7][t] == 0}, tVars$7309: {ux6[t], ux7[t], ux6[t], ux7[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7309: {{Derivative[2][ux7][t] == 0}, {25 + (ux6[t] - ux7[t])^2 == 4, Derivative[2][ux6][t] == 0}, {ux7}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7309: {{ux7[t] -> prev[px7, 0] + t*prev[px7, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7309: {25 + (-40 + ux6[t])^2 == 4, Derivative[2][ux6][t] == 0}, tVars$7309: {ux6[t], ux6[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7309: {{Derivative[2][ux6][t] == 0}, {25 + (-40 + ux6[t])^2 == 4}, {ux6}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7309: {{ux6[t] -> prev[px6, 0] + t*prev[px6, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$7306: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7305: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x6--x7-)^2+(y6--y7-)^2=4=>x6'*(x6--x7-)+y6'*(y6--y7-)=1-*(x7'-*(x6--x7-)+y7'-*(y6--y7-))&1-*(x6'-*(x6--x7-)+y6'-*(y6--y7-))=x7'*(x6--x7-)+y7'*(y6--y7-)&x6'*(y6--y7-)-y6'*(x6--x7-)=x6'-*(y6--y7-)-y6'-*(x6--x7-)&x7'*(y6--y7-)-y7'*(x6--x7-)=x7'-*(y6--y7-)-y7'-*(x6--x7-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x6--x8-)^2+(y6--y8-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7399: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux6[0],
	prev[px6, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7401: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux6][0],
	prev[px6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7404: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux8[0],
	prev[px8, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7407: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux8][0],
	prev[px8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7410: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy6[0],
	prev[py6, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7413: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy6][0],
	prev[py6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7416: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy8[0],
	prev[py8, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7419: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy8][0],
	prev[py8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7422: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7427: SimplifyCount[And] + SimplifyCount[Derivative[2][ux6][t] == 0] + SimplifyCount[Derivative[2][ux8][t] == 0] + SimplifyCount[Derivative[2][uy6][t] == 0] + SimplifyCount[Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux6][t] == 0] + SimplifyCount[Derivative[2][ux8][t] == 0] + SimplifyCount[Derivative[2][uy6][t] == 0] + SimplifyCount[Derivative[2][uy8][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000545}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7425: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux6[t] - ux8[t])^2 + (uy6[t] - uy8[t])^2 == 4 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0,
	ux6[0] == prev[px6, 0] && Derivative[1][ux6][0] == prev[px6, 1] && ux8[0] == prev[px8, 0] && Derivative[1][ux8][0] == prev[px8, 1] && uy6[0] == prev[py6, 0] && Derivative[1][uy6][0] == prev[py6, 1] && uy8[0] == prev[py8, 0] && Derivative[1][uy8][0] == prev[py8, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux6[t] - ux8[t])^2 + (uy6[t] - uy8[t])^2 == 4 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7436: {(ux6[t] - ux8[t])^2 + (uy6[t] - uy8[t])^2 == 4, Derivative[2][ux6][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy6][t] == 0, Derivative[2][uy8][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7436: {{Derivative[2][uy8][t] == 0}, {(ux6[t] - ux8[t])^2 + (uy6[t] - uy8[t])^2 == 4, Derivative[2][ux6][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy6][t] == 0}, {uy8}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7436: {{uy8[t] -> prev[py8, 0] + t*prev[py8, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7436: {(ux6[t] - ux8[t])^2 + (-45 + uy6[t])^2 == 4, Derivative[2][ux6][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy6][t] == 0}, tVars$7436: {ux6[t], ux8[t], uy6[t], ux6[t], ux8[t], uy6[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7436: {{Derivative[2][uy6][t] == 0}, {(ux6[t] - ux8[t])^2 + (-45 + uy6[t])^2 == 4, Derivative[2][ux6][t] == 0, Derivative[2][ux8][t] == 0}, {uy6}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7436: {{uy6[t] -> prev[py6, 0] + t*prev[py6, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7436: {100 + (ux6[t] - ux8[t])^2 == 4, Derivative[2][ux6][t] == 0, Derivative[2][ux8][t] == 0}, tVars$7436: {ux6[t], ux8[t], ux6[t], ux8[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7436: {{Derivative[2][ux8][t] == 0}, {100 + (ux6[t] - ux8[t])^2 == 4, Derivative[2][ux6][t] == 0}, {ux8}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7436: {{ux8[t] -> prev[px8, 0] + t*prev[px8, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7436: {100 + (-45 + ux6[t])^2 == 4, Derivative[2][ux6][t] == 0}, tVars$7436: {ux6[t], ux6[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7436: {{Derivative[2][ux6][t] == 0}, {100 + (-45 + ux6[t])^2 == 4}, {ux6}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7436: {{ux6[t] -> prev[px6, 0] + t*prev[px6, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$7433: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7432: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x6--x8-)^2+(y6--y8-)^2=4=>x6'*(x6--x8-)+y6'*(y6--y8-)=1-*(x8'-*(x6--x8-)+y8'-*(y6--y8-))&1-*(x6'-*(x6--x8-)+y6'-*(y6--y8-))=x8'*(x6--x8-)+y8'*(y6--y8-)&x6'*(y6--y8-)-y6'*(x6--x8-)=x6'-*(y6--y8-)-y6'-*(x6--x8-)&x8'*(y6--y8-)-y8'*(x6--x8-)=x8'-*(y6--y8-)-y8'-*(x6--x8-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x6--x9-)^2+(y6--y9-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7526: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux6[0],
	prev[px6, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7528: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux6][0],
	prev[px6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7531: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux9[0],
	prev[px9, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7534: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux9][0],
	prev[px9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7537: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy6[0],
	prev[py6, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7540: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy6][0],
	prev[py6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7543: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy9[0],
	prev[py9, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7546: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy9][0],
	prev[py9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7549: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7554: SimplifyCount[And] + SimplifyCount[Derivative[2][ux6][t] == 0] + SimplifyCount[Derivative[2][ux9][t] == 0] + SimplifyCount[Derivative[2][uy6][t] == 0] + SimplifyCount[Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux6][t] == 0] + SimplifyCount[Derivative[2][ux9][t] == 0] + SimplifyCount[Derivative[2][uy6][t] == 0] + SimplifyCount[Derivative[2][uy9][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000532}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7552: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux6[t] - ux9[t])^2 + (uy6[t] - uy9[t])^2 == 4 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0,
	ux6[0] == prev[px6, 0] && Derivative[1][ux6][0] == prev[px6, 1] && ux9[0] == prev[px9, 0] && Derivative[1][ux9][0] == prev[px9, 1] && uy6[0] == prev[py6, 0] && Derivative[1][uy6][0] == prev[py6, 1] && uy9[0] == prev[py9, 0] && Derivative[1][uy9][0] == prev[py9, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux6[t] - ux9[t])^2 + (uy6[t] - uy9[t])^2 == 4 && Derivative[2][ux6][t] == 0 && Derivative[2][uy6][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7563: {(ux6[t] - ux9[t])^2 + (uy6[t] - uy9[t])^2 == 4, Derivative[2][ux6][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy6][t] == 0, Derivative[2][uy9][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7563: {{Derivative[2][uy9][t] == 0}, {(ux6[t] - ux9[t])^2 + (uy6[t] - uy9[t])^2 == 4, Derivative[2][ux6][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy6][t] == 0}, {uy9}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7563: {{uy9[t] -> prev[py9, 0] + t*prev[py9, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7563: {(ux6[t] - ux9[t])^2 + (-50 + uy6[t])^2 == 4, Derivative[2][ux6][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy6][t] == 0}, tVars$7563: {ux6[t], ux9[t], uy6[t], ux6[t], ux9[t], uy6[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7563: {{Derivative[2][uy6][t] == 0}, {(ux6[t] - ux9[t])^2 + (-50 + uy6[t])^2 == 4, Derivative[2][ux6][t] == 0, Derivative[2][ux9][t] == 0}, {uy6}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7563: {{uy6[t] -> prev[py6, 0] + t*prev[py6, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7563: {225 + (ux6[t] - ux9[t])^2 == 4, Derivative[2][ux6][t] == 0, Derivative[2][ux9][t] == 0}, tVars$7563: {ux6[t], ux9[t], ux6[t], ux9[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7563: {{Derivative[2][ux9][t] == 0}, {225 + (ux6[t] - ux9[t])^2 == 4, Derivative[2][ux6][t] == 0}, {ux9}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7563: {{ux9[t] -> prev[px9, 0] + t*prev[px9, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7563: {225 + (-50 + ux6[t])^2 == 4, Derivative[2][ux6][t] == 0}, tVars$7563: {ux6[t], ux6[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7563: {{Derivative[2][ux6][t] == 0}, {225 + (-50 + ux6[t])^2 == 4}, {ux6}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7563: {{ux6[t] -> prev[px6, 0] + t*prev[px6, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$7560: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7559: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x6--x9-)^2+(y6--y9-)^2=4=>x6'*(x6--x9-)+y6'*(y6--y9-)=1-*(x9'-*(x6--x9-)+y9'-*(y6--y9-))&1-*(x6'-*(x6--x9-)+y6'-*(y6--y9-))=x9'*(x6--x9-)+y9'*(y6--y9-)&x6'*(y6--y9-)-y6'*(x6--x9-)=x6'-*(y6--y9-)-y6'-*(x6--x9-)&x9'*(y6--y9-)-y9'*(x6--x9-)=x9'-*(y6--y9-)-y9'-*(x6--x9-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x7--x8-)^2+(y7--y8-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7653: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux7[0],
	prev[px7, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7655: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux7][0],
	prev[px7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7658: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux8[0],
	prev[px8, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7661: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux8][0],
	prev[px8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7664: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy7[0],
	prev[py7, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7667: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy7][0],
	prev[py7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7670: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy8[0],
	prev[py8, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7673: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy8][0],
	prev[py8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7676: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7681: SimplifyCount[And] + SimplifyCount[Derivative[2][ux7][t] == 0] + SimplifyCount[Derivative[2][ux8][t] == 0] + SimplifyCount[Derivative[2][uy7][t] == 0] + SimplifyCount[Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux7][t] == 0] + SimplifyCount[Derivative[2][ux8][t] == 0] + SimplifyCount[Derivative[2][uy7][t] == 0] + SimplifyCount[Derivative[2][uy8][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000541}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7679: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux7[t] - ux8[t])^2 + (uy7[t] - uy8[t])^2 == 4 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0,
	ux7[0] == prev[px7, 0] && Derivative[1][ux7][0] == prev[px7, 1] && ux8[0] == prev[px8, 0] && Derivative[1][ux8][0] == prev[px8, 1] && uy7[0] == prev[py7, 0] && Derivative[1][uy7][0] == prev[py7, 1] && uy8[0] == prev[py8, 0] && Derivative[1][uy8][0] == prev[py8, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux7[t] - ux8[t])^2 + (uy7[t] - uy8[t])^2 == 4 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7690: {(ux7[t] - ux8[t])^2 + (uy7[t] - uy8[t])^2 == 4, Derivative[2][ux7][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy7][t] == 0, Derivative[2][uy8][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7690: {{Derivative[2][uy8][t] == 0}, {(ux7[t] - ux8[t])^2 + (uy7[t] - uy8[t])^2 == 4, Derivative[2][ux7][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy7][t] == 0}, {uy8}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7690: {{uy8[t] -> prev[py8, 0] + t*prev[py8, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7690: {(ux7[t] - ux8[t])^2 + (-45 + uy7[t])^2 == 4, Derivative[2][ux7][t] == 0, Derivative[2][ux8][t] == 0, Derivative[2][uy7][t] == 0}, tVars$7690: {ux7[t], ux8[t], uy7[t], ux7[t], ux8[t], uy7[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7690: {{Derivative[2][uy7][t] == 0}, {(ux7[t] - ux8[t])^2 + (-45 + uy7[t])^2 == 4, Derivative[2][ux7][t] == 0, Derivative[2][ux8][t] == 0}, {uy7}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7690: {{uy7[t] -> prev[py7, 0] + t*prev[py7, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7690: {25 + (ux7[t] - ux8[t])^2 == 4, Derivative[2][ux7][t] == 0, Derivative[2][ux8][t] == 0}, tVars$7690: {ux7[t], ux8[t], ux7[t], ux8[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7690: {{Derivative[2][ux8][t] == 0}, {25 + (ux7[t] - ux8[t])^2 == 4, Derivative[2][ux7][t] == 0}, {ux8}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7690: {{ux8[t] -> prev[px8, 0] + t*prev[px8, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7690: {25 + (-45 + ux7[t])^2 == 4, Derivative[2][ux7][t] == 0}, tVars$7690: {ux7[t], ux7[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7690: {{Derivative[2][ux7][t] == 0}, {25 + (-45 + ux7[t])^2 == 4}, {ux7}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7690: {{ux7[t] -> prev[px7, 0] + t*prev[px7, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$7687: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7686: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x7--x8-)^2+(y7--y8-)^2=4=>x7'*(x7--x8-)+y7'*(y7--y8-)=1-*(x8'-*(x7--x8-)+y8'-*(y7--y8-))&1-*(x7'-*(x7--x8-)+y7'-*(y7--y8-))=x8'*(x7--x8-)+y8'*(y7--y8-)&x7'*(y7--y8-)-y7'*(x7--x8-)=x7'-*(y7--y8-)-y7'-*(x7--x8-)&x8'*(y7--y8-)-y8'*(x7--x8-)=x8'-*(y7--y8-)-y8'-*(x7--x8-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x7--x9-)^2+(y7--y9-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7780: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux7[0],
	prev[px7, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7782: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux7][0],
	prev[px7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7785: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux9[0],
	prev[px9, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7788: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux9][0],
	prev[px9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7791: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy7[0],
	prev[py7, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7794: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy7][0],
	prev[py7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7797: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy9[0],
	prev[py9, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7800: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy9][0],
	prev[py9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7803: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7808: SimplifyCount[And] + SimplifyCount[Derivative[2][ux7][t] == 0] + SimplifyCount[Derivative[2][ux9][t] == 0] + SimplifyCount[Derivative[2][uy7][t] == 0] + SimplifyCount[Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux7][t] == 0] + SimplifyCount[Derivative[2][ux9][t] == 0] + SimplifyCount[Derivative[2][uy7][t] == 0] + SimplifyCount[Derivative[2][uy9][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000528}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7806: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux7[t] - ux9[t])^2 + (uy7[t] - uy9[t])^2 == 4 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0,
	ux7[0] == prev[px7, 0] && Derivative[1][ux7][0] == prev[px7, 1] && ux9[0] == prev[px9, 0] && Derivative[1][ux9][0] == prev[px9, 1] && uy7[0] == prev[py7, 0] && Derivative[1][uy7][0] == prev[py7, 1] && uy9[0] == prev[py9, 0] && Derivative[1][uy9][0] == prev[py9, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux7[t] - ux9[t])^2 + (uy7[t] - uy9[t])^2 == 4 && Derivative[2][ux7][t] == 0 && Derivative[2][uy7][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7817: {(ux7[t] - ux9[t])^2 + (uy7[t] - uy9[t])^2 == 4, Derivative[2][ux7][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy7][t] == 0, Derivative[2][uy9][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7817: {{Derivative[2][uy9][t] == 0}, {(ux7[t] - ux9[t])^2 + (uy7[t] - uy9[t])^2 == 4, Derivative[2][ux7][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy7][t] == 0}, {uy9}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7817: {{uy9[t] -> prev[py9, 0] + t*prev[py9, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7817: {(ux7[t] - ux9[t])^2 + (-50 + uy7[t])^2 == 4, Derivative[2][ux7][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy7][t] == 0}, tVars$7817: {ux7[t], ux9[t], uy7[t], ux7[t], ux9[t], uy7[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7817: {{Derivative[2][uy7][t] == 0}, {(ux7[t] - ux9[t])^2 + (-50 + uy7[t])^2 == 4, Derivative[2][ux7][t] == 0, Derivative[2][ux9][t] == 0}, {uy7}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7817: {{uy7[t] -> prev[py7, 0] + t*prev[py7, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7817: {100 + (ux7[t] - ux9[t])^2 == 4, Derivative[2][ux7][t] == 0, Derivative[2][ux9][t] == 0}, tVars$7817: {ux7[t], ux9[t], ux7[t], ux9[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7817: {{Derivative[2][ux9][t] == 0}, {100 + (ux7[t] - ux9[t])^2 == 4, Derivative[2][ux7][t] == 0}, {ux9}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7817: {{ux9[t] -> prev[px9, 0] + t*prev[px9, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7817: {100 + (-50 + ux7[t])^2 == 4, Derivative[2][ux7][t] == 0}, tVars$7817: {ux7[t], ux7[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7817: {{Derivative[2][ux7][t] == 0}, {100 + (-50 + ux7[t])^2 == 4}, {ux7}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7817: {{ux7[t] -> prev[px7, 0] + t*prev[px7, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$7814: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7813: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x7--x9-)^2+(y7--y9-)^2=4=>x7'*(x7--x9-)+y7'*(y7--y9-)=1-*(x9'-*(x7--x9-)+y9'-*(y7--y9-))&1-*(x7'-*(x7--x9-)+y7'-*(y7--y9-))=x9'*(x7--x9-)+y9'*(y7--y9-)&x7'*(y7--y9-)-y7'*(x7--x9-)=x7'-*(y7--y9-)-y7'-*(x7--x9-)&x9'*(y7--y9-)-y9'*(x7--x9-)=x9'-*(y7--y9-)-y9'-*(x7--x9-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x8--x9-)^2+(y8--y9-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7907: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux8[0],
	prev[px8, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7909: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux8][0],
	prev[px8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7912: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux9[0],
	prev[px9, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7915: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux9][0],
	prev[px9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7918: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy8[0],
	prev[py8, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7921: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy8][0],
	prev[py8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7924: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy9[0],
	prev[py9, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7927: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy9][0],
	prev[py9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7930: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7935: SimplifyCount[And] + SimplifyCount[Derivative[2][ux8][t] == 0] + SimplifyCount[Derivative[2][ux9][t] == 0] + SimplifyCount[Derivative[2][uy8][t] == 0] + SimplifyCount[Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux8][t] == 0] + SimplifyCount[Derivative[2][ux9][t] == 0] + SimplifyCount[Derivative[2][uy8][t] == 0] + SimplifyCount[Derivative[2][uy9][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000527}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7933: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux8[t] - ux9[t])^2 + (uy8[t] - uy9[t])^2 == 4 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0,
	ux8[0] == prev[px8, 0] && Derivative[1][ux8][0] == prev[px8, 1] && ux9[0] == prev[px9, 0] && Derivative[1][ux9][0] == prev[px9, 1] && uy8[0] == prev[py8, 0] && Derivative[1][uy8][0] == prev[py8, 1] && uy9[0] == prev[py9, 0] && Derivative[1][uy9][0] == prev[py9, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux8[t] - ux9[t])^2 + (uy8[t] - uy9[t])^2 == 4 && Derivative[2][ux8][t] == 0 && Derivative[2][uy8][t] == 0 && Derivative[2][ux9][t] == 0 && Derivative[2][uy9][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7944: {(ux8[t] - ux9[t])^2 + (uy8[t] - uy9[t])^2 == 4, Derivative[2][ux8][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy8][t] == 0, Derivative[2][uy9][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7944: {{Derivative[2][uy9][t] == 0}, {(ux8[t] - ux9[t])^2 + (uy8[t] - uy9[t])^2 == 4, Derivative[2][ux8][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy8][t] == 0}, {uy9}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7944: {{uy9[t] -> prev[py9, 0] + t*prev[py9, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7944: {(ux8[t] - ux9[t])^2 + (-50 + uy8[t])^2 == 4, Derivative[2][ux8][t] == 0, Derivative[2][ux9][t] == 0, Derivative[2][uy8][t] == 0}, tVars$7944: {ux8[t], ux9[t], uy8[t], ux8[t], ux9[t], uy8[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7944: {{Derivative[2][uy8][t] == 0}, {(ux8[t] - ux9[t])^2 + (-50 + uy8[t])^2 == 4, Derivative[2][ux8][t] == 0, Derivative[2][ux9][t] == 0}, {uy8}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7944: {{uy8[t] -> prev[py8, 0] + t*prev[py8, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7944: {25 + (ux8[t] - ux9[t])^2 == 4, Derivative[2][ux8][t] == 0, Derivative[2][ux9][t] == 0}, tVars$7944: {ux8[t], ux9[t], ux8[t], ux9[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7944: {{Derivative[2][ux9][t] == 0}, {25 + (ux8[t] - ux9[t])^2 == 4, Derivative[2][ux8][t] == 0}, {ux9}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7944: {{ux9[t] -> prev[px9, 0] + t*prev[px9, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$7944: {25 + (-50 + ux8[t])^2 == 4, Derivative[2][ux8][t] == 0}, tVars$7944: {ux8[t], ux8[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$7944: {{Derivative[2][ux8][t] == 0}, {25 + (-50 + ux8[t])^2 == 4}, {ux8}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$7944: {{ux8[t] -> prev[px8, 0] + t*prev[px8, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$7941: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$7940: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x8--x9-)^2+(y8--y9-)^2=4=>x8'*(x8--x9-)+y8'*(y8--y9-)=1-*(x9'-*(x8--x9-)+y9'-*(y8--y9-))&1-*(x8'-*(x8--x9-)+y8'-*(y8--y9-))=x9'*(x8--x9-)+y9'*(y8--y9-)&x8'*(y8--y9-)-y8'*(x8--x9-)=x8'-*(y8--y9-)-y8'-*(x8--x9-)&x9'*(y8--y9-)-y9'*(x8--x9-)=x9'-*(y8--y9-)-y9'-*(x8--x9-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x0--1=-10|10*10=x0-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8034: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0[0],
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8036: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux0][0],
	prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8039: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux0][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux0][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8044: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux0][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux0][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000163}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8042: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + ux0[t] == -10 || 100 == 1 + ux0[t]) && Derivative[2][ux0][t] == 0,
	ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + ux0[t] == 0 || ux0[t] == 99) && Derivative[2][ux0][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$8059: {Derivative[2][ux0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$8059: {ux0[t] -> 10*t}, resultCons$8059: (9 + ux0[t] == 0 || ux0[t] == 99) && t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$8048: {solved, or[and[10*t == 99]], {ux0[t] -> 10*t}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[10*t == 99]], {ux0[t] -> 10*t}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux0[t] -> 10*t, Derivative[1][ux0][t] -> 10, Derivative[2][ux0][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$8048: {ux0[t] -> 10*t, Derivative[1][ux0][t] -> 10, Derivative[2][ux0][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + ux0[t] == -10 || 100 == 1 + ux0[t]) && Derivative[2][ux0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux0[0] == 0 && Derivative[1][ux0][0] == 10}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux0[t] -> 10*t, Derivative[1][ux0][t] -> 10, Derivative[2][ux0][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {0 == prev[px0, 0] && 10 == prev[px0, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$8048: or[and[10*t == 99]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[10*t == 99,
	{ux0[0] -> 0, Derivative[1][ux0][0] -> 10},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: lhs$8246: -99

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: eqSol$8246: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$8048}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8047: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x0--1=-10|10*10=x0-+1)=>x0'=-1*x0'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x1--1=-10|10*10=x1-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8253: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux1[0],
	prev[px1, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8255: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux1][0],
	prev[px1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8258: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux1][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux1][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8263: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux1][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux1][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000127}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8261: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + ux1[t] == -10 || 100 == 1 + ux1[t]) && Derivative[2][ux1][t] == 0,
	ux1[0] == prev[px1, 0] && Derivative[1][ux1][0] == prev[px1, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + ux1[t] == 0 || ux1[t] == 99) && Derivative[2][ux1][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$8278: {Derivative[2][ux1][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$8278: {ux1[t] -> 10}, resultCons$8278: (9 + ux1[t] == 0 || ux1[t] == 99) && t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$8267: {solved, or[and[False]], {ux1[t] -> 10}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[False]], {ux1[t] -> 10}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux1[t] -> 10, Derivative[1][ux1][t] -> 0, Derivative[2][ux1][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$8267: {ux1[t] -> 10, Derivative[1][ux1][t] -> 0, Derivative[2][ux1][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + ux1[t] == -10 || 100 == 1 + ux1[t]) && Derivative[2][ux1][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux1[0] == prev[px1, 0] && Derivative[1][ux1][0] == prev[px1, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux1[0] == 10 && Derivative[1][ux1][0] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux1[t] -> 10, Derivative[1][ux1][t] -> 0, Derivative[2][ux1][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {10 == prev[px1, 0] && 0 == prev[px1, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$8267: or[and[False]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[False,
	{ux1[0] -> 10, Derivative[1][ux1][0] -> 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$8267}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8266: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x1--1=-10|10*10=x1-+1)=>x1'=-1*x1'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x2--1=-10|10*10=x2-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8468: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux2[0],
	prev[px2, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8470: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux2][0],
	prev[px2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8473: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux2][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux2][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8478: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux2][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux2][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000046}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8476: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + ux2[t] == -10 || 100 == 1 + ux2[t]) && Derivative[2][ux2][t] == 0,
	ux2[0] == prev[px2, 0] && Derivative[1][ux2][0] == prev[px2, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + ux2[t] == 0 || ux2[t] == 99) && Derivative[2][ux2][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$8493: {Derivative[2][ux2][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$8493: {ux2[t] -> 15}, resultCons$8493: (9 + ux2[t] == 0 || ux2[t] == 99) && t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$8482: {solved, or[and[False]], {ux2[t] -> 15}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[False]], {ux2[t] -> 15}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux2[t] -> 15, Derivative[1][ux2][t] -> 0, Derivative[2][ux2][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$8482: {ux2[t] -> 15, Derivative[1][ux2][t] -> 0, Derivative[2][ux2][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + ux2[t] == -10 || 100 == 1 + ux2[t]) && Derivative[2][ux2][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux2[0] == prev[px2, 0] && Derivative[1][ux2][0] == prev[px2, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux2[0] == 15 && Derivative[1][ux2][0] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux2[t] -> 15, Derivative[1][ux2][t] -> 0, Derivative[2][ux2][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {15 == prev[px2, 0] && 0 == prev[px2, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$8482: or[and[False]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[False,
	{ux2[0] -> 15, Derivative[1][ux2][0] -> 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$8482}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8481: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x2--1=-10|10*10=x2-+1)=>x2'=-1*x2'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x3--1=-10|10*10=x3-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8683: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux3[0],
	prev[px3, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8685: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux3][0],
	prev[px3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8688: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux3][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux3][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8693: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux3][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux3][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000061}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8691: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + ux3[t] == -10 || 100 == 1 + ux3[t]) && Derivative[2][ux3][t] == 0,
	ux3[0] == prev[px3, 0] && Derivative[1][ux3][0] == prev[px3, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + ux3[t] == 0 || ux3[t] == 99) && Derivative[2][ux3][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$8708: {Derivative[2][ux3][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$8708: {ux3[t] -> 20}, resultCons$8708: (9 + ux3[t] == 0 || ux3[t] == 99) && t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$8697: {solved, or[and[False]], {ux3[t] -> 20}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[False]], {ux3[t] -> 20}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux3[t] -> 20, Derivative[1][ux3][t] -> 0, Derivative[2][ux3][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$8697: {ux3[t] -> 20, Derivative[1][ux3][t] -> 0, Derivative[2][ux3][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + ux3[t] == -10 || 100 == 1 + ux3[t]) && Derivative[2][ux3][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux3[0] == prev[px3, 0] && Derivative[1][ux3][0] == prev[px3, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux3[0] == 20 && Derivative[1][ux3][0] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux3[t] -> 20, Derivative[1][ux3][t] -> 0, Derivative[2][ux3][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {20 == prev[px3, 0] && 0 == prev[px3, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$8697: or[and[False]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[False,
	{ux3[0] -> 20, Derivative[1][ux3][0] -> 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$8697}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8696: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x3--1=-10|10*10=x3-+1)=>x3'=-1*x3'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x4--1=-10|10*10=x4-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8898: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux4[0],
	prev[px4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8900: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux4][0],
	prev[px4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8903: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8908: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux4][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux4][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000047}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8906: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + ux4[t] == -10 || 100 == 1 + ux4[t]) && Derivative[2][ux4][t] == 0,
	ux4[0] == prev[px4, 0] && Derivative[1][ux4][0] == prev[px4, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + ux4[t] == 0 || ux4[t] == 99) && Derivative[2][ux4][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$8923: {Derivative[2][ux4][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$8923: {ux4[t] -> 25}, resultCons$8923: (9 + ux4[t] == 0 || ux4[t] == 99) && t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$8912: {solved, or[and[False]], {ux4[t] -> 25}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[False]], {ux4[t] -> 25}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux4[t] -> 25, Derivative[1][ux4][t] -> 0, Derivative[2][ux4][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$8912: {ux4[t] -> 25, Derivative[1][ux4][t] -> 0, Derivative[2][ux4][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + ux4[t] == -10 || 100 == 1 + ux4[t]) && Derivative[2][ux4][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux4[0] == prev[px4, 0] && Derivative[1][ux4][0] == prev[px4, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux4[0] == 25 && Derivative[1][ux4][0] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux4[t] -> 25, Derivative[1][ux4][t] -> 0, Derivative[2][ux4][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {25 == prev[px4, 0] && 0 == prev[px4, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$8912: or[and[False]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[False,
	{ux4[0] -> 25, Derivative[1][ux4][0] -> 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$8912}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$8911: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x4--1=-10|10*10=x4-+1)=>x4'=-1*x4'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x5--1=-10|10*10=x5-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9113: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux5[0],
	prev[px5, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9115: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux5][0],
	prev[px5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9118: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9123: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux5][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux5][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000046}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9121: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + ux5[t] == -10 || 100 == 1 + ux5[t]) && Derivative[2][ux5][t] == 0,
	ux5[0] == prev[px5, 0] && Derivative[1][ux5][0] == prev[px5, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + ux5[t] == 0 || ux5[t] == 99) && Derivative[2][ux5][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$9138: {Derivative[2][ux5][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$9138: {ux5[t] -> 30}, resultCons$9138: (9 + ux5[t] == 0 || ux5[t] == 99) && t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$9127: {solved, or[and[False]], {ux5[t] -> 30}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[False]], {ux5[t] -> 30}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux5[t] -> 30, Derivative[1][ux5][t] -> 0, Derivative[2][ux5][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$9127: {ux5[t] -> 30, Derivative[1][ux5][t] -> 0, Derivative[2][ux5][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + ux5[t] == -10 || 100 == 1 + ux5[t]) && Derivative[2][ux5][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux5[0] == prev[px5, 0] && Derivative[1][ux5][0] == prev[px5, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux5[0] == 30 && Derivative[1][ux5][0] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux5[t] -> 30, Derivative[1][ux5][t] -> 0, Derivative[2][ux5][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {30 == prev[px5, 0] && 0 == prev[px5, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$9127: or[and[False]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[False,
	{ux5[0] -> 30, Derivative[1][ux5][0] -> 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$9127}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9126: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x5--1=-10|10*10=x5-+1)=>x5'=-1*x5'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x6--1=-10|10*10=x6-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9328: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux6[0],
	prev[px6, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9330: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux6][0],
	prev[px6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9333: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9338: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux6][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux6][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000049}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9336: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + ux6[t] == -10 || 100 == 1 + ux6[t]) && Derivative[2][ux6][t] == 0,
	ux6[0] == prev[px6, 0] && Derivative[1][ux6][0] == prev[px6, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + ux6[t] == 0 || ux6[t] == 99) && Derivative[2][ux6][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$9353: {Derivative[2][ux6][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$9353: {ux6[t] -> 35}, resultCons$9353: (9 + ux6[t] == 0 || ux6[t] == 99) && t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$9342: {solved, or[and[False]], {ux6[t] -> 35}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[False]], {ux6[t] -> 35}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux6[t] -> 35, Derivative[1][ux6][t] -> 0, Derivative[2][ux6][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$9342: {ux6[t] -> 35, Derivative[1][ux6][t] -> 0, Derivative[2][ux6][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + ux6[t] == -10 || 100 == 1 + ux6[t]) && Derivative[2][ux6][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux6[0] == prev[px6, 0] && Derivative[1][ux6][0] == prev[px6, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux6[0] == 35 && Derivative[1][ux6][0] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux6[t] -> 35, Derivative[1][ux6][t] -> 0, Derivative[2][ux6][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {35 == prev[px6, 0] && 0 == prev[px6, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$9342: or[and[False]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[False,
	{ux6[0] -> 35, Derivative[1][ux6][0] -> 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$9342}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9341: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x6--1=-10|10*10=x6-+1)=>x6'=-1*x6'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x7--1=-10|10*10=x7-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9543: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux7[0],
	prev[px7, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9545: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux7][0],
	prev[px7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9548: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9553: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux7][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux7][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000046}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9551: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + ux7[t] == -10 || 100 == 1 + ux7[t]) && Derivative[2][ux7][t] == 0,
	ux7[0] == prev[px7, 0] && Derivative[1][ux7][0] == prev[px7, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + ux7[t] == 0 || ux7[t] == 99) && Derivative[2][ux7][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$9568: {Derivative[2][ux7][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$9568: {ux7[t] -> 40}, resultCons$9568: (9 + ux7[t] == 0 || ux7[t] == 99) && t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$9557: {solved, or[and[False]], {ux7[t] -> 40}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[False]], {ux7[t] -> 40}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux7[t] -> 40, Derivative[1][ux7][t] -> 0, Derivative[2][ux7][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$9557: {ux7[t] -> 40, Derivative[1][ux7][t] -> 0, Derivative[2][ux7][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + ux7[t] == -10 || 100 == 1 + ux7[t]) && Derivative[2][ux7][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux7[0] == prev[px7, 0] && Derivative[1][ux7][0] == prev[px7, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux7[0] == 40 && Derivative[1][ux7][0] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux7[t] -> 40, Derivative[1][ux7][t] -> 0, Derivative[2][ux7][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {40 == prev[px7, 0] && 0 == prev[px7, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$9557: or[and[False]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[False,
	{ux7[0] -> 40, Derivative[1][ux7][0] -> 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$9557}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9556: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x7--1=-10|10*10=x7-+1)=>x7'=-1*x7'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x8--1=-10|10*10=x8-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9758: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux8[0],
	prev[px8, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9760: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux8][0],
	prev[px8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9763: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9768: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux8][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux8][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000046}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9766: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + ux8[t] == -10 || 100 == 1 + ux8[t]) && Derivative[2][ux8][t] == 0,
	ux8[0] == prev[px8, 0] && Derivative[1][ux8][0] == prev[px8, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + ux8[t] == 0 || ux8[t] == 99) && Derivative[2][ux8][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$9783: {Derivative[2][ux8][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$9783: {ux8[t] -> 45}, resultCons$9783: (9 + ux8[t] == 0 || ux8[t] == 99) && t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$9772: {solved, or[and[False]], {ux8[t] -> 45}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[False]], {ux8[t] -> 45}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux8[t] -> 45, Derivative[1][ux8][t] -> 0, Derivative[2][ux8][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$9772: {ux8[t] -> 45, Derivative[1][ux8][t] -> 0, Derivative[2][ux8][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + ux8[t] == -10 || 100 == 1 + ux8[t]) && Derivative[2][ux8][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux8[0] == prev[px8, 0] && Derivative[1][ux8][0] == prev[px8, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux8[0] == 45 && Derivative[1][ux8][0] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux8[t] -> 45, Derivative[1][ux8][t] -> 0, Derivative[2][ux8][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {45 == prev[px8, 0] && 0 == prev[px8, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$9772: or[and[False]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[False,
	{ux8[0] -> 45, Derivative[1][ux8][0] -> 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$9772}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9771: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x8--1=-10|10*10=x8-+1)=>x8'=-1*x8'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x9--1=-10|10*10=x9-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9973: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux9[0],
	prev[px9, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9975: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux9][0],
	prev[px9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9978: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9983: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux9][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux9][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000046}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9981: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + ux9[t] == -10 || 100 == 1 + ux9[t]) && Derivative[2][ux9][t] == 0,
	ux9[0] == prev[px9, 0] && Derivative[1][ux9][0] == prev[px9, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + ux9[t] == 0 || ux9[t] == 99) && Derivative[2][ux9][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$9998: {Derivative[2][ux9][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$9998: {ux9[t] -> 50}, resultCons$9998: (9 + ux9[t] == 0 || ux9[t] == 99) && t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$9987: {solved, or[and[False]], {ux9[t] -> 50}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[False]], {ux9[t] -> 50}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux9[t] -> 50, Derivative[1][ux9][t] -> 0, Derivative[2][ux9][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$9987: {ux9[t] -> 50, Derivative[1][ux9][t] -> 0, Derivative[2][ux9][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + ux9[t] == -10 || 100 == 1 + ux9[t]) && Derivative[2][ux9][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux9[0] == prev[px9, 0] && Derivative[1][ux9][0] == prev[px9, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux9[0] == 50 && Derivative[1][ux9][0] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux9[t] -> 50, Derivative[1][ux9][t] -> 0, Derivative[2][ux9][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {50 == prev[px9, 0] && 0 == prev[px9, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$9987: or[and[False]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[False,
	{ux9[0] -> 50, Derivative[1][ux9][0] -> 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$9987}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$9986: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x9--1=-10|10*10=x9-+1)=>x9'=-1*x9'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (y0--1=-10|10*10=y0-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10188: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy0[0],
	prev[py0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10190: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy0][0],
	prev[py0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10193: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy0][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy0][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10198: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy0][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy0][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000145}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10196: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + uy0[t] == -10 || 100 == 1 + uy0[t]) && Derivative[2][uy0][t] == 0,
	uy0[0] == prev[py0, 0] && Derivative[1][uy0][0] == prev[py0, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + uy0[t] == 0 || uy0[t] == 99) && Derivative[2][uy0][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$10213: {Derivative[2][uy0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$10213: {uy0[t] -> t}, resultCons$10213: (9 + uy0[t] == 0 || uy0[t] == 99) && t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$10202: {solved, or[and[t == 99]], {uy0[t] -> t}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[t == 99]], {uy0[t] -> t}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy0[t] -> t, Derivative[1][uy0][t] -> 1, Derivative[2][uy0][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$10202: {uy0[t] -> t, Derivative[1][uy0][t] -> 1, Derivative[2][uy0][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + uy0[t] == -10 || 100 == 1 + uy0[t]) && Derivative[2][uy0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy0[0] == prev[py0, 0] && Derivative[1][uy0][0] == prev[py0, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy0[0] == 0 && Derivative[1][uy0][0] == 1}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy0[t] -> t, Derivative[1][uy0][t] -> 1, Derivative[2][uy0][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {0 == prev[py0, 0] && 1 == prev[py0, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$10202: or[and[t == 99]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[t == 99,
	{uy0[0] -> 0, Derivative[1][uy0][0] -> 1},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: lhs$10400: -99

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: eqSol$10400: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$10202}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10201: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(y0--1=-10|10*10=y0-+1)=>y0'=-1*y0'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (y1--1=-10|10*10=y1-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10407: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy1[0],
	prev[py1, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10409: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy1][0],
	prev[py1, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10412: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy1][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy1][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10417: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy1][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy1][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000052}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10415: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + uy1[t] == -10 || 100 == 1 + uy1[t]) && Derivative[2][uy1][t] == 0,
	uy1[0] == prev[py1, 0] && Derivative[1][uy1][0] == prev[py1, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + uy1[t] == 0 || uy1[t] == 99) && Derivative[2][uy1][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$10432: {Derivative[2][uy1][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$10432: {uy1[t] -> 10}, resultCons$10432: (9 + uy1[t] == 0 || uy1[t] == 99) && t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$10421: {solved, or[and[False]], {uy1[t] -> 10}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[False]], {uy1[t] -> 10}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy1[t] -> 10, Derivative[1][uy1][t] -> 0, Derivative[2][uy1][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$10421: {uy1[t] -> 10, Derivative[1][uy1][t] -> 0, Derivative[2][uy1][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + uy1[t] == -10 || 100 == 1 + uy1[t]) && Derivative[2][uy1][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy1[0] == prev[py1, 0] && Derivative[1][uy1][0] == prev[py1, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy1[0] == 10 && Derivative[1][uy1][0] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy1[t] -> 10, Derivative[1][uy1][t] -> 0, Derivative[2][uy1][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {10 == prev[py1, 0] && 0 == prev[py1, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$10421: or[and[False]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[False,
	{uy1[0] -> 10, Derivative[1][uy1][0] -> 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$10421}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10420: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(y1--1=-10|10*10=y1-+1)=>y1'=-1*y1'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (y2--1=-10|10*10=y2-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10622: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy2[0],
	prev[py2, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10624: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy2][0],
	prev[py2, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10627: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy2][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy2][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10632: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy2][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy2][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000046}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10630: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + uy2[t] == -10 || 100 == 1 + uy2[t]) && Derivative[2][uy2][t] == 0,
	uy2[0] == prev[py2, 0] && Derivative[1][uy2][0] == prev[py2, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + uy2[t] == 0 || uy2[t] == 99) && Derivative[2][uy2][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$10647: {Derivative[2][uy2][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$10647: {uy2[t] -> 15}, resultCons$10647: (9 + uy2[t] == 0 || uy2[t] == 99) && t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$10636: {solved, or[and[False]], {uy2[t] -> 15}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[False]], {uy2[t] -> 15}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy2[t] -> 15, Derivative[1][uy2][t] -> 0, Derivative[2][uy2][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$10636: {uy2[t] -> 15, Derivative[1][uy2][t] -> 0, Derivative[2][uy2][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + uy2[t] == -10 || 100 == 1 + uy2[t]) && Derivative[2][uy2][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy2[0] == prev[py2, 0] && Derivative[1][uy2][0] == prev[py2, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy2[0] == 15 && Derivative[1][uy2][0] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy2[t] -> 15, Derivative[1][uy2][t] -> 0, Derivative[2][uy2][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {15 == prev[py2, 0] && 0 == prev[py2, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$10636: or[and[False]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[False,
	{uy2[0] -> 15, Derivative[1][uy2][0] -> 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$10636}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10635: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(y2--1=-10|10*10=y2-+1)=>y2'=-1*y2'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (y3--1=-10|10*10=y3-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10837: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy3[0],
	prev[py3, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10839: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy3][0],
	prev[py3, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10842: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy3][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy3][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10847: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy3][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy3][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000047}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10845: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + uy3[t] == -10 || 100 == 1 + uy3[t]) && Derivative[2][uy3][t] == 0,
	uy3[0] == prev[py3, 0] && Derivative[1][uy3][0] == prev[py3, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + uy3[t] == 0 || uy3[t] == 99) && Derivative[2][uy3][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$10862: {Derivative[2][uy3][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$10862: {uy3[t] -> 20}, resultCons$10862: (9 + uy3[t] == 0 || uy3[t] == 99) && t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$10851: {solved, or[and[False]], {uy3[t] -> 20}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[False]], {uy3[t] -> 20}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy3[t] -> 20, Derivative[1][uy3][t] -> 0, Derivative[2][uy3][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$10851: {uy3[t] -> 20, Derivative[1][uy3][t] -> 0, Derivative[2][uy3][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + uy3[t] == -10 || 100 == 1 + uy3[t]) && Derivative[2][uy3][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy3[0] == prev[py3, 0] && Derivative[1][uy3][0] == prev[py3, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy3[0] == 20 && Derivative[1][uy3][0] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy3[t] -> 20, Derivative[1][uy3][t] -> 0, Derivative[2][uy3][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {20 == prev[py3, 0] && 0 == prev[py3, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$10851: or[and[False]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[False,
	{uy3[0] -> 20, Derivative[1][uy3][0] -> 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$10851}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$10850: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(y3--1=-10|10*10=y3-+1)=>y3'=-1*y3'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (y4--1=-10|10*10=y4-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11052: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy4[0],
	prev[py4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11054: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy4][0],
	prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11057: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11062: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy4][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy4][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000048}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11060: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + uy4[t] == -10 || 100 == 1 + uy4[t]) && Derivative[2][uy4][t] == 0,
	uy4[0] == prev[py4, 0] && Derivative[1][uy4][0] == prev[py4, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + uy4[t] == 0 || uy4[t] == 99) && Derivative[2][uy4][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$11077: {Derivative[2][uy4][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$11077: {uy4[t] -> 25}, resultCons$11077: (9 + uy4[t] == 0 || uy4[t] == 99) && t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$11066: {solved, or[and[False]], {uy4[t] -> 25}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[False]], {uy4[t] -> 25}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy4[t] -> 25, Derivative[1][uy4][t] -> 0, Derivative[2][uy4][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$11066: {uy4[t] -> 25, Derivative[1][uy4][t] -> 0, Derivative[2][uy4][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + uy4[t] == -10 || 100 == 1 + uy4[t]) && Derivative[2][uy4][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy4[0] == prev[py4, 0] && Derivative[1][uy4][0] == prev[py4, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy4[0] == 25 && Derivative[1][uy4][0] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy4[t] -> 25, Derivative[1][uy4][t] -> 0, Derivative[2][uy4][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {25 == prev[py4, 0] && 0 == prev[py4, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$11066: or[and[False]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[False,
	{uy4[0] -> 25, Derivative[1][uy4][0] -> 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$11066}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11065: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(y4--1=-10|10*10=y4-+1)=>y4'=-1*y4'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (y5--1=-10|10*10=y5-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11267: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy5[0],
	prev[py5, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11269: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy5][0],
	prev[py5, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11272: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11277: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy5][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy5][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000045}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11275: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + uy5[t] == -10 || 100 == 1 + uy5[t]) && Derivative[2][uy5][t] == 0,
	uy5[0] == prev[py5, 0] && Derivative[1][uy5][0] == prev[py5, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + uy5[t] == 0 || uy5[t] == 99) && Derivative[2][uy5][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$11292: {Derivative[2][uy5][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$11292: {uy5[t] -> 30}, resultCons$11292: (9 + uy5[t] == 0 || uy5[t] == 99) && t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$11281: {solved, or[and[False]], {uy5[t] -> 30}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[False]], {uy5[t] -> 30}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy5[t] -> 30, Derivative[1][uy5][t] -> 0, Derivative[2][uy5][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$11281: {uy5[t] -> 30, Derivative[1][uy5][t] -> 0, Derivative[2][uy5][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + uy5[t] == -10 || 100 == 1 + uy5[t]) && Derivative[2][uy5][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy5[0] == prev[py5, 0] && Derivative[1][uy5][0] == prev[py5, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy5[0] == 30 && Derivative[1][uy5][0] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy5[t] -> 30, Derivative[1][uy5][t] -> 0, Derivative[2][uy5][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {30 == prev[py5, 0] && 0 == prev[py5, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$11281: or[and[False]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[False,
	{uy5[0] -> 30, Derivative[1][uy5][0] -> 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$11281}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11280: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(y5--1=-10|10*10=y5-+1)=>y5'=-1*y5'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (y6--1=-10|10*10=y6-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11482: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy6[0],
	prev[py6, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11484: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy6][0],
	prev[py6, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11487: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11492: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy6][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy6][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000045}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11490: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + uy6[t] == -10 || 100 == 1 + uy6[t]) && Derivative[2][uy6][t] == 0,
	uy6[0] == prev[py6, 0] && Derivative[1][uy6][0] == prev[py6, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + uy6[t] == 0 || uy6[t] == 99) && Derivative[2][uy6][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$11507: {Derivative[2][uy6][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$11507: {uy6[t] -> 35}, resultCons$11507: (9 + uy6[t] == 0 || uy6[t] == 99) && t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$11496: {solved, or[and[False]], {uy6[t] -> 35}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[False]], {uy6[t] -> 35}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy6[t] -> 35, Derivative[1][uy6][t] -> 0, Derivative[2][uy6][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$11496: {uy6[t] -> 35, Derivative[1][uy6][t] -> 0, Derivative[2][uy6][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + uy6[t] == -10 || 100 == 1 + uy6[t]) && Derivative[2][uy6][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy6[0] == prev[py6, 0] && Derivative[1][uy6][0] == prev[py6, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy6[0] == 35 && Derivative[1][uy6][0] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy6[t] -> 35, Derivative[1][uy6][t] -> 0, Derivative[2][uy6][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {35 == prev[py6, 0] && 0 == prev[py6, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$11496: or[and[False]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[False,
	{uy6[0] -> 35, Derivative[1][uy6][0] -> 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$11496}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11495: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(y6--1=-10|10*10=y6-+1)=>y6'=-1*y6'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (y7--1=-10|10*10=y7-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11697: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy7[0],
	prev[py7, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11699: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy7][0],
	prev[py7, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11702: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11707: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy7][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy7][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000044}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11705: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + uy7[t] == -10 || 100 == 1 + uy7[t]) && Derivative[2][uy7][t] == 0,
	uy7[0] == prev[py7, 0] && Derivative[1][uy7][0] == prev[py7, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + uy7[t] == 0 || uy7[t] == 99) && Derivative[2][uy7][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$11722: {Derivative[2][uy7][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$11722: {uy7[t] -> 40}, resultCons$11722: (9 + uy7[t] == 0 || uy7[t] == 99) && t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$11711: {solved, or[and[False]], {uy7[t] -> 40}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[False]], {uy7[t] -> 40}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy7[t] -> 40, Derivative[1][uy7][t] -> 0, Derivative[2][uy7][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$11711: {uy7[t] -> 40, Derivative[1][uy7][t] -> 0, Derivative[2][uy7][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + uy7[t] == -10 || 100 == 1 + uy7[t]) && Derivative[2][uy7][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy7[0] == prev[py7, 0] && Derivative[1][uy7][0] == prev[py7, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy7[0] == 40 && Derivative[1][uy7][0] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy7[t] -> 40, Derivative[1][uy7][t] -> 0, Derivative[2][uy7][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {40 == prev[py7, 0] && 0 == prev[py7, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$11711: or[and[False]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[False,
	{uy7[0] -> 40, Derivative[1][uy7][0] -> 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$11711}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11710: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(y7--1=-10|10*10=y7-+1)=>y7'=-1*y7'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (y8--1=-10|10*10=y8-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11912: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy8[0],
	prev[py8, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11914: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy8][0],
	prev[py8, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11917: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11922: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy8][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy8][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000045}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11920: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + uy8[t] == -10 || 100 == 1 + uy8[t]) && Derivative[2][uy8][t] == 0,
	uy8[0] == prev[py8, 0] && Derivative[1][uy8][0] == prev[py8, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + uy8[t] == 0 || uy8[t] == 99) && Derivative[2][uy8][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$11937: {Derivative[2][uy8][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$11937: {uy8[t] -> 45}, resultCons$11937: (9 + uy8[t] == 0 || uy8[t] == 99) && t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$11926: {solved, or[and[False]], {uy8[t] -> 45}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[False]], {uy8[t] -> 45}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy8[t] -> 45, Derivative[1][uy8][t] -> 0, Derivative[2][uy8][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$11926: {uy8[t] -> 45, Derivative[1][uy8][t] -> 0, Derivative[2][uy8][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + uy8[t] == -10 || 100 == 1 + uy8[t]) && Derivative[2][uy8][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy8[0] == prev[py8, 0] && Derivative[1][uy8][0] == prev[py8, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy8[0] == 45 && Derivative[1][uy8][0] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy8[t] -> 45, Derivative[1][uy8][t] -> 0, Derivative[2][uy8][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {45 == prev[py8, 0] && 0 == prev[py8, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$11926: or[and[False]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[False,
	{uy8[0] -> 45, Derivative[1][uy8][0] -> 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$11926}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$11925: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(y8--1=-10|10*10=y8-+1)=>y8'=-1*y8'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (y9--1=-10|10*10=y9-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12127: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy9[0],
	prev[py9, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12129: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy9][0],
	prev[py9, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12132: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12137: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy9][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy9][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000045}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12135: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + uy9[t] == -10 || 100 == 1 + uy9[t]) && Derivative[2][uy9][t] == 0,
	uy9[0] == prev[py9, 0] && Derivative[1][uy9][0] == prev[py9, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + uy9[t] == 0 || uy9[t] == 99) && Derivative[2][uy9][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$12152: {Derivative[2][uy9][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$12152: {uy9[t] -> 50}, resultCons$12152: (9 + uy9[t] == 0 || uy9[t] == 99) && t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$12141: {solved, or[and[False]], {uy9[t] -> 50}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[False]], {uy9[t] -> 50}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy9[t] -> 50, Derivative[1][uy9][t] -> 0, Derivative[2][uy9][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$12141: {uy9[t] -> 50, Derivative[1][uy9][t] -> 0, Derivative[2][uy9][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + uy9[t] == -10 || 100 == 1 + uy9[t]) && Derivative[2][uy9][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy9[0] == prev[py9, 0] && Derivative[1][uy9][0] == prev[py9, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy9[0] == 50 && Derivative[1][uy9][0] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy9[t] -> 50, Derivative[1][uy9][t] -> 0, Derivative[2][uy9][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {50 == prev[py9, 0] && 0 == prev[py9, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$12141: or[and[False]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[False,
	{uy9[0] -> 50, Derivative[1][uy9][0] -> 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$12141}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12140: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(y9--1=-10|10*10=y9-+1)=>y9'=-1*y9'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0=0, y0=0, x0'=10, y0'=1, x1=5*2, y1=5*2, x1'=0, y1'=0, x2=5*3, y2=5*3, x2'=0, y2'=0, x3=5*4, y3=5*4, x3'=0, y3'=0, x4=5*5, y4=5*5, x4'=0, y4'=0, x5=5*6, y5=5*6, x5'=0, y5'=0, x6=5*7, y6=5*7, x6'=0, y6'=0, x7=5*8, y7=5*8, x7'=0, y7'=0, x8=5*9, y8=5*9, x8'=0, y8'=0, x9=5*10, y9=5*10, x9'=0, y9'=0, x0''=0, y0''=0, x1''=0, y1''=0, x2''=0, y2''=0, x3''=0, y3''=0, x4''=0, y4''=0, x5''=0, y5''=0, x6''=0, y6''=0, x7''=0, y7''=0, x8''=0, y8''=0, x9''=0, y9''=0}
@ConsistencyChecker.cpp 398 function: check_consistency   related[1/20]: {x0''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12342: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux0][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux0][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12346: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux0][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux0][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000047}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12344: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][ux0][t] == 0,
	True,
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux0][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$12351: {Derivative[2][ux0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$12351: {ux0[t] -> 10*t}, resultCons$12351: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$12350: {solved, or[and[]], {ux0[t] -> 10*t}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux0[t] -> 10*t}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux0[t] -> 10*t, Derivative[1][ux0][t] -> 10, Derivative[2][ux0][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$12350: {ux0[t] -> 10*t, Derivative[1][ux0][t] -> 10, Derivative[2][ux0][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][ux0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux0[t] -> 10*t, Derivative[1][ux0][t] -> 10, Derivative[2][ux0][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$12350: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$12350}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12349: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][ux0][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux0][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$12542: {Derivative[2][ux0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$12542: {ux0[t] -> 10*t}, resultCons$12542: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux0[t] -> 10*t}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12540: {{{{ux0, 0}, 0, "10"*t}, {{ux0, 1}, 0, "10"}, {{ux0, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12614: 232

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[2/20]: {y0''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12616: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy0][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy0][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12620: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy0][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy0][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000047}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12618: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][uy0][t] == 0,
	True,
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy0][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$12625: {Derivative[2][uy0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$12625: {uy0[t] -> t}, resultCons$12625: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$12624: {solved, or[and[]], {uy0[t] -> t}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy0[t] -> t}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy0[t] -> t, Derivative[1][uy0][t] -> 1, Derivative[2][uy0][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$12624: {uy0[t] -> t, Derivative[1][uy0][t] -> 1, Derivative[2][uy0][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][uy0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy0[t] -> t, Derivative[1][uy0][t] -> 1, Derivative[2][uy0][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$12624: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$12624}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12623: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][uy0][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy0][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$12816: {Derivative[2][uy0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$12816: {uy0[t] -> t}, resultCons$12816: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy0[t] -> t}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12814: {{{{uy0, 0}, 0, t}, {{uy0, 1}, 0, "1"}, {{uy0, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12886: 232

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[3/20]: {x1''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12888: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux1][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux1][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12892: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux1][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux1][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000043}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12890: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][ux1][t] == 0,
	True,
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux1][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$12897: {Derivative[2][ux1][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$12897: {ux1[t] -> 10}, resultCons$12897: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$12896: {solved, or[and[]], {ux1[t] -> 10}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux1[t] -> 10}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux1[t] -> 10, Derivative[1][ux1][t] -> 0, Derivative[2][ux1][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$12896: {ux1[t] -> 10, Derivative[1][ux1][t] -> 0, Derivative[2][ux1][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][ux1][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux1[t] -> 10, Derivative[1][ux1][t] -> 0, Derivative[2][ux1][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$12896: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$12896}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$12895: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][ux1][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux1][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$13088: {Derivative[2][ux1][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$13088: {ux1[t] -> 10}, resultCons$13088: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux1[t] -> 10}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13086: {{{{ux1, 0}, 0, "10"}, {{ux1, 1}, 0, "0"}, {{ux1, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13158: 232

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[4/20]: {y1''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13160: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy1][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy1][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13164: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy1][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy1][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000044}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13162: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][uy1][t] == 0,
	True,
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy1][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$13169: {Derivative[2][uy1][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$13169: {uy1[t] -> 10}, resultCons$13169: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$13168: {solved, or[and[]], {uy1[t] -> 10}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy1[t] -> 10}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy1[t] -> 10, Derivative[1][uy1][t] -> 0, Derivative[2][uy1][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$13168: {uy1[t] -> 10, Derivative[1][uy1][t] -> 0, Derivative[2][uy1][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][uy1][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy1[t] -> 10, Derivative[1][uy1][t] -> 0, Derivative[2][uy1][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$13168: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$13168}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13167: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][uy1][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy1][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$13360: {Derivative[2][uy1][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$13360: {uy1[t] -> 10}, resultCons$13360: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy1[t] -> 10}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13358: {{{{uy1, 0}, 0, "10"}, {{uy1, 1}, 0, "0"}, {{uy1, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13430: 232

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[5/20]: {x2''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13432: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux2][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux2][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13436: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux2][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux2][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000044}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13434: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][ux2][t] == 0,
	True,
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux2][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$13441: {Derivative[2][ux2][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$13441: {ux2[t] -> 15}, resultCons$13441: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$13440: {solved, or[and[]], {ux2[t] -> 15}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux2[t] -> 15}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux2[t] -> 15, Derivative[1][ux2][t] -> 0, Derivative[2][ux2][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$13440: {ux2[t] -> 15, Derivative[1][ux2][t] -> 0, Derivative[2][ux2][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][ux2][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux2[t] -> 15, Derivative[1][ux2][t] -> 0, Derivative[2][ux2][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$13440: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$13440}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13439: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][ux2][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux2][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$13632: {Derivative[2][ux2][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$13632: {ux2[t] -> 15}, resultCons$13632: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux2[t] -> 15}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13630: {{{{ux2, 0}, 0, "15"}, {{ux2, 1}, 0, "0"}, {{ux2, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13702: 232

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[6/20]: {y2''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13704: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy2][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy2][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13708: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy2][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy2][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000045}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13706: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][uy2][t] == 0,
	True,
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy2][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$13713: {Derivative[2][uy2][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$13713: {uy2[t] -> 15}, resultCons$13713: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$13712: {solved, or[and[]], {uy2[t] -> 15}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy2[t] -> 15}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy2[t] -> 15, Derivative[1][uy2][t] -> 0, Derivative[2][uy2][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$13712: {uy2[t] -> 15, Derivative[1][uy2][t] -> 0, Derivative[2][uy2][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][uy2][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy2[t] -> 15, Derivative[1][uy2][t] -> 0, Derivative[2][uy2][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$13712: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$13712}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13711: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][uy2][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy2][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$13904: {Derivative[2][uy2][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$13904: {uy2[t] -> 15}, resultCons$13904: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy2[t] -> 15}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13902: {{{{uy2, 0}, 0, "15"}, {{uy2, 1}, 0, "0"}, {{uy2, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13974: 232

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[7/20]: {x3''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13976: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux3][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux3][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13980: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux3][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux3][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000044}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13978: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][ux3][t] == 0,
	True,
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux3][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$13985: {Derivative[2][ux3][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$13985: {ux3[t] -> 20}, resultCons$13985: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$13984: {solved, or[and[]], {ux3[t] -> 20}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux3[t] -> 20}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux3[t] -> 20, Derivative[1][ux3][t] -> 0, Derivative[2][ux3][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$13984: {ux3[t] -> 20, Derivative[1][ux3][t] -> 0, Derivative[2][ux3][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][ux3][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux3[t] -> 20, Derivative[1][ux3][t] -> 0, Derivative[2][ux3][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$13984: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$13984}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$13983: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][ux3][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux3][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$14176: {Derivative[2][ux3][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$14176: {ux3[t] -> 20}, resultCons$14176: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux3[t] -> 20}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$14174: {{{{ux3, 0}, 0, "20"}, {{ux3, 1}, 0, "0"}, {{ux3, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$14246: 232

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[8/20]: {y3''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$14248: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy3][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy3][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$14252: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy3][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy3][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000045}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$14250: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][uy3][t] == 0,
	True,
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy3][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$14257: {Derivative[2][uy3][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$14257: {uy3[t] -> 20}, resultCons$14257: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$14256: {solved, or[and[]], {uy3[t] -> 20}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy3[t] -> 20}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy3[t] -> 20, Derivative[1][uy3][t] -> 0, Derivative[2][uy3][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$14256: {uy3[t] -> 20, Derivative[1][uy3][t] -> 0, Derivative[2][uy3][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][uy3][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy3[t] -> 20, Derivative[1][uy3][t] -> 0, Derivative[2][uy3][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$14256: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$14256}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$14255: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][uy3][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy3][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$14448: {Derivative[2][uy3][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$14448: {uy3[t] -> 20}, resultCons$14448: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy3[t] -> 20}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$14446: {{{{uy3, 0}, 0, "20"}, {{uy3, 1}, 0, "0"}, {{uy3, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$14518: 232

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[9/20]: {x4''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$14520: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$14524: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux4][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux4][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000044}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$14522: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][ux4][t] == 0,
	True,
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux4][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$14529: {Derivative[2][ux4][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$14529: {ux4[t] -> 25}, resultCons$14529: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$14528: {solved, or[and[]], {ux4[t] -> 25}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux4[t] -> 25}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux4[t] -> 25, Derivative[1][ux4][t] -> 0, Derivative[2][ux4][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$14528: {ux4[t] -> 25, Derivative[1][ux4][t] -> 0, Derivative[2][ux4][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][ux4][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux4[t] -> 25, Derivative[1][ux4][t] -> 0, Derivative[2][ux4][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$14528: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$14528}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$14527: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][ux4][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux4][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$14720: {Derivative[2][ux4][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$14720: {ux4[t] -> 25}, resultCons$14720: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux4[t] -> 25}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$14718: {{{{ux4, 0}, 0, "25"}, {{ux4, 1}, 0, "0"}, {{ux4, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$14790: 232

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[10/20]: {y4''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$14792: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$14796: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy4][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy4][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000047}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$14794: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][uy4][t] == 0,
	True,
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy4][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$14801: {Derivative[2][uy4][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$14801: {uy4[t] -> 25}, resultCons$14801: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$14800: {solved, or[and[]], {uy4[t] -> 25}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy4[t] -> 25}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy4[t] -> 25, Derivative[1][uy4][t] -> 0, Derivative[2][uy4][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$14800: {uy4[t] -> 25, Derivative[1][uy4][t] -> 0, Derivative[2][uy4][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][uy4][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy4[t] -> 25, Derivative[1][uy4][t] -> 0, Derivative[2][uy4][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$14800: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$14800}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$14799: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][uy4][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy4][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$14992: {Derivative[2][uy4][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$14992: {uy4[t] -> 25}, resultCons$14992: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy4[t] -> 25}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$14990: {{{{uy4, 0}, 0, "25"}, {{uy4, 1}, 0, "0"}, {{uy4, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15062: 232

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[11/20]: {x5''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15064: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15068: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux5][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux5][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000055}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15066: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][ux5][t] == 0,
	True,
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux5][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$15073: {Derivative[2][ux5][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$15073: {ux5[t] -> 30}, resultCons$15073: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$15072: {solved, or[and[]], {ux5[t] -> 30}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux5[t] -> 30}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux5[t] -> 30, Derivative[1][ux5][t] -> 0, Derivative[2][ux5][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$15072: {ux5[t] -> 30, Derivative[1][ux5][t] -> 0, Derivative[2][ux5][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][ux5][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux5[t] -> 30, Derivative[1][ux5][t] -> 0, Derivative[2][ux5][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$15072: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$15072}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15071: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][ux5][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux5][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$15264: {Derivative[2][ux5][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$15264: {ux5[t] -> 30}, resultCons$15264: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux5[t] -> 30}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15262: {{{{ux5, 0}, 0, "30"}, {{ux5, 1}, 0, "0"}, {{ux5, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15334: 232

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[12/20]: {y5''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15336: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy5][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15340: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy5][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy5][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000045}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15338: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][uy5][t] == 0,
	True,
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy5][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$15345: {Derivative[2][uy5][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$15345: {uy5[t] -> 30}, resultCons$15345: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$15344: {solved, or[and[]], {uy5[t] -> 30}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy5[t] -> 30}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy5[t] -> 30, Derivative[1][uy5][t] -> 0, Derivative[2][uy5][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$15344: {uy5[t] -> 30, Derivative[1][uy5][t] -> 0, Derivative[2][uy5][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][uy5][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy5[t] -> 30, Derivative[1][uy5][t] -> 0, Derivative[2][uy5][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$15344: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$15344}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15343: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][uy5][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy5][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$15536: {Derivative[2][uy5][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$15536: {uy5[t] -> 30}, resultCons$15536: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy5[t] -> 30}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15534: {{{{uy5, 0}, 0, "30"}, {{uy5, 1}, 0, "0"}, {{uy5, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15606: 232

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[13/20]: {x6''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15608: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15612: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux6][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux6][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000044}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15610: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][ux6][t] == 0,
	True,
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux6][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$15617: {Derivative[2][ux6][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$15617: {ux6[t] -> 35}, resultCons$15617: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$15616: {solved, or[and[]], {ux6[t] -> 35}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux6[t] -> 35}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux6[t] -> 35, Derivative[1][ux6][t] -> 0, Derivative[2][ux6][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$15616: {ux6[t] -> 35, Derivative[1][ux6][t] -> 0, Derivative[2][ux6][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][ux6][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux6[t] -> 35, Derivative[1][ux6][t] -> 0, Derivative[2][ux6][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$15616: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$15616}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15615: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][ux6][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux6][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$15808: {Derivative[2][ux6][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$15808: {ux6[t] -> 35}, resultCons$15808: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux6[t] -> 35}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15806: {{{{ux6, 0}, 0, "35"}, {{ux6, 1}, 0, "0"}, {{ux6, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15878: 232

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[14/20]: {y6''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15880: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy6][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15884: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy6][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy6][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000045}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15882: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][uy6][t] == 0,
	True,
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy6][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$15889: {Derivative[2][uy6][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$15889: {uy6[t] -> 35}, resultCons$15889: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$15888: {solved, or[and[]], {uy6[t] -> 35}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy6[t] -> 35}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy6[t] -> 35, Derivative[1][uy6][t] -> 0, Derivative[2][uy6][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$15888: {uy6[t] -> 35, Derivative[1][uy6][t] -> 0, Derivative[2][uy6][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][uy6][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy6[t] -> 35, Derivative[1][uy6][t] -> 0, Derivative[2][uy6][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$15888: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$15888}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$15887: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][uy6][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy6][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$16080: {Derivative[2][uy6][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$16080: {uy6[t] -> 35}, resultCons$16080: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy6[t] -> 35}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16078: {{{{uy6, 0}, 0, "35"}, {{uy6, 1}, 0, "0"}, {{uy6, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16150: 232

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[15/20]: {x7''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16152: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16156: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux7][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux7][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000044}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16154: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][ux7][t] == 0,
	True,
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux7][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$16161: {Derivative[2][ux7][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$16161: {ux7[t] -> 40}, resultCons$16161: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$16160: {solved, or[and[]], {ux7[t] -> 40}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux7[t] -> 40}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux7[t] -> 40, Derivative[1][ux7][t] -> 0, Derivative[2][ux7][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$16160: {ux7[t] -> 40, Derivative[1][ux7][t] -> 0, Derivative[2][ux7][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][ux7][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux7[t] -> 40, Derivative[1][ux7][t] -> 0, Derivative[2][ux7][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$16160: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$16160}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16159: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][ux7][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux7][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$16352: {Derivative[2][ux7][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$16352: {ux7[t] -> 40}, resultCons$16352: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux7[t] -> 40}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16350: {{{{ux7, 0}, 0, "40"}, {{ux7, 1}, 0, "0"}, {{ux7, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16422: 232

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[16/20]: {y7''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16424: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy7][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16428: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy7][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy7][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16426: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][uy7][t] == 0,
	True,
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy7][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$16433: {Derivative[2][uy7][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$16433: {uy7[t] -> 40}, resultCons$16433: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$16432: {solved, or[and[]], {uy7[t] -> 40}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy7[t] -> 40}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy7[t] -> 40, Derivative[1][uy7][t] -> 0, Derivative[2][uy7][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$16432: {uy7[t] -> 40, Derivative[1][uy7][t] -> 0, Derivative[2][uy7][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][uy7][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy7[t] -> 40, Derivative[1][uy7][t] -> 0, Derivative[2][uy7][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$16432: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$16432}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16431: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][uy7][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy7][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$16624: {Derivative[2][uy7][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$16624: {uy7[t] -> 40}, resultCons$16624: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy7[t] -> 40}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16622: {{{{uy7, 0}, 0, "40"}, {{uy7, 1}, 0, "0"}, {{uy7, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16694: 232

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[17/20]: {x8''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16696: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16700: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux8][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux8][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000044}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16698: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][ux8][t] == 0,
	True,
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux8][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$16705: {Derivative[2][ux8][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$16705: {ux8[t] -> 45}, resultCons$16705: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$16704: {solved, or[and[]], {ux8[t] -> 45}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux8[t] -> 45}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux8[t] -> 45, Derivative[1][ux8][t] -> 0, Derivative[2][ux8][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$16704: {ux8[t] -> 45, Derivative[1][ux8][t] -> 0, Derivative[2][ux8][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][ux8][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux8[t] -> 45, Derivative[1][ux8][t] -> 0, Derivative[2][ux8][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$16704: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$16704}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16703: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][ux8][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux8][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$16896: {Derivative[2][ux8][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$16896: {ux8[t] -> 45}, resultCons$16896: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux8[t] -> 45}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16894: {{{{ux8, 0}, 0, "45"}, {{ux8, 1}, 0, "0"}, {{ux8, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16966: 232

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[18/20]: {y8''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16968: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy8][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16972: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy8][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy8][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000044}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16970: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][uy8][t] == 0,
	True,
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy8][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$16977: {Derivative[2][uy8][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$16977: {uy8[t] -> 45}, resultCons$16977: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$16976: {solved, or[and[]], {uy8[t] -> 45}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy8[t] -> 45}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy8[t] -> 45, Derivative[1][uy8][t] -> 0, Derivative[2][uy8][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$16976: {uy8[t] -> 45, Derivative[1][uy8][t] -> 0, Derivative[2][uy8][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][uy8][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy8[t] -> 45, Derivative[1][uy8][t] -> 0, Derivative[2][uy8][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$16976: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$16976}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$16975: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][uy8][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy8][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$17168: {Derivative[2][uy8][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$17168: {uy8[t] -> 45}, resultCons$17168: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy8[t] -> 45}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17166: {{{{uy8, 0}, 0, "45"}, {{uy8, 1}, 0, "0"}, {{uy8, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17238: 232

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[19/20]: {x9''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17240: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17244: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux9][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux9][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000045}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17242: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][ux9][t] == 0,
	True,
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux9][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$17249: {Derivative[2][ux9][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$17249: {ux9[t] -> 50}, resultCons$17249: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$17248: {solved, or[and[]], {ux9[t] -> 50}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux9[t] -> 50}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux9[t] -> 50, Derivative[1][ux9][t] -> 0, Derivative[2][ux9][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$17248: {ux9[t] -> 50, Derivative[1][ux9][t] -> 0, Derivative[2][ux9][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][ux9][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux9[t] -> 50, Derivative[1][ux9][t] -> 0, Derivative[2][ux9][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$17248: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$17248}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17247: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][ux9][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux9][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$17440: {Derivative[2][ux9][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$17440: {ux9[t] -> 50}, resultCons$17440: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux9[t] -> 50}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17438: {{{{ux9, 0}, 0, "50"}, {{ux9, 1}, 0, "0"}, {{ux9, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17510: 232

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[20/20]: {y9''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17512: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy9][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17516: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy9][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy9][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000044}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17514: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][uy9][t] == 0,
	True,
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy9][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$17521: {Derivative[2][uy9][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$17521: {uy9[t] -> 50}, resultCons$17521: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$17520: {solved, or[and[]], {uy9[t] -> 50}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy9[t] -> 50}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy9[t] -> 50, Derivative[1][uy9][t] -> 0, Derivative[2][uy9][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$17520: {uy9[t] -> 50, Derivative[1][uy9][t] -> 0, Derivative[2][uy9][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][uy9][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy9[t] -> 50, Derivative[1][uy9][t] -> 0, Derivative[2][uy9][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$17520: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$17520}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17519: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][uy9][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy9][t] == 0,
	{prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$17712: {Derivative[2][uy9][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$17712: {uy9[t] -> 50}, resultCons$17712: t > 0, {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}: {prev[px0, 0] -> 0, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 0, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy9[t] -> 50}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17710: {{{{uy9, 0}, 0, "50"}, {{uy9, 1}, 0, "0"}, {{uy9, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17782: 232

@Backend.cpp 427 function: call   getSizeOfConstraint
@PhaseSimulator.cpp 369 function: simulate_ms   CONSISTENT: {}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getParameterConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17784: {True}

@Backend.cpp 427 function: call   getParameterConstraint
@PhaseSimulator.cpp 1557 function: make_next_todo   *phase: %% PhaseType: 2
%% id: 2
%% step: 1
%% parent_id:1
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: 0
--- variable map ---
x0 <=> 10*t
x1 <=> 10
x2 <=> 15
x3 <=> 20
x4 <=> 25
x5 <=> 30
x6 <=> 35
x7 <=> 40
x8 <=> 45
x9 <=> 50
y0 <=> t
y1 <=> 10
y2 <=> 15
y3 <=> 20
y4 <=> 25
y5 <=> 30
y6 <=> 35
y7 <=> 40
y8 <=> 45
y9 <=> 50
x0' <=> 10
x1' <=> 0
x2' <=> 0
x3' <=> 0
x4' <=> 0
x5' <=> 0
x6' <=> 0
x7' <=> 0
x8' <=> 0
x9' <=> 0
y0' <=> 1
y1' <=> 0
y2' <=> 0
y3' <=> 0
y4' <=> 0
y5' <=> 0
y6' <=> 0
y7' <=> 0
y8' <=> 0
y9' <=> 0
x0'' <=> 0
x1'' <=> 0
x2'' <=> 0
x3'' <=> 0
x4'' <=> 0
x5'' <=> 0
x6'' <=> 0
x7'' <=> 0
x8'' <=> 0
x9'' <=> 0
y0'' <=> 0
y1'' <=> 0
y2'' <=> 0
y3'' <=> 0
y4'' <=> 0
y5'' <=> 0
y6'' <=> 0
y7'' <=> 0
y8'' <=> 0
y9'' <=> 0

--- parameter constraint ---
{}

@PhaseSimulator.cpp 666 function: replace_prev2parameter   phase.get_parameter_constraint(): {}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForParameter[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17787: Null

@Backend.cpp 427 function: call   resetConstraintForParameter
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[10*t,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10*t]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17791: SimplifyCount[10] + SimplifyCount[t] + SimplifyCount[Times]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[10] + SimplifyCount[t] + SimplifyCount[Times]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000159}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17789: "10"*t

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[10,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17799: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000028}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17797: "10"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[15,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17805: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17803: "15"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[20,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17811: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17809: "20"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[25,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17817: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17815: "25"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[30,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17823: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17821: "30"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[35,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17829: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17827: "35"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[40,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17835: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000037}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17833: "40"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[45,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17841: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17839: "45"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[50,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17847: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17845: "50"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[t,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[t]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17853: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17851: t

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[10,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17859: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17857: "10"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[15,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17865: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17863: "15"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[20,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17871: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17869: "20"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[25,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17877: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17875: "25"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[30,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17883: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17881: "30"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[35,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17889: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17887: "35"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[40,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17895: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17893: "40"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[45,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17901: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17899: "45"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[50,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17907: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17905: "50"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[10,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17913: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17911: "10"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17919: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17917: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17925: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17923: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17931: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17929: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17937: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17935: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17943: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17941: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17949: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17947: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17955: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17953: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17961: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17959: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17967: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17965: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[1,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17973: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17971: "1"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17979: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17977: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17985: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17983: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17991: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17989: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17997: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$17995: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18003: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18001: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18009: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18007: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18015: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18013: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18021: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18019: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18027: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18025: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18033: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18031: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18039: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18037: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18045: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18043: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18051: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18049: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18057: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18055: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18063: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18061: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18069: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000037}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18067: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18075: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18073: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18081: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18079: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18087: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18085: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18093: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18091: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18099: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18097: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18105: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18103: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18111: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18109: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18117: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18115: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18123: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000037}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18121: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18129: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18127: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18135: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18133: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18141: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18139: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18147: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18145: "0"

@Backend.cpp 427 function: call   exprTimeShift
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x1-)^2+(y0--y1-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux1[t])^2 + (uy0[t] - uy1[t])^2 == 4,
	{ux0[t] == 10*t, ux1[t] == 10, uy0[t] == t, uy1[t] == 10},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18151: (t + minus["10"])^"2" + ("10"*t + minus["10"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-10 + t)^2 + (-10 + 10*t)^2 == 4,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18170: (-10 + t)^2 + (-10 + 10*t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18169: (t + minus["10"])^"2" + ("10"*t + minus["10"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-10 + t)^2 + (-10 + 10*t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18192: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18192: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18191: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x2-)^2+(y0--y2-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux2[t])^2 + (uy0[t] - uy2[t])^2 == 4,
	{ux0[t] == 10*t, ux2[t] == 15, uy0[t] == t, uy2[t] == 15},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18220: (t + minus["15"])^"2" + ("10"*t + minus["15"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-15 + t)^2 + (-15 + 10*t)^2 == 4,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18239: (-15 + t)^2 + (-15 + 10*t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18238: (t + minus["15"])^"2" + ("10"*t + minus["15"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-15 + t)^2 + (-15 + 10*t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18261: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18261: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18260: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x3-)^2+(y0--y3-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux3[t])^2 + (uy0[t] - uy3[t])^2 == 4,
	{ux0[t] == 10*t, ux3[t] == 20, uy0[t] == t, uy3[t] == 20},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18277: (t + minus["20"])^"2" + ("10"*t + minus["20"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-20 + t)^2 + (-20 + 10*t)^2 == 4,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18296: (-20 + t)^2 + (-20 + 10*t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18295: (t + minus["20"])^"2" + ("10"*t + minus["20"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-20 + t)^2 + (-20 + 10*t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18318: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18318: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18317: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x4-)^2+(y0--y4-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux4[t])^2 + (uy0[t] - uy4[t])^2 == 4,
	{ux0[t] == 10*t, ux4[t] == 25, uy0[t] == t, uy4[t] == 25},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18334: (t + minus["25"])^"2" + ("10"*t + minus["25"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-25 + t)^2 + (-25 + 10*t)^2 == 4,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18353: (-25 + t)^2 + (-25 + 10*t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18352: (t + minus["25"])^"2" + ("10"*t + minus["25"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-25 + t)^2 + (-25 + 10*t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18375: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18375: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18374: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x5-)^2+(y0--y5-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux5[t])^2 + (uy0[t] - uy5[t])^2 == 4,
	{ux0[t] == 10*t, ux5[t] == 30, uy0[t] == t, uy5[t] == 30},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18391: (t + minus["30"])^"2" + ("10"*t + minus["30"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-30 + t)^2 + (-30 + 10*t)^2 == 4,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18410: (-30 + t)^2 + (-30 + 10*t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18409: (t + minus["30"])^"2" + ("10"*t + minus["30"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-30 + t)^2 + (-30 + 10*t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18432: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18432: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18431: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x6-)^2+(y0--y6-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux6[t])^2 + (uy0[t] - uy6[t])^2 == 4,
	{ux0[t] == 10*t, ux6[t] == 35, uy0[t] == t, uy6[t] == 35},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18448: (t + minus["35"])^"2" + ("10"*t + minus["35"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-35 + t)^2 + (-35 + 10*t)^2 == 4,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18467: (-35 + t)^2 + (-35 + 10*t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18466: (t + minus["35"])^"2" + ("10"*t + minus["35"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-35 + t)^2 + (-35 + 10*t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18489: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18489: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18488: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x7-)^2+(y0--y7-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux7[t])^2 + (uy0[t] - uy7[t])^2 == 4,
	{ux0[t] == 10*t, ux7[t] == 40, uy0[t] == t, uy7[t] == 40},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18505: (t + minus["40"])^"2" + ("10"*t + minus["40"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-40 + t)^2 + (-40 + 10*t)^2 == 4,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18524: (-40 + t)^2 + (-40 + 10*t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18523: (t + minus["40"])^"2" + ("10"*t + minus["40"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-40 + t)^2 + (-40 + 10*t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18546: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18546: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18545: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x8-)^2+(y0--y8-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux8[t])^2 + (uy0[t] - uy8[t])^2 == 4,
	{ux0[t] == 10*t, ux8[t] == 45, uy0[t] == t, uy8[t] == 45},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18562: (t + minus["45"])^"2" + ("10"*t + minus["45"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-45 + t)^2 + (-45 + 10*t)^2 == 4,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18581: (-45 + t)^2 + (-45 + 10*t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18580: (t + minus["45"])^"2" + ("10"*t + minus["45"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-45 + t)^2 + (-45 + 10*t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18603: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18603: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18602: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x9-)^2+(y0--y9-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux9[t])^2 + (uy0[t] - uy9[t])^2 == 4,
	{ux0[t] == 10*t, ux9[t] == 50, uy0[t] == t, uy9[t] == 50},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18619: (t + minus["50"])^"2" + ("10"*t + minus["50"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-50 + t)^2 + (-50 + 10*t)^2 == 4,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18638: (-50 + t)^2 + (-50 + 10*t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18637: (t + minus["50"])^"2" + ("10"*t + minus["50"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-50 + t)^2 + (-50 + 10*t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18660: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18660: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18659: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x1--x2-)^2+(y1--y2-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux1[t] - ux2[t])^2 + (uy1[t] - uy2[t])^2 == 4,
	{ux1[t] == 10, ux2[t] == 15, uy1[t] == 10, uy2[t] == 15},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18676: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18681: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18680: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18685: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18685: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18684: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x1--x3-)^2+(y1--y3-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux1[t] - ux3[t])^2 + (uy1[t] - uy3[t])^2 == 4,
	{ux1[t] == 10, ux3[t] == 20, uy1[t] == 10, uy3[t] == 20},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18688: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18693: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18692: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18697: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18697: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18696: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x1--x4-)^2+(y1--y4-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux1[t] - ux4[t])^2 + (uy1[t] - uy4[t])^2 == 4,
	{ux1[t] == 10, ux4[t] == 25, uy1[t] == 10, uy4[t] == 25},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18700: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18705: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18704: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18709: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18709: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18708: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x1--x5-)^2+(y1--y5-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux1[t] - ux5[t])^2 + (uy1[t] - uy5[t])^2 == 4,
	{ux1[t] == 10, ux5[t] == 30, uy1[t] == 10, uy5[t] == 30},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18712: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18717: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18716: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18721: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18721: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18720: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x1--x6-)^2+(y1--y6-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux1[t] - ux6[t])^2 + (uy1[t] - uy6[t])^2 == 4,
	{ux1[t] == 10, ux6[t] == 35, uy1[t] == 10, uy6[t] == 35},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18724: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18729: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18728: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18733: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18733: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18732: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x1--x7-)^2+(y1--y7-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux1[t] - ux7[t])^2 + (uy1[t] - uy7[t])^2 == 4,
	{ux1[t] == 10, ux7[t] == 40, uy1[t] == 10, uy7[t] == 40},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18736: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18741: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18740: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18745: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18745: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18744: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x1--x8-)^2+(y1--y8-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux1[t] - ux8[t])^2 + (uy1[t] - uy8[t])^2 == 4,
	{ux1[t] == 10, ux8[t] == 45, uy1[t] == 10, uy8[t] == 45},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18748: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18753: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18752: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18757: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18757: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18756: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x1--x9-)^2+(y1--y9-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux1[t] - ux9[t])^2 + (uy1[t] - uy9[t])^2 == 4,
	{ux1[t] == 10, ux9[t] == 50, uy1[t] == 10, uy9[t] == 50},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18760: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18765: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18764: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18769: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18769: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18768: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x2--x3-)^2+(y2--y3-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux2[t] - ux3[t])^2 + (uy2[t] - uy3[t])^2 == 4,
	{ux2[t] == 15, ux3[t] == 20, uy2[t] == 15, uy3[t] == 20},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18772: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18777: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18776: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18781: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18781: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18780: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x2--x4-)^2+(y2--y4-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux2[t] - ux4[t])^2 + (uy2[t] - uy4[t])^2 == 4,
	{ux2[t] == 15, ux4[t] == 25, uy2[t] == 15, uy4[t] == 25},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18784: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18789: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18788: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18793: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18793: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18792: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x2--x5-)^2+(y2--y5-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux2[t] - ux5[t])^2 + (uy2[t] - uy5[t])^2 == 4,
	{ux2[t] == 15, ux5[t] == 30, uy2[t] == 15, uy5[t] == 30},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18796: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18801: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18800: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18805: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18805: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18804: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x2--x6-)^2+(y2--y6-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux2[t] - ux6[t])^2 + (uy2[t] - uy6[t])^2 == 4,
	{ux2[t] == 15, ux6[t] == 35, uy2[t] == 15, uy6[t] == 35},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18808: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18813: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18812: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18817: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18817: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18816: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x2--x7-)^2+(y2--y7-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux2[t] - ux7[t])^2 + (uy2[t] - uy7[t])^2 == 4,
	{ux2[t] == 15, ux7[t] == 40, uy2[t] == 15, uy7[t] == 40},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18820: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18825: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18824: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18829: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18829: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18828: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x2--x8-)^2+(y2--y8-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux2[t] - ux8[t])^2 + (uy2[t] - uy8[t])^2 == 4,
	{ux2[t] == 15, ux8[t] == 45, uy2[t] == 15, uy8[t] == 45},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18832: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18837: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18836: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18841: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18841: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18840: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x2--x9-)^2+(y2--y9-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux2[t] - ux9[t])^2 + (uy2[t] - uy9[t])^2 == 4,
	{ux2[t] == 15, ux9[t] == 50, uy2[t] == 15, uy9[t] == 50},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18844: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18849: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18848: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18853: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18853: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18852: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x3--x4-)^2+(y3--y4-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux3[t] - ux4[t])^2 + (uy3[t] - uy4[t])^2 == 4,
	{ux3[t] == 20, ux4[t] == 25, uy3[t] == 20, uy4[t] == 25},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18856: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18861: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18860: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18865: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18865: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18864: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x3--x5-)^2+(y3--y5-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux3[t] - ux5[t])^2 + (uy3[t] - uy5[t])^2 == 4,
	{ux3[t] == 20, ux5[t] == 30, uy3[t] == 20, uy5[t] == 30},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18868: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18873: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18872: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18877: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18877: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18876: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x3--x6-)^2+(y3--y6-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux3[t] - ux6[t])^2 + (uy3[t] - uy6[t])^2 == 4,
	{ux3[t] == 20, ux6[t] == 35, uy3[t] == 20, uy6[t] == 35},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18880: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18885: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18884: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18889: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18889: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18888: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x3--x7-)^2+(y3--y7-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux3[t] - ux7[t])^2 + (uy3[t] - uy7[t])^2 == 4,
	{ux3[t] == 20, ux7[t] == 40, uy3[t] == 20, uy7[t] == 40},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18892: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18897: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18896: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18901: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18901: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18900: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x3--x8-)^2+(y3--y8-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux3[t] - ux8[t])^2 + (uy3[t] - uy8[t])^2 == 4,
	{ux3[t] == 20, ux8[t] == 45, uy3[t] == 20, uy8[t] == 45},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18904: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18909: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18908: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18913: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18913: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18912: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x3--x9-)^2+(y3--y9-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux3[t] - ux9[t])^2 + (uy3[t] - uy9[t])^2 == 4,
	{ux3[t] == 20, ux9[t] == 50, uy3[t] == 20, uy9[t] == 50},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18916: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18921: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18920: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18925: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18925: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18924: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x4--x5-)^2+(y4--y5-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux4[t] - ux5[t])^2 + (uy4[t] - uy5[t])^2 == 4,
	{ux4[t] == 25, ux5[t] == 30, uy4[t] == 25, uy5[t] == 30},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18928: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18933: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18932: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18937: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18937: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18936: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x4--x6-)^2+(y4--y6-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux4[t] - ux6[t])^2 + (uy4[t] - uy6[t])^2 == 4,
	{ux4[t] == 25, ux6[t] == 35, uy4[t] == 25, uy6[t] == 35},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18940: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18945: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18944: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18949: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18949: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18948: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x4--x7-)^2+(y4--y7-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux4[t] - ux7[t])^2 + (uy4[t] - uy7[t])^2 == 4,
	{ux4[t] == 25, ux7[t] == 40, uy4[t] == 25, uy7[t] == 40},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18952: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18957: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18956: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18961: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18961: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18960: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x4--x8-)^2+(y4--y8-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux4[t] - ux8[t])^2 + (uy4[t] - uy8[t])^2 == 4,
	{ux4[t] == 25, ux8[t] == 45, uy4[t] == 25, uy8[t] == 45},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18964: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18969: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18968: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18973: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18973: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18972: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x4--x9-)^2+(y4--y9-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux4[t] - ux9[t])^2 + (uy4[t] - uy9[t])^2 == 4,
	{ux4[t] == 25, ux9[t] == 50, uy4[t] == 25, uy9[t] == 50},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18976: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18981: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18980: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18985: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18985: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18984: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x5--x6-)^2+(y5--y6-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux5[t] - ux6[t])^2 + (uy5[t] - uy6[t])^2 == 4,
	{ux5[t] == 30, ux6[t] == 35, uy5[t] == 30, uy6[t] == 35},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18988: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$18993: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18992: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$18997: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$18997: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$18996: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x5--x7-)^2+(y5--y7-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux5[t] - ux7[t])^2 + (uy5[t] - uy7[t])^2 == 4,
	{ux5[t] == 30, ux7[t] == 40, uy5[t] == 30, uy7[t] == 40},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19000: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19005: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19004: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19009: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19009: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19008: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x5--x8-)^2+(y5--y8-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux5[t] - ux8[t])^2 + (uy5[t] - uy8[t])^2 == 4,
	{ux5[t] == 30, ux8[t] == 45, uy5[t] == 30, uy8[t] == 45},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19012: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19017: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19016: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19021: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19021: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19020: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x5--x9-)^2+(y5--y9-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux5[t] - ux9[t])^2 + (uy5[t] - uy9[t])^2 == 4,
	{ux5[t] == 30, ux9[t] == 50, uy5[t] == 30, uy9[t] == 50},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19024: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19029: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19028: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19033: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19033: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19032: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x6--x7-)^2+(y6--y7-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux6[t] - ux7[t])^2 + (uy6[t] - uy7[t])^2 == 4,
	{ux6[t] == 35, ux7[t] == 40, uy6[t] == 35, uy7[t] == 40},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19036: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19041: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19040: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19045: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19045: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19044: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x6--x8-)^2+(y6--y8-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux6[t] - ux8[t])^2 + (uy6[t] - uy8[t])^2 == 4,
	{ux6[t] == 35, ux8[t] == 45, uy6[t] == 35, uy8[t] == 45},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19048: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19053: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19052: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19057: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19057: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19056: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x6--x9-)^2+(y6--y9-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux6[t] - ux9[t])^2 + (uy6[t] - uy9[t])^2 == 4,
	{ux6[t] == 35, ux9[t] == 50, uy6[t] == 35, uy9[t] == 50},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19060: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19065: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19064: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19069: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19069: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19068: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x7--x8-)^2+(y7--y8-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux7[t] - ux8[t])^2 + (uy7[t] - uy8[t])^2 == 4,
	{ux7[t] == 40, ux8[t] == 45, uy7[t] == 40, uy8[t] == 45},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19072: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19077: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19076: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19081: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19081: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19080: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x7--x9-)^2+(y7--y9-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux7[t] - ux9[t])^2 + (uy7[t] - uy9[t])^2 == 4,
	{ux7[t] == 40, ux9[t] == 50, uy7[t] == 40, uy9[t] == 50},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19084: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19089: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19088: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19093: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19093: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19092: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x8--x9-)^2+(y8--y9-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux8[t] - ux9[t])^2 + (uy8[t] - uy9[t])^2 == 4,
	{ux8[t] == 45, ux9[t] == 50, uy8[t] == 45, uy9[t] == 50},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19096: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19101: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19100: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19105: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19105: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19104: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--1=-10|10*10=x0-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + ux0[t] == -10,
	{ux0[t] == 10*t},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19108: "10"*t + minus["1"] == minus["10"]

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[-1 + 10*t == -10,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19119: -1 + 10*t == -10 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19118: "10"*t + minus["1"] == minus["10"] && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + ux0[t],
	{ux0[t] == 10*t},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19132: "100" == "1" + "10"*t

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[100 == 1 + 10*t,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19143: 100 == 1 + 10*t && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19142: "1" + "10"*t == "100" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-1 + 10*t == -10 && 0 < t) || (1 + 10*t == 100 && 0 < t),
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19157: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19157: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {99/10, {t -> 99/10}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19156: {{Rational["99", "10"], 1, {True}, -1}}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x1--1=-10|10*10=x1-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + ux1[t],
	{ux1[t] == 10},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19182: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19187: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19186: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + ux1[t] == -10,
	{ux1[t] == 10},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19190: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19195: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19194: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19199: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19199: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19198: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x2--1=-10|10*10=x2-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + ux2[t] == -10,
	{ux2[t] == 15},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19202: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19207: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19206: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + ux2[t],
	{ux2[t] == 15},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19210: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19215: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19214: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19219: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19219: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19218: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x3--1=-10|10*10=x3-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + ux3[t] == -10,
	{ux3[t] == 20},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19222: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19227: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19226: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + ux3[t],
	{ux3[t] == 20},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19230: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19235: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19234: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19239: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19239: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19238: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x4--1=-10|10*10=x4-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + ux4[t] == -10,
	{ux4[t] == 25},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19242: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19247: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19246: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + ux4[t],
	{ux4[t] == 25},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19250: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19255: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19254: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19259: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19259: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19258: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x5--1=-10|10*10=x5-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + ux5[t] == -10,
	{ux5[t] == 30},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19262: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19267: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19266: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + ux5[t],
	{ux5[t] == 30},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19270: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19275: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19274: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19279: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19279: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19278: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x6--1=-10|10*10=x6-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + ux6[t] == -10,
	{ux6[t] == 35},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19282: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19287: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19286: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + ux6[t],
	{ux6[t] == 35},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19290: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19295: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19294: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19299: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19299: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19298: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x7--1=-10|10*10=x7-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + ux7[t] == -10,
	{ux7[t] == 40},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19302: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19307: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19306: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + ux7[t],
	{ux7[t] == 40},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19310: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19315: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19314: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19319: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19319: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19318: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x8--1=-10|10*10=x8-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + ux8[t] == -10,
	{ux8[t] == 45},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19322: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19327: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19326: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + ux8[t],
	{ux8[t] == 45},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19330: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19335: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19334: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19339: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19339: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19338: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x9--1=-10|10*10=x9-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + ux9[t] == -10,
	{ux9[t] == 50},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19342: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19347: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19346: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + ux9[t],
	{ux9[t] == 50},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19350: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19355: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19354: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19359: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19359: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19358: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (y0--1=-10|10*10=y0-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + uy0[t] == -10,
	{uy0[t] == t},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19362: t + minus["1"] == minus["10"]

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[-1 + t == -10,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19371: -1 + t == -10 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19370: t + minus["1"] == minus["10"] && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + uy0[t],
	{uy0[t] == t},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19382: "100" == "1" + t

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[100 == 1 + t,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19391: 100 == 1 + t && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19390: "1" + t == "100" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-1 + t == -10 && 0 < t) || (1 + t == 100 && 0 < t),
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19403: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19403: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {99, {t -> 99}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19402: {{"99", 1, {True}, -1}}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (y1--1=-10|10*10=y1-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + uy1[t] == -10,
	{uy1[t] == 10},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19427: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19432: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19431: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + uy1[t],
	{uy1[t] == 10},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19435: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19440: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19439: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19444: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19444: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19443: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (y2--1=-10|10*10=y2-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + uy2[t] == -10,
	{uy2[t] == 15},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19447: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19452: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19451: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + uy2[t],
	{uy2[t] == 15},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19455: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19460: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19459: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19464: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19464: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19463: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (y3--1=-10|10*10=y3-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + uy3[t] == -10,
	{uy3[t] == 20},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19467: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19472: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19471: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + uy3[t],
	{uy3[t] == 20},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19475: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19480: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19479: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19484: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19484: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19483: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (y4--1=-10|10*10=y4-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + uy4[t] == -10,
	{uy4[t] == 25},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19487: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19492: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19491: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + uy4[t],
	{uy4[t] == 25},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19495: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19500: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19499: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19504: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19504: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19503: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (y5--1=-10|10*10=y5-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + uy5[t] == -10,
	{uy5[t] == 30},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19507: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19512: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19511: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + uy5[t],
	{uy5[t] == 30},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19515: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19520: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19519: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19524: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19524: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19523: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (y6--1=-10|10*10=y6-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + uy6[t] == -10,
	{uy6[t] == 35},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19527: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19532: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19531: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + uy6[t],
	{uy6[t] == 35},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19535: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19540: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19539: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19544: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19544: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19543: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (y7--1=-10|10*10=y7-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + uy7[t] == -10,
	{uy7[t] == 40},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19547: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19552: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19551: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + uy7[t],
	{uy7[t] == 40},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19555: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19560: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19559: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19564: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19564: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19563: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (y8--1=-10|10*10=y8-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + uy8[t] == -10,
	{uy8[t] == 45},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19567: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19572: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19571: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + uy8[t],
	{uy8[t] == 45},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19575: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19580: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19579: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19584: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19584: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19583: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (y9--1=-10|10*10=y9-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + uy9[t] == -10,
	{uy9[t] == 50},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19587: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19592: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19591: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + uy9[t],
	{uy9[t] == 50},
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19595: False

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[False,
	0,
	True,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$19600: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19599: False

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[False,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$19604: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$19604: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19603: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 1717 function: make_next_todo   candidate.time: 99/10
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
compareMinTime[99/10,
	99,
	True,
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19607: {{True}, {False}, {False}}

@Backend.cpp 427 function: call   compareMinTime
@PhaseSimulator.cpp 1717 function: make_next_todo   candidate.time: 99
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
simplify[99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19614: 1 + SimplifyCount[10] + SimplifyCount[99]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1 + SimplifyCount[10] + SimplifyCount[99]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplify", 0.000024}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19612: Rational["99", "10"]

@Backend.cpp 427 function: call   simplify
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[10*t,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[99]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19620: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000026}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19618: "99"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[10,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19626: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19624: "10"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[15,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19632: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19630: "15"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[20,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19638: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19636: "20"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[25,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19644: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19642: "25"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[30,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19650: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19648: "30"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[35,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19656: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19654: "35"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[40,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19662: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19660: "40"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[45,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19668: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19666: "45"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[50,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19674: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19672: "50"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[t,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19680: 1 + SimplifyCount[10] + SimplifyCount[99]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1 + SimplifyCount[10] + SimplifyCount[99]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19678: Rational["99", "10"]

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[10,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19686: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19684: "10"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[15,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19692: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19690: "15"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[20,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19698: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19696: "20"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[25,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19704: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19702: "25"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[30,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19710: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19708: "30"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[35,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19716: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19714: "35"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[40,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19722: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19720: "40"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[45,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19728: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19726: "45"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[50,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19734: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19732: "50"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[10,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19740: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19738: "10"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19746: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19744: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19752: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000037}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19750: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19758: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19756: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19764: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19762: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19770: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19768: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19776: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19774: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19782: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19780: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19788: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19786: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19794: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000135}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19792: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[1,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19801: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19799: "1"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19807: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19805: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19813: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19811: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19819: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19817: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19825: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19823: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19831: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19829: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19837: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19835: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19843: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19841: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19849: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19847: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19855: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19853: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19861: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19859: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19867: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19865: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19873: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19871: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19879: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19877: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19885: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19883: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19891: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19889: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19897: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19895: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19903: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19901: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19909: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19907: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19915: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19913: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19921: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19919: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19927: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19925: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19933: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19931: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19939: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19937: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19945: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19943: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19951: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19949: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19957: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19955: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19963: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19961: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19969: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19967: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19975: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19973: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@Simulator.cpp 185 function: process_one_todo   
--- Result Phase ---
%% PhaseType: 2
%% id: 2
%% step: 1
%% parent_id:1
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: 0
%% end_time: 99/10
--- variable map ---
x0 <=> 10*t
x1 <=> 10
x2 <=> 15
x3 <=> 20
x4 <=> 25
x5 <=> 30
x6 <=> 35
x7 <=> 40
x8 <=> 45
x9 <=> 50
y0 <=> t
y1 <=> 10
y2 <=> 15
y3 <=> 20
y4 <=> 25
y5 <=> 30
y6 <=> 35
y7 <=> 40
y8 <=> 45
y9 <=> 50
x0' <=> 10
x1' <=> 0
x2' <=> 0
x3' <=> 0
x4' <=> 0
x5' <=> 0
x6' <=> 0
x7' <=> 0
x8' <=> 0
x9' <=> 0
y0' <=> 1
y1' <=> 0
y2' <=> 0
y3' <=> 0
y4' <=> 0
y5' <=> 0
y6' <=> 0
y7' <=> 0
y8' <=> 0
y9' <=> 0
x0'' <=> 0
x1'' <=> 0
x2'' <=> 0
x3'' <=> 0
x4'' <=> 0
x5'' <=> 0
x6'' <=> 0
x7'' <=> 0
x8'' <=> 0
x9'' <=> 0
y0'' <=> 0
y1'' <=> 0
y2'' <=> 0
y3'' <=> 0
y4'' <=> 0
y5'' <=> 0
y6'' <=> 0
y7'' <=> 0
y8'' <=> 0
y9'' <=> 0

--- parameter constraint ---
{}

@SequentialSimulator.cpp 50 function: dfs   *current: %% PhaseType: 2
%% id: 2
%% step: 1
%% parent_id:1
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: 0
%% end_time: 99/10
--- variable map ---
x0 <=> 10*t
x1 <=> 10
x2 <=> 15
x3 <=> 20
x4 <=> 25
x5 <=> 30
x6 <=> 35
x7 <=> 40
x8 <=> 45
x9 <=> 50
y0 <=> t
y1 <=> 10
y2 <=> 15
y3 <=> 20
y4 <=> 25
y5 <=> 30
y6 <=> 35
y7 <=> 40
y8 <=> 45
y9 <=> 50
x0' <=> 10
x1' <=> 0
x2' <=> 0
x3' <=> 0
x4' <=> 0
x5' <=> 0
x6' <=> 0
x7' <=> 0
x8' <=> 0
x9' <=> 0
y0' <=> 1
y1' <=> 0
y2' <=> 0
y3' <=> 0
y4' <=> 0
y5' <=> 0
y6' <=> 0
y7' <=> 0
y8' <=> 0
y9' <=> 0
x0'' <=> 0
x1'' <=> 0
x2'' <=> 0
x3'' <=> 0
x4'' <=> 0
x5'' <=> 0
x6'' <=> 0
x7'' <=> 0
x8'' <=> 0
x9'' <=> 0
y0'' <=> 0
y1'' <=> 0
y2'' <=> 0
y3'' <=> 0
y4'' <=> 0
y5'' <=> 0
y6'' <=> 0
y7'' <=> 0
y8'' <=> 0
y9'' <=> 0

--- parameter constraint ---
{}

@Simulator.cpp 165 function: process_one_todo   
--- Current Todo ---
%% PhaseType: 1
%% id: 3
%% step: 2
%% parent_id:2
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: 99/10
--- variable map ---

--- parameter constraint ---
{}

@Simulator.cpp 166 function: process_one_todo   
--- prev map ---
x0 <=> 99
x1 <=> 10
x2 <=> 15
x3 <=> 20
x4 <=> 25
x5 <=> 30
x6 <=> 35
x7 <=> 40
x8 <=> 45
x9 <=> 50
y0 <=> 99/10
y1 <=> 10
y2 <=> 15
y3 <=> 20
y4 <=> 25
y5 <=> 30
y6 <=> 35
y7 <=> 40
y8 <=> 45
y9 <=> 50
x0' <=> 10
x1' <=> 0
x2' <=> 0
x3' <=> 0
x4' <=> 0
x5' <=> 0
x6' <=> 0
x7' <=> 0
x8' <=> 0
x9' <=> 0
y0' <=> 1
y1' <=> 0
y2' <=> 0
y3' <=> 0
y4' <=> 0
y5' <=> 0
y6' <=> 0
y7' <=> 0
y8' <=> 0
y9' <=> 0
x0'' <=> 0
x1'' <=> 0
x2'' <=> 0
x3'' <=> 0
x4'' <=> 0
x5'' <=> 0
x6'' <=> 0
x7'' <=> 0
x8'' <=> 0
x9'' <=> 0
y0'' <=> 0
y1'' <=> 0
y2'' <=> 0
y3'' <=> 0
y4'' <=> 0
y5'' <=> 0
y6'' <=> 0
y7'' <=> 0
y8'' <=> 0
y9'' <=> 0

@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
setCurrentTime[99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19979: Null

@Backend.cpp 427 function: call   setCurrentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19981: Null

@Backend.cpp 427 function: call   resetConstraint
@PhaseSimulator.cpp 162 function: make_results_from_todo   *todo: %% PhaseType: 1
%% id: 3
%% step: 2
%% parent_id:2
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: 99/10
--- variable map ---

--- parameter constraint ---
{}

@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
clearPrevConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19983: Null

@Backend.cpp 427 function: call   clearPrevConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px0, 0],
	99]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19985: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px1, 0],
	10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19987: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px2, 0],
	15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19989: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px3, 0],
	20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19991: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px4, 0],
	25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19993: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px5, 0],
	30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19995: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px6, 0],
	35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19997: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px7, 0],
	40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$19999: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px8, 0],
	45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20001: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px9, 0],
	50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20003: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py0, 0],
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20005: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py1, 0],
	10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20007: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py2, 0],
	15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20009: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py3, 0],
	20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20011: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py4, 0],
	25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20013: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py5, 0],
	30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20015: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py6, 0],
	35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20017: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py7, 0],
	40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20019: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py8, 0],
	45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20021: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py9, 0],
	50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20023: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px0, 1],
	10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20025: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px1, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20027: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px2, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20029: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px3, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20031: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px4, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20033: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px5, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20035: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px6, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20037: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px7, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20039: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px8, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20041: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px9, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20043: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py0, 1],
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20045: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py1, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20047: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py2, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20049: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py3, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20051: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py4, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20053: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py5, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20055: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py6, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20057: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py7, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20059: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py8, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20061: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py9, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20063: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px0, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20065: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px1, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20067: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px2, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20069: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px3, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20071: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px4, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20073: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px5, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20075: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px6, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20077: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px7, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20079: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px8, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20081: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px9, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20083: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py0, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20085: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py1, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20087: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py2, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20089: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py3, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20091: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py4, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20093: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py5, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20095: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py6, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20097: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py7, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20099: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py8, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20101: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py9, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20103: Null

@Backend.cpp 427 function: call   addPrevEqual
@PhaseSimulator.cpp 199 function: make_results_from_todo   parameter_cons: {}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addParameterConstraint[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pConstraint", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pCons", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20105: Null

@Backend.cpp 427 function: call   addParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addParameterConstraint[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pConstraint", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pCons", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20107: Null

@Backend.cpp 427 function: call   addParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addAssumption[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"as in addAssumption:", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20109: Null

@Backend.cpp 427 function: call   addAssumption
@PhaseSimulator.cpp 326 function: simulate_ms   
--- next unadopted module set ---

@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0'=-1*x0'-}
@ConsistencyChecker.cpp 394 function: check_consistency   get_infix_string(ask): (x0--1=-10|10*10=x0-+1)=>x0'=-1*x0'-
@ConsistencyChecker.cpp 398 function: check_consistency   related[1/1]: {x0''=0, x0'=-1*x0'-}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20111: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0,
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20113: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][dx0],
	prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20116: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][dx0] == 0 && Derivative[1][dx0] == -prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx0] == 0 && Derivative[1][dx0] == -prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20121: SimplifyCount[And] + SimplifyCount[Derivative[1][dx0] == -prev[px0, 1]] + SimplifyCount[Derivative[2][dx0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[1][dx0] == -prev[px0, 1]] + SimplifyCount[Derivative[2][dx0] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.001198}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20119: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[Derivative[2][dx0] == 0 && prev[px0, 1] + Derivative[1][dx0] == 0,
	ux0 == prev[px0, 0] && Derivative[1][dx0] == prev[px0, 1],
	True,
	True,
	{prev[px0, 0] -> 99, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 99/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20130: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[2*prev[px0, 1] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20132: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[2*prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx0]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[2*prev[px0, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 2, 0.000278}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$20134: {prev[px0, 1] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20148: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[False]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20150: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx0]]}, {1, 1}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 2, 0.000108}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$20129: False, resultConstraint: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpTrue$20129: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$20129: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20128: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@ConsistencyChecker.cpp 299 function: check_consistency_foreach   
@PhaseSimulator.cpp 359 function: simulate_ms   INCONSISTENT: {}
@IncrementalModuleSet.cpp 243 function: generate_new_ms   %% inconsistent module set : {CONST(x0), WALL(x0,1)}
@IncrementalModuleSet.cpp 249 function: generate_new_ms   %% maximal consistent module set : 
@IncrementalModuleSet.cpp 39 function: get_removable_module_sets   %% candidate modules : {CONST(x0), WALL(x0,1)}

@IncrementalModuleSet.cpp 40 function: get_removable_module_sets   %% current modules : {}

@IncrementalModuleSet.cpp 86 function: get_removable_module_sets   %% removable modules : {CONST(x0)} , 

@IncrementalModuleSet.cpp 285 function: generate_new_ms   %% new ms : {CONST(x0)}
@PhaseSimulator.cpp 326 function: simulate_ms   
--- next unadopted module set ---
CONST(x0).

@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {CONST(x0).
, x0'=-1*x0'-}
@ConsistencyChecker.cpp 394 function: check_consistency   get_infix_string(ask): (x0--1=-10|10*10=x0-+1)=>x0'=-1*x0'-
@ConsistencyChecker.cpp 398 function: check_consistency   related[1/1]: {x0'=-1*x0'-}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20308: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0,
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20310: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[1][dx0] == -prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx0] == -prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20315: SimplifyCount[Equal] + SimplifyCount[-prev[px0, 1]] + SimplifyCount[Derivative[1][dx0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[Equal] + SimplifyCount[-prev[px0, 1]] + SimplifyCount[Derivative[1][dx0]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000061}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20313: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[prev[px0, 1] + Derivative[1][dx0] == 0,
	ux0 == prev[px0, 0],
	True,
	True,
	{prev[px0, 0] -> 99, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 99/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[prev[px0, 1] + Derivative[1][dx0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20320: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[prev[px0, 1] + Derivative[1][dx0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[prev[px0, 1] + Derivative[1][dx0]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.000058}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$20322: {prev[px0, 1] + Derivative[1][dx0] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx0] == -10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20323: SimplifyCount[-10] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[-10] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx0]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.000313}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$20319: True, resultConstraint: Derivative[1][dx0] == -10

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$20319: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20318: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[Derivative[1][dx0] == -10,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$20333[[i$20333]]: Derivative[1][dx0] == -10, newVars$20333[[1]]: Derivative[1][dx0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$20333: Derivative[1][dx0] == -10

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$20332: Derivative[1][dx0] == -10, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{Derivative[1][dx0] == -10}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$20332: {{{{dx0, 1}, 0, minus["10"]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20331: {{{{dx0, 1}, 0, minus["10"]}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20338: 496

@Backend.cpp 427 function: call   getSizeOfConstraint
@PhaseSimulator.cpp 369 function: simulate_ms   CONSISTENT: {Constraint[ConstraintCall<CONST(Variable[x0])>[Always[Equal[Differential[Differential[Variable[x0]]],Number[0]]]]]}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getParameterConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20340: {True}

@Backend.cpp 427 function: call   getParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exactlyEqual[-10,
	10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20343: False

@Backend.cpp 427 function: call   exactlyEqual
@PhaseSimulator.cpp 1557 function: make_next_todo   *phase: %% PhaseType: 1
%% id: 3
%% step: 2
%% parent_id:2
%% unadopted modules: {CONST(x0)}
%% inconsistent modules: {CONST(x0), WALL(x0,1)}
%% inconsistent constraints: {x0''=0, x0'=-1*x0'-}
%% positive_asks
(x0--1=-10|10*10=x0-+1)=>x0'=-1*x0'-
%% negative_asks
%% current_time: 99/10
--- variable map ---
x0' <=> -10

--- parameter constraint ---
{}

@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
removeRedundantParameters[99/10,
	0,
	{ux0 == 99, ux1 == 10, ux2 == 15, ux3 == 20, ux4 == 25, ux5 == 30, ux6 == 35, ux7 == 40, ux8 == 45, ux9 == 50, uy0 == 99/10, uy1 == 10, uy2 == 15, uy3 == 20, uy4 == 25, uy5 == 30, uy6 == 35, uy7 == 40, uy8 == 45, uy9 == 50, Derivative[1][dx0] == -10, Derivative[1][dx1] == 0, Derivative[1][dx2] == 0, Derivative[1][dx3] == 0, Derivative[1][dx4] == 0, Derivative[1][dx5] == 0, Derivative[1][dx6] == 0, Derivative[1][dx7] == 0, Derivative[1][dx8] == 0, Derivative[1][dx9] == 0, Derivative[1][dy0] == 1, Derivative[1][dy1] == 0, Derivative[1][dy2] == 0, Derivative[1][dy3] == 0, Derivative[1][dy4] == 0, Derivative[1][dy5] == 0, Derivative[1][dy6] == 0, Derivative[1][dy7] == 0, Derivative[1][dy8] == 0, Derivative[1][dy9] == 0, Derivative[2][dx1] == 0, Derivative[2][dx2] == 0, Derivative[2][dx3] == 0, Derivative[2][dx4] == 0, Derivative[2][dx5] == 0, Derivative[2][dx6] == 0, Derivative[2][dx7] == 0, Derivative[2][dx8] == 0, Derivative[2][dx9] == 0, Derivative[2][dy0] == 0, Derivative[2][dy1] == 0, Derivative[2][dy2] == 0, Derivative[2][dy3] == 0, Derivative[2][dy4] == 0, Derivative[2][dy5] == 0, Derivative[2][dy6] == 0, Derivative[2][dy7] == 0, Derivative[2][dy8] == 0, Derivative[2][dy9] == 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: parsInVM$20346: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: redundantPars$20346: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20345: {True}

@Backend.cpp 427 function: call   removeRedundantParameters
@Simulator.cpp 185 function: process_one_todo   
--- Result Phase ---
%% PhaseType: 1
%% id: 3
%% step: 2
%% parent_id:2
%% unadopted modules: {CONST(x0)}
%% inconsistent modules: {CONST(x0), WALL(x0,1)}
%% inconsistent constraints: {x0''=0, x0'=-1*x0'-}
%% positive_asks
(x0--1=-10|10*10=x0-+1)=>x0'=-1*x0'-
%% negative_asks
%% current_time: 99/10
%% end_time: 99/10
--- variable map ---
x0 <=> 99
x1 <=> 10
x2 <=> 15
x3 <=> 20
x4 <=> 25
x5 <=> 30
x6 <=> 35
x7 <=> 40
x8 <=> 45
x9 <=> 50
y0 <=> 99/10
y1 <=> 10
y2 <=> 15
y3 <=> 20
y4 <=> 25
y5 <=> 30
y6 <=> 35
y7 <=> 40
y8 <=> 45
y9 <=> 50
x0' <=> -10
x1' <=> 0
x2' <=> 0
x3' <=> 0
x4' <=> 0
x5' <=> 0
x6' <=> 0
x7' <=> 0
x8' <=> 0
x9' <=> 0
y0' <=> 1
y1' <=> 0
y2' <=> 0
y3' <=> 0
y4' <=> 0
y5' <=> 0
y6' <=> 0
y7' <=> 0
y8' <=> 0
y9' <=> 0
x1'' <=> 0
x2'' <=> 0
x3'' <=> 0
x4'' <=> 0
x5'' <=> 0
x6'' <=> 0
x7'' <=> 0
x8'' <=> 0
x9'' <=> 0
y0'' <=> 0
y1'' <=> 0
y2'' <=> 0
y3'' <=> 0
y4'' <=> 0
y5'' <=> 0
y6'' <=> 0
y7'' <=> 0
y8'' <=> 0
y9'' <=> 0

--- parameter constraint ---
{}

@SequentialSimulator.cpp 50 function: dfs   *current: %% PhaseType: 1
%% id: 3
%% step: 2
%% parent_id:2
%% unadopted modules: {CONST(x0)}
%% inconsistent modules: {CONST(x0), WALL(x0,1)}
%% inconsistent constraints: {x0''=0, x0'=-1*x0'-}
%% positive_asks
(x0--1=-10|10*10=x0-+1)=>x0'=-1*x0'-
%% negative_asks
%% current_time: 99/10
%% end_time: 99/10
--- variable map ---
x0 <=> 99
x1 <=> 10
x2 <=> 15
x3 <=> 20
x4 <=> 25
x5 <=> 30
x6 <=> 35
x7 <=> 40
x8 <=> 45
x9 <=> 50
y0 <=> 99/10
y1 <=> 10
y2 <=> 15
y3 <=> 20
y4 <=> 25
y5 <=> 30
y6 <=> 35
y7 <=> 40
y8 <=> 45
y9 <=> 50
x0' <=> -10
x1' <=> 0
x2' <=> 0
x3' <=> 0
x4' <=> 0
x5' <=> 0
x6' <=> 0
x7' <=> 0
x8' <=> 0
x9' <=> 0
y0' <=> 1
y1' <=> 0
y2' <=> 0
y3' <=> 0
y4' <=> 0
y5' <=> 0
y6' <=> 0
y7' <=> 0
y8' <=> 0
y9' <=> 0
x1'' <=> 0
x2'' <=> 0
x3'' <=> 0
x4'' <=> 0
x5'' <=> 0
x6'' <=> 0
x7'' <=> 0
x8'' <=> 0
x9'' <=> 0
y0'' <=> 0
y1'' <=> 0
y2'' <=> 0
y3'' <=> 0
y4'' <=> 0
y5'' <=> 0
y6'' <=> 0
y7'' <=> 0
y8'' <=> 0
y9'' <=> 0

--- parameter constraint ---
{}

@Simulator.cpp 165 function: process_one_todo   
--- Current Todo ---
%% PhaseType: 2
%% id: 4
%% step: 3
%% parent_id:3
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: 99/10
--- variable map ---

--- parameter constraint ---
{}

@Simulator.cpp 166 function: process_one_todo   
--- prev map ---

@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20350: Null

@Backend.cpp 427 function: call   resetConstraint
@PhaseSimulator.cpp 162 function: make_results_from_todo   *todo: %% PhaseType: 2
%% id: 4
%% step: 3
%% parent_id:3
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: 99/10
--- variable map ---

--- parameter constraint ---
{}

@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
clearPrevConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20352: Null

@Backend.cpp 427 function: call   clearPrevConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px0, 0],
	99]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20354: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px1, 0],
	10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20356: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px2, 0],
	15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20358: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px3, 0],
	20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20360: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px4, 0],
	25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20362: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px5, 0],
	30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20364: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px6, 0],
	35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20366: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px7, 0],
	40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20368: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px8, 0],
	45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20370: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px9, 0],
	50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20372: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py0, 0],
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20374: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py1, 0],
	10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20376: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py2, 0],
	15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20378: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py3, 0],
	20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20380: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py4, 0],
	25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20382: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py5, 0],
	30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20384: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py6, 0],
	35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20386: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py7, 0],
	40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20388: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py8, 0],
	45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20390: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py9, 0],
	50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20392: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px0, 1],
	-10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20394: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px1, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20396: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px2, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20398: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px3, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20400: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px4, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20402: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px5, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20404: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px6, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20406: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px7, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20408: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px8, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20410: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px9, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20412: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py0, 1],
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20414: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py1, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20416: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py2, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20418: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py3, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20420: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py4, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20422: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py5, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20424: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py6, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20426: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py7, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20428: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py8, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20430: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py9, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20432: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px1, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20434: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px2, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20436: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px3, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20438: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px4, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20440: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px5, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20442: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px6, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20444: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px7, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20446: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px8, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20448: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px9, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20450: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py0, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20452: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py1, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20454: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py2, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20456: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py3, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20458: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py4, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20460: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py5, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20462: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py6, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20464: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py7, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20466: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py8, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20468: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py9, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20470: Null

@Backend.cpp 427 function: call   addPrevEqual
@PhaseSimulator.cpp 199 function: make_results_from_todo   parameter_cons: {}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addParameterConstraint[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pConstraint", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pCons", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20472: Null

@Backend.cpp 427 function: call   addParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addParameterConstraint[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pConstraint", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pCons", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20474: Null

@Backend.cpp 427 function: call   addParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addAssumption[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"as in addAssumption:", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20476: Null

@Backend.cpp 427 function: call   addAssumption
@PhaseSimulator.cpp 326 function: simulate_ms   
--- next unadopted module set ---

@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {CONST(x0).
, x0'=-1*x0'-}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x0--1=-10|10*10=x0-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20478: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0[0],
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20480: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux0][0],
	prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20483: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux0][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux0][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20488: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux0][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux0][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000071}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20486: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + ux0[t] == -10 || 100 == 1 + ux0[t]) && Derivative[2][ux0][t] == 0,
	ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 99, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 99/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> -10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + ux0[t] == 0 || ux0[t] == 99) && Derivative[2][ux0][t] == 0,
	{prev[px0, 0] -> 99, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 99/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> -10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$20493: {Derivative[2][ux0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$20493: {ux0[t] -> 99 - 10*t}, resultCons$20493: (9 + ux0[t] == 0 || ux0[t] == 99) && t > 0,                                                                                                                                                                                                                          99
{prev[px0, 0] -> 99, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> --, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> -10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}
                                                                                                                                                                                                                         10: {prev[px0, 0] -> 99, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 99/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> -10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$20492: {solved, or[and[5*t == 54]], {ux0[t] -> 99 - 10*t}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[5*t == 54]], {ux0[t] -> 99 - 10*t}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux0[t] -> 99 - 10*t, Derivative[1][ux0][t] -> -10, Derivative[2][ux0][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$20492: {ux0[t] -> 99 - 10*t, Derivative[1][ux0][t] -> -10, Derivative[2][ux0][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + ux0[t] == -10 || 100 == 1 + ux0[t]) && Derivative[2][ux0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 99, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 99/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> -10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux0[0] == 99 && Derivative[1][ux0][0] == -10}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux0[t] -> 99 - 10*t, Derivative[1][ux0][t] -> -10, Derivative[2][ux0][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {99 == prev[px0, 0] && -10 == prev[px0, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$20492: or[and[5*t == 54]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[5*t == 54,
	{ux0[0] -> 99, Derivative[1][ux0][0] -> -10},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: lhs$20680: -54

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: eqSol$20680: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$20492}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20491: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x0--1=-10|10*10=x0-+1)=>x0'=-1*x0'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {CONST(x0).
, x0'=-1*x0'-}
@ConsistencyChecker.cpp 398 function: check_consistency   related[1/1]: {x0''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20687: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0[0],
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20689: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux0][0],
	prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20692: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux0][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux0][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20697: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux0][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux0][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000046}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20695: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][ux0][t] == 0,
	ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> 99, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 99/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> -10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux0][t] == 0,
	{prev[px0, 0] -> 99, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 99/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> -10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$20702: {Derivative[2][ux0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$20702: {ux0[t] -> 99 - 10*t}, resultCons$20702: t > 0,                                                                                                                                                                                                                          99
{prev[px0, 0] -> 99, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> --, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> -10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}
                                                                                                                                                                                                                         10: {prev[px0, 0] -> 99, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 99/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> -10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$20701: {solved, or[and[]], {ux0[t] -> 99 - 10*t}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux0[t] -> 99 - 10*t}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux0[t] -> 99 - 10*t, Derivative[1][ux0][t] -> -10, Derivative[2][ux0][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$20701: {ux0[t] -> 99 - 10*t, Derivative[1][ux0][t] -> -10, Derivative[2][ux0][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][ux0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> 99, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 99/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> -10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux0[0] == 99 && Derivative[1][ux0][0] == -10}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux0[t] -> 99 - 10*t, Derivative[1][ux0][t] -> -10, Derivative[2][ux0][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {99 == prev[px0, 0] && -10 == prev[px0, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$20701: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$20701}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20700: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][ux0][t] == 0,
	{prev[px0, 0] -> 99, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 99/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> -10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], Derivative[1][ux0][t], Derivative[2][ux0][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux0][t] == 0,
	{prev[px0, 0] -> 99, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 99/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> -10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$20893: {Derivative[2][ux0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$20893: {ux0[t] -> 99 - 10*t}, resultCons$20893: t > 0,                                                                                                                                                                                                                          99
{prev[px0, 0] -> 99, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> --, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> -10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}
                                                                                                                                                                                                                         10: {prev[px0, 0] -> 99, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 99/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> -10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux0[t] -> 99 - 10*t}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20891: {{{{ux0, 0}, 0, "99" + t*minus["10"]}, {{ux0, 1}, 0, minus["10"]}, {{ux0, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20910: 792

@Backend.cpp 427 function: call   getSizeOfConstraint
@PhaseSimulator.cpp 369 function: simulate_ms   CONSISTENT: {}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getParameterConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20912: {True}

@Backend.cpp 427 function: call   getParameterConstraint
@PhaseSimulator.cpp 1557 function: make_next_todo   *phase: %% PhaseType: 2
%% id: 4
%% step: 3
%% parent_id:3
%% unadopted modules: {}
%% positive_asks
%% negative_asks
(x0--1=-10|10*10=x0-+1)=>x0'=-1*x0'-
%% current_time: 99/10
--- variable map ---
x0 <=> 99+t*(-10)
x0' <=> -10
x0'' <=> 0

--- parameter constraint ---
{}

@PhaseSimulator.cpp 666 function: replace_prev2parameter   phase.get_parameter_constraint(): {}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForParameter[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20915: Null

@Backend.cpp 427 function: call   resetConstraintForParameter
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[99 - 10*t,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[99 - 10*(-99/10 + t)]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20919: SimplifyCount[99] + SimplifyCount[Plus] + SimplifyCount[-10*(-99/10 + t)]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[99] + SimplifyCount[Plus] + SimplifyCount[-10*(-99/10 + t)]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000449}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20917: "198" + t*minus["10"]

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[-10,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[-10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20929: 3

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 3}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000039}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20927: minus["10"]

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20935: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000038}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20933: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[10,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20941: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000029}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20939: "10"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[15,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20947: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000038}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20945: "15"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[20,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20953: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000038}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20951: "20"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[25,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20959: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20957: "25"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[30,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20965: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20963: "30"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[35,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20971: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20969: "35"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[40,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20977: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000037}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20975: "40"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[45,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20983: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20981: "45"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[50,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20989: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20987: "50"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[t,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[99/10 + t]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20995: SimplifyCount[99/10] + SimplifyCount[Plus] + SimplifyCount[t]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[99/10] + SimplifyCount[Plus] + SimplifyCount[t]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000275}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$20993: t + Rational["99", "10"]

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[10,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21003: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000028}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21001: "10"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[15,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21009: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000037}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21007: "15"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[20,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21015: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000037}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21013: "20"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[25,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21021: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21019: "25"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[30,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21027: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21025: "30"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[35,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21033: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21031: "35"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[40,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21039: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21037: "40"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[45,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21045: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21043: "45"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[50,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21051: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21049: "50"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21057: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21055: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21063: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21061: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21069: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21067: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21075: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21073: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21081: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21079: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21087: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21085: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21093: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21091: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21099: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21097: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21105: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21103: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[1,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21111: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21109: "1"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21117: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21115: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21123: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21121: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21129: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21127: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21135: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21133: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21141: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00004}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21139: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21147: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21145: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21153: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21151: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21159: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21157: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21165: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21163: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21171: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21169: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21177: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21175: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21183: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21181: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21189: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21187: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21195: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21193: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21201: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21199: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21207: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21205: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21213: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21211: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21219: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21217: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21225: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21223: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21231: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21229: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21237: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21235: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21243: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21241: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21249: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21247: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21255: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21253: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21261: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21259: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21267: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21265: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21273: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21271: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21279: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21277: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
productWithGlobalParameterConstraint[True,
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21283: {True}

@Backend.cpp 427 function: call   productWithGlobalParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[-1 + t == -10 && 0 < t,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[89/10 + t == -10 && 0 < 99/10 + t]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21288: SimplifyCount[And] + SimplifyCount[89/10 + t == -10] + SimplifyCount[0 < 99/10 + t]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[89/10 + t == -10] + SimplifyCount[0 < 99/10 + t]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.002271}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21286: False

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[1 + t == 100 && 0 < t,
	-99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[109/10 + t == 100 && 0 < 99/10 + t]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21298: SimplifyCount[And] + SimplifyCount[109/10 + t == 100] + SimplifyCount[0 < 99/10 + t]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[109/10 + t == 100] + SimplifyCount[0 < 99/10 + t]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.001406}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21296: "10"*t == "891"

@Backend.cpp 427 function: call   exprTimeShift
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x1-)^2+(y0--y1-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux1[t])^2 + (uy0[t] - uy1[t])^2 == 4,
	{ux0[t] == 99 - 10*t, ux1[t] == 10, uy0[t] == 99/10 + t, uy1[t] == 10},
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21310: ("89" + t*minus["10"])^"2" + (t + Rational[minus["1"], "10"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(89 - 10*t)^2 + (-1/10 + t)^2 == 4,
	0,
	True,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$21329: (89 - 10*t)^2 + (-1/10 + t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21328: ("89" + t*minus["10"])^"2" + (t + Rational[minus["1"], "10"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(89 - 10*t)^2 + (-1/10 + t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$21351: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$21351: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21350: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x2-)^2+(y0--y2-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux2[t])^2 + (uy0[t] - uy2[t])^2 == 4,
	{ux0[t] == 99 - 10*t, ux2[t] == 15, uy0[t] == 99/10 + t, uy2[t] == 15},
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21367: ("84" + t*minus["10"])^"2" + (t + Rational[minus["51"], "10"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(84 - 10*t)^2 + (-51/10 + t)^2 == 4,
	0,
	True,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$21386: (84 - 10*t)^2 + (-51/10 + t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21385: ("84" + t*minus["10"])^"2" + (t + Rational[minus["51"], "10"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(84 - 10*t)^2 + (-51/10 + t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$21408: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$21408: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21407: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x3-)^2+(y0--y3-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux3[t])^2 + (uy0[t] - uy3[t])^2 == 4,
	{ux0[t] == 99 - 10*t, ux3[t] == 20, uy0[t] == 99/10 + t, uy3[t] == 20},
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21424: ("79" + t*minus["10"])^"2" + (t + Rational[minus["101"], "10"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(79 - 10*t)^2 + (-101/10 + t)^2 == 4,
	0,
	True,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$21443: (79 - 10*t)^2 + (-101/10 + t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21442: ("79" + t*minus["10"])^"2" + (t + Rational[minus["101"], "10"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(79 - 10*t)^2 + (-101/10 + t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$21465: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$21465: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21464: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x4-)^2+(y0--y4-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux4[t])^2 + (uy0[t] - uy4[t])^2 == 4,
	{ux0[t] == 99 - 10*t, ux4[t] == 25, uy0[t] == 99/10 + t, uy4[t] == 25},
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21481: ("74" + t*minus["10"])^"2" + (t + Rational[minus["151"], "10"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(74 - 10*t)^2 + (-151/10 + t)^2 == 4,
	0,
	True,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$21500: (74 - 10*t)^2 + (-151/10 + t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21499: ("74" + t*minus["10"])^"2" + (t + Rational[minus["151"], "10"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(74 - 10*t)^2 + (-151/10 + t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$21522: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$21522: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21521: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x5-)^2+(y0--y5-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux5[t])^2 + (uy0[t] - uy5[t])^2 == 4,
	{ux0[t] == 99 - 10*t, ux5[t] == 30, uy0[t] == 99/10 + t, uy5[t] == 30},
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21538: ("69" + t*minus["10"])^"2" + (t + Rational[minus["201"], "10"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(69 - 10*t)^2 + (-201/10 + t)^2 == 4,
	0,
	True,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$21557: (69 - 10*t)^2 + (-201/10 + t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21556: ("69" + t*minus["10"])^"2" + (t + Rational[minus["201"], "10"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(69 - 10*t)^2 + (-201/10 + t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$21579: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$21579: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21578: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x6-)^2+(y0--y6-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux6[t])^2 + (uy0[t] - uy6[t])^2 == 4,
	{ux0[t] == 99 - 10*t, ux6[t] == 35, uy0[t] == 99/10 + t, uy6[t] == 35},
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21595: ("64" + t*minus["10"])^"2" + (t + Rational[minus["251"], "10"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(64 - 10*t)^2 + (-251/10 + t)^2 == 4,
	0,
	True,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$21614: (64 - 10*t)^2 + (-251/10 + t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21613: ("64" + t*minus["10"])^"2" + (t + Rational[minus["251"], "10"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(64 - 10*t)^2 + (-251/10 + t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$21636: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$21636: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21635: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x7-)^2+(y0--y7-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux7[t])^2 + (uy0[t] - uy7[t])^2 == 4,
	{ux0[t] == 99 - 10*t, ux7[t] == 40, uy0[t] == 99/10 + t, uy7[t] == 40},
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21652: ("59" + t*minus["10"])^"2" + (t + Rational[minus["301"], "10"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(59 - 10*t)^2 + (-301/10 + t)^2 == 4,
	0,
	True,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$21671: (59 - 10*t)^2 + (-301/10 + t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21670: ("59" + t*minus["10"])^"2" + (t + Rational[minus["301"], "10"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(59 - 10*t)^2 + (-301/10 + t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$21693: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$21693: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21692: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x8-)^2+(y0--y8-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux8[t])^2 + (uy0[t] - uy8[t])^2 == 4,
	{ux0[t] == 99 - 10*t, ux8[t] == 45, uy0[t] == 99/10 + t, uy8[t] == 45},
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21709: ("54" + t*minus["10"])^"2" + (t + Rational[minus["351"], "10"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(54 - 10*t)^2 + (-351/10 + t)^2 == 4,
	0,
	True,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$21728: (54 - 10*t)^2 + (-351/10 + t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21727: ("54" + t*minus["10"])^"2" + (t + Rational[minus["351"], "10"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(54 - 10*t)^2 + (-351/10 + t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$21750: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$21750: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21749: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x9-)^2+(y0--y9-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux9[t])^2 + (uy0[t] - uy9[t])^2 == 4,
	{ux0[t] == 99 - 10*t, ux9[t] == 50, uy0[t] == 99/10 + t, uy9[t] == 50},
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21766: ("49" + t*minus["10"])^"2" + (t + Rational[minus["401"], "10"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(49 - 10*t)^2 + (-401/10 + t)^2 == 4,
	0,
	True,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$21785: (49 - 10*t)^2 + (-401/10 + t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21784: ("49" + t*minus["10"])^"2" + (t + Rational[minus["401"], "10"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(49 - 10*t)^2 + (-401/10 + t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$21807: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$21807: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21806: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--1=-10|10*10=x0-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + ux0[t] == -10,
	{ux0[t] == 99 - 10*t},
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21823: "98" + t*minus["10"] == minus["10"]

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[98 - 10*t == -10,
	0,
	True,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$21834: 98 - 10*t == -10 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21833: "98" + t*minus["10"] == minus["10"] && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + ux0[t],
	{ux0[t] == 99 - 10*t},
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21847: "100" == "100" + t*minus["10"]

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[100 == 100 - 10*t,
	0,
	True,
	99/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$21858: 100 == 100 - 10*t && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21857: "100" + t*minus["10"] == "100" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(98 - 10*t == -10 && 0 < t) || (100 - 10*t == 100 && 0 < t),
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$21872: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$21872: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {54/5, {t -> 54/5}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21871: {{Rational["54", "5"], 1, {True}, -1}}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 1717 function: make_next_todo   candidate.time: 54/5
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
compareMinTime[54/5,
	891/10,
	True,
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21896: {{True}, {False}, {False}}

@Backend.cpp 427 function: call   compareMinTime
@PhaseSimulator.cpp 1717 function: make_next_todo   candidate.time: 99-(99/10-0)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
simplify[207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21903: 1 + SimplifyCount[10] + SimplifyCount[207]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1 + SimplifyCount[10] + SimplifyCount[207]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplify", 0.000024}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21901: Rational["207", "10"]

@Backend.cpp 427 function: call   simplify
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[99 - 10*t,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[-9]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21909: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000027}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21907: minus["9"]

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[10,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21915: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000025}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21913: "10"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[15,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21921: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21919: "15"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[20,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21927: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21925: "20"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[25,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21933: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21931: "25"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[30,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21939: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21937: "30"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[35,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21945: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21943: "35"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[40,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21951: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000037}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21949: "40"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[45,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21957: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21955: "45"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[50,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21963: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21961: "50"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[99/10 + t,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21969: 1 + SimplifyCount[10] + SimplifyCount[207]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1 + SimplifyCount[10] + SimplifyCount[207]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21967: Rational["207", "10"]

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[10,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21975: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21973: "10"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[15,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21981: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21979: "15"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[20,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21987: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21985: "20"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[25,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21993: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21991: "25"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[30,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21999: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$21997: "30"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[35,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22005: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22003: "35"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[40,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22011: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22009: "40"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[45,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22017: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00003}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22015: "45"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[50,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22023: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00003}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22021: "50"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[-10,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[-10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22029: 3

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 3}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22027: minus["10"]

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22035: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00003}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22033: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22041: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22039: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22047: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00003}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22045: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22053: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00003}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22051: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22059: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22057: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22065: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22063: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22071: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22069: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22077: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00003}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22075: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22083: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22081: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[1,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22089: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00003}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22087: "1"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22095: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00003}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22093: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22101: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22099: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22107: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22105: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22113: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00003}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22111: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22119: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22117: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22125: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00003}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22123: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22131: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00003}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22129: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22137: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22135: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22143: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22141: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22149: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22147: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22155: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22153: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22161: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000029}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22159: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22167: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22165: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22173: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00003}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22171: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22179: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22177: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22185: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22183: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22191: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22189: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22197: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00003}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22195: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22203: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22201: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22209: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22207: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22215: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00003}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22213: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22221: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22219: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22227: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00003}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22225: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22233: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00003}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22231: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22239: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22237: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22245: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22243: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22251: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00003}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22249: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22257: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22255: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22263: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00003}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22261: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@Simulator.cpp 185 function: process_one_todo   
--- Result Phase ---
%% PhaseType: 2
%% id: 4
%% step: 3
%% parent_id:3
%% unadopted modules: {}
%% positive_asks
%% negative_asks
(x0--1=-10|10*10=x0-+1)=>x0'=-1*x0'-
%% current_time: 99/10
%% end_time: 207/10
--- variable map ---
x0 <=> 198+t*(-10)
x1 <=> 10
x2 <=> 15
x3 <=> 20
x4 <=> 25
x5 <=> 30
x6 <=> 35
x7 <=> 40
x8 <=> 45
x9 <=> 50
y0 <=> t
y1 <=> 10
y2 <=> 15
y3 <=> 20
y4 <=> 25
y5 <=> 30
y6 <=> 35
y7 <=> 40
y8 <=> 45
y9 <=> 50
x0' <=> -10
x1' <=> 0
x2' <=> 0
x3' <=> 0
x4' <=> 0
x5' <=> 0
x6' <=> 0
x7' <=> 0
x8' <=> 0
x9' <=> 0
y0' <=> 1
y1' <=> 0
y2' <=> 0
y3' <=> 0
y4' <=> 0
y5' <=> 0
y6' <=> 0
y7' <=> 0
y8' <=> 0
y9' <=> 0
x0'' <=> 0
x1'' <=> 0
x2'' <=> 0
x3'' <=> 0
x4'' <=> 0
x5'' <=> 0
x6'' <=> 0
x7'' <=> 0
x8'' <=> 0
x9'' <=> 0
y0'' <=> 0
y1'' <=> 0
y2'' <=> 0
y3'' <=> 0
y4'' <=> 0
y5'' <=> 0
y6'' <=> 0
y7'' <=> 0
y8'' <=> 0
y9'' <=> 0

--- parameter constraint ---
{}

@SequentialSimulator.cpp 50 function: dfs   *current: %% PhaseType: 2
%% id: 4
%% step: 3
%% parent_id:3
%% unadopted modules: {}
%% positive_asks
%% negative_asks
(x0--1=-10|10*10=x0-+1)=>x0'=-1*x0'-
%% current_time: 99/10
%% end_time: 207/10
--- variable map ---
x0 <=> 198+t*(-10)
x1 <=> 10
x2 <=> 15
x3 <=> 20
x4 <=> 25
x5 <=> 30
x6 <=> 35
x7 <=> 40
x8 <=> 45
x9 <=> 50
y0 <=> t
y1 <=> 10
y2 <=> 15
y3 <=> 20
y4 <=> 25
y5 <=> 30
y6 <=> 35
y7 <=> 40
y8 <=> 45
y9 <=> 50
x0' <=> -10
x1' <=> 0
x2' <=> 0
x3' <=> 0
x4' <=> 0
x5' <=> 0
x6' <=> 0
x7' <=> 0
x8' <=> 0
x9' <=> 0
y0' <=> 1
y1' <=> 0
y2' <=> 0
y3' <=> 0
y4' <=> 0
y5' <=> 0
y6' <=> 0
y7' <=> 0
y8' <=> 0
y9' <=> 0
x0'' <=> 0
x1'' <=> 0
x2'' <=> 0
x3'' <=> 0
x4'' <=> 0
x5'' <=> 0
x6'' <=> 0
x7'' <=> 0
x8'' <=> 0
x9'' <=> 0
y0'' <=> 0
y1'' <=> 0
y2'' <=> 0
y3'' <=> 0
y4'' <=> 0
y5'' <=> 0
y6'' <=> 0
y7'' <=> 0
y8'' <=> 0
y9'' <=> 0

--- parameter constraint ---
{}

@Simulator.cpp 165 function: process_one_todo   
--- Current Todo ---
%% PhaseType: 1
%% id: 5
%% step: 4
%% parent_id:4
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: 207/10
--- variable map ---

--- parameter constraint ---
{}

@Simulator.cpp 166 function: process_one_todo   
--- prev map ---
x0 <=> -9
x1 <=> 10
x2 <=> 15
x3 <=> 20
x4 <=> 25
x5 <=> 30
x6 <=> 35
x7 <=> 40
x8 <=> 45
x9 <=> 50
y0 <=> 207/10
y1 <=> 10
y2 <=> 15
y3 <=> 20
y4 <=> 25
y5 <=> 30
y6 <=> 35
y7 <=> 40
y8 <=> 45
y9 <=> 50
x0' <=> -10
x1' <=> 0
x2' <=> 0
x3' <=> 0
x4' <=> 0
x5' <=> 0
x6' <=> 0
x7' <=> 0
x8' <=> 0
x9' <=> 0
y0' <=> 1
y1' <=> 0
y2' <=> 0
y3' <=> 0
y4' <=> 0
y5' <=> 0
y6' <=> 0
y7' <=> 0
y8' <=> 0
y9' <=> 0
x0'' <=> 0
x1'' <=> 0
x2'' <=> 0
x3'' <=> 0
x4'' <=> 0
x5'' <=> 0
x6'' <=> 0
x7'' <=> 0
x8'' <=> 0
x9'' <=> 0
y0'' <=> 0
y1'' <=> 0
y2'' <=> 0
y3'' <=> 0
y4'' <=> 0
y5'' <=> 0
y6'' <=> 0
y7'' <=> 0
y8'' <=> 0
y9'' <=> 0

@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
setCurrentTime[207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22267: Null

@Backend.cpp 427 function: call   setCurrentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22269: Null

@Backend.cpp 427 function: call   resetConstraint
@PhaseSimulator.cpp 162 function: make_results_from_todo   *todo: %% PhaseType: 1
%% id: 5
%% step: 4
%% parent_id:4
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: 207/10
--- variable map ---

--- parameter constraint ---
{}

@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
clearPrevConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22271: Null

@Backend.cpp 427 function: call   clearPrevConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px0, 0],
	-9]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22273: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px1, 0],
	10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22275: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px2, 0],
	15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22277: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px3, 0],
	20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22279: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px4, 0],
	25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22281: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px5, 0],
	30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22283: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px6, 0],
	35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22285: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px7, 0],
	40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22287: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px8, 0],
	45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22289: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px9, 0],
	50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22291: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py0, 0],
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22293: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py1, 0],
	10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22295: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py2, 0],
	15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22297: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py3, 0],
	20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22299: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py4, 0],
	25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22301: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py5, 0],
	30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22303: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py6, 0],
	35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22305: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py7, 0],
	40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22307: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py8, 0],
	45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22309: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py9, 0],
	50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22311: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px0, 1],
	-10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22313: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px1, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22315: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px2, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22317: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px3, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22319: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px4, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22321: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px5, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22323: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px6, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22325: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px7, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22327: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px8, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22329: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px9, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22331: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py0, 1],
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22333: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py1, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22335: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py2, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22337: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py3, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22339: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py4, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22341: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py5, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22343: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py6, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22345: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py7, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22347: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py8, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22349: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py9, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22351: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px0, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22353: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px1, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22355: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px2, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22357: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px3, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22359: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px4, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22361: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px5, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22363: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px6, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22365: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px7, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22367: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px8, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22369: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px9, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22371: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py0, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22373: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py1, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22375: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py2, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22377: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py3, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22379: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py4, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22381: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py5, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22383: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py6, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22385: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py7, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22387: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py8, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22389: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py9, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22391: Null

@Backend.cpp 427 function: call   addPrevEqual
@PhaseSimulator.cpp 199 function: make_results_from_todo   parameter_cons: {}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addParameterConstraint[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pConstraint", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pCons", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22393: Null

@Backend.cpp 427 function: call   addParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addParameterConstraint[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pConstraint", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pCons", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22395: Null

@Backend.cpp 427 function: call   addParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addAssumption[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"as in addAssumption:", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22397: Null

@Backend.cpp 427 function: call   addAssumption
@PhaseSimulator.cpp 326 function: simulate_ms   
--- next unadopted module set ---

@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0'=-1*x0'-}
@ConsistencyChecker.cpp 394 function: check_consistency   get_infix_string(ask): (x0--1=-10|10*10=x0-+1)=>x0'=-1*x0'-
@ConsistencyChecker.cpp 398 function: check_consistency   related[1/1]: {x0''=0, x0'=-1*x0'-}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22399: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0,
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22401: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][dx0],
	prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22404: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][dx0] == 0 && Derivative[1][dx0] == -prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx0] == 0 && Derivative[1][dx0] == -prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22409: SimplifyCount[And] + SimplifyCount[Derivative[1][dx0] == -prev[px0, 1]] + SimplifyCount[Derivative[2][dx0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[1][dx0] == -prev[px0, 1]] + SimplifyCount[Derivative[2][dx0] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000057}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22407: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[Derivative[2][dx0] == 0 && prev[px0, 1] + Derivative[1][dx0] == 0,
	ux0 == prev[px0, 0] && Derivative[1][dx0] == prev[px0, 1],
	True,
	True,
	{prev[px0, 0] -> -9, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 207/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> -10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22414: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[2*prev[px0, 1] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22416: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[2*prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx0]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[2*prev[px0, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 2, 0.000103}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$22418: {prev[px0, 1] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22432: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[False]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22434: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx0]]}, {1, 1}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 2, 0.000101}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$22413: False, resultConstraint: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpTrue$22413: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$22413: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22412: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@ConsistencyChecker.cpp 299 function: check_consistency_foreach   
@PhaseSimulator.cpp 359 function: simulate_ms   INCONSISTENT: {}
@IncrementalModuleSet.cpp 243 function: generate_new_ms   %% inconsistent module set : {CONST(x0), WALL(x0,1)}
@IncrementalModuleSet.cpp 249 function: generate_new_ms   %% maximal consistent module set : 
@IncrementalModuleSet.cpp 39 function: get_removable_module_sets   %% candidate modules : {CONST(x0), WALL(x0,1)}

@IncrementalModuleSet.cpp 40 function: get_removable_module_sets   %% current modules : {}

@IncrementalModuleSet.cpp 86 function: get_removable_module_sets   %% removable modules : {CONST(x0)} , 

@IncrementalModuleSet.cpp 285 function: generate_new_ms   %% new ms : {CONST(x0)}
@PhaseSimulator.cpp 326 function: simulate_ms   
--- next unadopted module set ---
CONST(x0).

@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {CONST(x0).
, x0'=-1*x0'-}
@ConsistencyChecker.cpp 394 function: check_consistency   get_infix_string(ask): (x0--1=-10|10*10=x0-+1)=>x0'=-1*x0'-
@ConsistencyChecker.cpp 398 function: check_consistency   related[1/1]: {x0'=-1*x0'-}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22442: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0,
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22444: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[1][dx0] == -prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx0] == -prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22449: SimplifyCount[Equal] + SimplifyCount[-prev[px0, 1]] + SimplifyCount[Derivative[1][dx0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[Equal] + SimplifyCount[-prev[px0, 1]] + SimplifyCount[Derivative[1][dx0]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00005}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22447: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[prev[px0, 1] + Derivative[1][dx0] == 0,
	ux0 == prev[px0, 0],
	True,
	True,
	{prev[px0, 0] -> -9, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 207/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> -10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[prev[px0, 1] + Derivative[1][dx0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22454: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[prev[px0, 1] + Derivative[1][dx0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[prev[px0, 1] + Derivative[1][dx0]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.00006}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$22456: {prev[px0, 1] + Derivative[1][dx0] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx0] == 10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22457: SimplifyCount[10] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[10] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx0]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 1, 0.000075}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$22453: True, resultConstraint: Derivative[1][dx0] == 10

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$22453: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22452: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[Derivative[1][dx0] == 10,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$22467[[i$22467]]: Derivative[1][dx0] == 10, newVars$22467[[1]]: Derivative[1][dx0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$22467: Derivative[1][dx0] == 10

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$22466: Derivative[1][dx0] == 10, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{Derivative[1][dx0] == 10}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$22466: {{{{dx0, 1}, 0, "10"}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22465: {{{{dx0, 1}, 0, "10"}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22472: 496

@Backend.cpp 427 function: call   getSizeOfConstraint
@PhaseSimulator.cpp 369 function: simulate_ms   CONSISTENT: {Constraint[ConstraintCall<CONST(Variable[x0])>[Always[Equal[Differential[Differential[Variable[x0]]],Number[0]]]]]}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getParameterConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22474: {True}

@Backend.cpp 427 function: call   getParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exactlyEqual[10,
	-10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22477: False

@Backend.cpp 427 function: call   exactlyEqual
@PhaseSimulator.cpp 1557 function: make_next_todo   *phase: %% PhaseType: 1
%% id: 5
%% step: 4
%% parent_id:4
%% unadopted modules: {CONST(x0)}
%% inconsistent modules: {CONST(x0), WALL(x0,1)}
%% inconsistent constraints: {x0''=0, x0'=-1*x0'-}
%% positive_asks
(x0--1=-10|10*10=x0-+1)=>x0'=-1*x0'-
%% negative_asks
%% current_time: 207/10
--- variable map ---
x0' <=> 10

--- parameter constraint ---
{}

@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
removeRedundantParameters[207/10,
	0,
	{ux0 == -9, ux1 == 10, ux2 == 15, ux3 == 20, ux4 == 25, ux5 == 30, ux6 == 35, ux7 == 40, ux8 == 45, ux9 == 50, uy0 == 207/10, uy1 == 10, uy2 == 15, uy3 == 20, uy4 == 25, uy5 == 30, uy6 == 35, uy7 == 40, uy8 == 45, uy9 == 50, Derivative[1][dx0] == 10, Derivative[1][dx1] == 0, Derivative[1][dx2] == 0, Derivative[1][dx3] == 0, Derivative[1][dx4] == 0, Derivative[1][dx5] == 0, Derivative[1][dx6] == 0, Derivative[1][dx7] == 0, Derivative[1][dx8] == 0, Derivative[1][dx9] == 0, Derivative[1][dy0] == 1, Derivative[1][dy1] == 0, Derivative[1][dy2] == 0, Derivative[1][dy3] == 0, Derivative[1][dy4] == 0, Derivative[1][dy5] == 0, Derivative[1][dy6] == 0, Derivative[1][dy7] == 0, Derivative[1][dy8] == 0, Derivative[1][dy9] == 0, Derivative[2][dx1] == 0, Derivative[2][dx2] == 0, Derivative[2][dx3] == 0, Derivative[2][dx4] == 0, Derivative[2][dx5] == 0, Derivative[2][dx6] == 0, Derivative[2][dx7] == 0, Derivative[2][dx8] == 0, Derivative[2][dx9] == 0, Derivative[2][dy0] == 0, Derivative[2][dy1] == 0, Derivative[2][dy2] == 0, Derivative[2][dy3] == 0, Derivative[2][dy4] == 0, Derivative[2][dy5] == 0, Derivative[2][dy6] == 0, Derivative[2][dy7] == 0, Derivative[2][dy8] == 0, Derivative[2][dy9] == 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: parsInVM$22480: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: redundantPars$22480: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22479: {True}

@Backend.cpp 427 function: call   removeRedundantParameters
@Simulator.cpp 185 function: process_one_todo   
--- Result Phase ---
%% PhaseType: 1
%% id: 5
%% step: 4
%% parent_id:4
%% unadopted modules: {CONST(x0)}
%% inconsistent modules: {CONST(x0), WALL(x0,1)}
%% inconsistent constraints: {x0''=0, x0'=-1*x0'-}
%% positive_asks
(x0--1=-10|10*10=x0-+1)=>x0'=-1*x0'-
%% negative_asks
%% current_time: 207/10
%% end_time: 207/10
--- variable map ---
x0 <=> -9
x1 <=> 10
x2 <=> 15
x3 <=> 20
x4 <=> 25
x5 <=> 30
x6 <=> 35
x7 <=> 40
x8 <=> 45
x9 <=> 50
y0 <=> 207/10
y1 <=> 10
y2 <=> 15
y3 <=> 20
y4 <=> 25
y5 <=> 30
y6 <=> 35
y7 <=> 40
y8 <=> 45
y9 <=> 50
x0' <=> 10
x1' <=> 0
x2' <=> 0
x3' <=> 0
x4' <=> 0
x5' <=> 0
x6' <=> 0
x7' <=> 0
x8' <=> 0
x9' <=> 0
y0' <=> 1
y1' <=> 0
y2' <=> 0
y3' <=> 0
y4' <=> 0
y5' <=> 0
y6' <=> 0
y7' <=> 0
y8' <=> 0
y9' <=> 0
x1'' <=> 0
x2'' <=> 0
x3'' <=> 0
x4'' <=> 0
x5'' <=> 0
x6'' <=> 0
x7'' <=> 0
x8'' <=> 0
x9'' <=> 0
y0'' <=> 0
y1'' <=> 0
y2'' <=> 0
y3'' <=> 0
y4'' <=> 0
y5'' <=> 0
y6'' <=> 0
y7'' <=> 0
y8'' <=> 0
y9'' <=> 0

--- parameter constraint ---
{}

@SequentialSimulator.cpp 50 function: dfs   *current: %% PhaseType: 1
%% id: 5
%% step: 4
%% parent_id:4
%% unadopted modules: {CONST(x0)}
%% inconsistent modules: {CONST(x0), WALL(x0,1)}
%% inconsistent constraints: {x0''=0, x0'=-1*x0'-}
%% positive_asks
(x0--1=-10|10*10=x0-+1)=>x0'=-1*x0'-
%% negative_asks
%% current_time: 207/10
%% end_time: 207/10
--- variable map ---
x0 <=> -9
x1 <=> 10
x2 <=> 15
x3 <=> 20
x4 <=> 25
x5 <=> 30
x6 <=> 35
x7 <=> 40
x8 <=> 45
x9 <=> 50
y0 <=> 207/10
y1 <=> 10
y2 <=> 15
y3 <=> 20
y4 <=> 25
y5 <=> 30
y6 <=> 35
y7 <=> 40
y8 <=> 45
y9 <=> 50
x0' <=> 10
x1' <=> 0
x2' <=> 0
x3' <=> 0
x4' <=> 0
x5' <=> 0
x6' <=> 0
x7' <=> 0
x8' <=> 0
x9' <=> 0
y0' <=> 1
y1' <=> 0
y2' <=> 0
y3' <=> 0
y4' <=> 0
y5' <=> 0
y6' <=> 0
y7' <=> 0
y8' <=> 0
y9' <=> 0
x1'' <=> 0
x2'' <=> 0
x3'' <=> 0
x4'' <=> 0
x5'' <=> 0
x6'' <=> 0
x7'' <=> 0
x8'' <=> 0
x9'' <=> 0
y0'' <=> 0
y1'' <=> 0
y2'' <=> 0
y3'' <=> 0
y4'' <=> 0
y5'' <=> 0
y6'' <=> 0
y7'' <=> 0
y8'' <=> 0
y9'' <=> 0

--- parameter constraint ---
{}

@Simulator.cpp 165 function: process_one_todo   
--- Current Todo ---
%% PhaseType: 2
%% id: 6
%% step: 5
%% parent_id:5
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: 207/10
--- variable map ---

--- parameter constraint ---
{}

@Simulator.cpp 166 function: process_one_todo   
--- prev map ---

@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22484: Null

@Backend.cpp 427 function: call   resetConstraint
@PhaseSimulator.cpp 162 function: make_results_from_todo   *todo: %% PhaseType: 2
%% id: 6
%% step: 5
%% parent_id:5
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: 207/10
--- variable map ---

--- parameter constraint ---
{}

@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
clearPrevConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22486: Null

@Backend.cpp 427 function: call   clearPrevConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px0, 0],
	-9]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22488: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px1, 0],
	10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22490: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px2, 0],
	15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22492: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px3, 0],
	20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22494: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px4, 0],
	25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22496: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px5, 0],
	30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22498: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px6, 0],
	35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22500: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px7, 0],
	40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22502: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px8, 0],
	45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22504: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px9, 0],
	50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22506: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py0, 0],
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22508: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py1, 0],
	10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22510: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py2, 0],
	15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22512: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py3, 0],
	20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22514: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py4, 0],
	25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22516: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py5, 0],
	30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22518: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py6, 0],
	35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22520: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py7, 0],
	40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22522: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py8, 0],
	45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22524: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py9, 0],
	50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22526: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px0, 1],
	10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22528: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px1, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22530: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px2, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22532: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px3, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22534: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px4, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22536: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px5, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22538: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px6, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22540: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px7, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22542: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px8, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22544: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px9, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22546: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py0, 1],
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22548: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py1, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22550: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py2, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22552: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py3, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22554: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py4, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22556: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py5, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22558: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py6, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22560: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py7, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22562: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py8, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22564: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py9, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22566: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px1, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22568: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px2, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22570: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px3, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22572: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px4, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22574: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px5, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22576: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px6, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22578: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px7, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22580: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px8, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22582: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px9, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22584: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py0, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22586: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py1, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22588: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py2, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22590: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py3, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22592: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py4, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22594: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py5, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22596: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py6, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22598: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py7, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22600: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py8, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22602: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py9, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22604: Null

@Backend.cpp 427 function: call   addPrevEqual
@PhaseSimulator.cpp 199 function: make_results_from_todo   parameter_cons: {}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addParameterConstraint[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pConstraint", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pCons", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22606: Null

@Backend.cpp 427 function: call   addParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addParameterConstraint[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pConstraint", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pCons", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22608: Null

@Backend.cpp 427 function: call   addParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addAssumption[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"as in addAssumption:", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22610: Null

@Backend.cpp 427 function: call   addAssumption
@PhaseSimulator.cpp 326 function: simulate_ms   
--- next unadopted module set ---

@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {CONST(x0).
, x0'=-1*x0'-}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x0--1=-10|10*10=x0-+1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22612: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0[0],
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22614: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux0][0],
	prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22617: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux0][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux0][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22622: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux0][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux0][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000052}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22620: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(-1 + ux0[t] == -10 || 100 == 1 + ux0[t]) && Derivative[2][ux0][t] == 0,
	ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> -9, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 207/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(9 + ux0[t] == 0 || ux0[t] == 99) && Derivative[2][ux0][t] == 0,
	{prev[px0, 0] -> -9, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 207/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$22627: {Derivative[2][ux0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$22627: {ux0[t] -> -9 + 10*t}, resultCons$22627: (9 + ux0[t] == 0 || ux0[t] == 99) && t > 0,                                                                                                                                                                                                                          207
{prev[px0, 0] -> -9, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> ---, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}
                                                                                                                                                                                                                         10: {prev[px0, 0] -> -9, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 207/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$22626: {solved, or[and[5*t == 54]], {ux0[t] -> -9 + 10*t}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[5*t == 54]], {ux0[t] -> -9 + 10*t}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux0[t] -> -9 + 10*t, Derivative[1][ux0][t] -> 10, Derivative[2][ux0][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$22626: {ux0[t] -> -9 + 10*t, Derivative[1][ux0][t] -> 10, Derivative[2][ux0][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-1 + ux0[t] == -10 || 100 == 1 + ux0[t]) && Derivative[2][ux0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> -9, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 207/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux0[0] == -9 && Derivative[1][ux0][0] == 10}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux0[t] -> -9 + 10*t, Derivative[1][ux0][t] -> 10, Derivative[2][ux0][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {-9 == prev[px0, 0] && 10 == prev[px0, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$22626: or[and[5*t == 54]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: ccIntervalForEach[5*t == 54,
	{ux0[0] -> -9, Derivative[1][ux0][0] -> 10},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: lhs$22814: -54

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: eqSol$22814: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$22626}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22625: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x0--1=-10|10*10=x0-+1)=>x0'=-1*x0'-
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {CONST(x0).
, x0'=-1*x0'-}
@ConsistencyChecker.cpp 398 function: check_consistency   related[1/1]: {x0''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22821: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0[0],
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22823: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux0][0],
	prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22826: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux0][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux0][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22831: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux0][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux0][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00005}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22829: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][ux0][t] == 0,
	ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> -9, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 207/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux0][t] == 0,
	{prev[px0, 0] -> -9, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 207/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$22836: {Derivative[2][ux0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$22836: {ux0[t] -> -9 + 10*t}, resultCons$22836: t > 0,                                                                                                                                                                                                                          207
{prev[px0, 0] -> -9, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> ---, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}
                                                                                                                                                                                                                         10: {prev[px0, 0] -> -9, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 207/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$22835: {solved, or[and[]], {ux0[t] -> -9 + 10*t}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux0[t] -> -9 + 10*t}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux0[t] -> -9 + 10*t, Derivative[1][ux0][t] -> 10, Derivative[2][ux0][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$22835: {ux0[t] -> -9 + 10*t, Derivative[1][ux0][t] -> 10, Derivative[2][ux0][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][ux0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> -9, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 207/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux0[0] == -9 && Derivative[1][ux0][0] == 10}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux0[t] -> -9 + 10*t, Derivative[1][ux0][t] -> 10, Derivative[2][ux0][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {-9 == prev[px0, 0] && 10 == prev[px0, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$22835: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$22835}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$22834: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][ux0][t] == 0,
	{prev[px0, 0] -> -9, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 207/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], Derivative[1][ux0][t], Derivative[2][ux0][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux0][t] == 0,
	{prev[px0, 0] -> -9, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 207/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$23027: {Derivative[2][ux0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$23027: {ux0[t] -> -9 + 10*t}, resultCons$23027: t > 0,                                                                                                                                                                                                                          207
{prev[px0, 0] -> -9, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> ---, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}
                                                                                                                                                                                                                         10: {prev[px0, 0] -> -9, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> 207/10, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux0[t] -> -9 + 10*t}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23025: {{{{ux0, 0}, 0, "10"*t + minus["9"]}, {{ux0, 1}, 0, "10"}, {{ux0, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23044: 792

@Backend.cpp 427 function: call   getSizeOfConstraint
@PhaseSimulator.cpp 369 function: simulate_ms   CONSISTENT: {}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getParameterConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23046: {True}

@Backend.cpp 427 function: call   getParameterConstraint
@PhaseSimulator.cpp 1557 function: make_next_todo   *phase: %% PhaseType: 2
%% id: 6
%% step: 5
%% parent_id:5
%% unadopted modules: {}
%% positive_asks
%% negative_asks
(x0--1=-10|10*10=x0-+1)=>x0'=-1*x0'-
%% current_time: 207/10
--- variable map ---
x0 <=> 10*t+(-9)
x0' <=> 10
x0'' <=> 0

--- parameter constraint ---
{}

@PhaseSimulator.cpp 666 function: replace_prev2parameter   phase.get_parameter_constraint(): {}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForParameter[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23049: Null

@Backend.cpp 427 function: call   resetConstraintForParameter
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[-9 + 10*t,
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[-9 + 10*(-207/10 + t)]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23053: SimplifyCount[-9] + SimplifyCount[Plus] + SimplifyCount[10*(-207/10 + t)]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[-9] + SimplifyCount[Plus] + SimplifyCount[10*(-207/10 + t)]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00028}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23051: "10"*t + minus["216"]

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[10,
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23063: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000037}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23061: "10"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23069: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23067: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[10,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23075: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000039}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23073: "10"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[15,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23081: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23079: "15"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[20,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23087: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23085: "20"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[25,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23093: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000037}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23091: "25"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[30,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23099: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23097: "30"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[35,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23105: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23103: "35"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[40,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23111: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000041}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23109: "40"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[45,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23117: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23115: "45"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[50,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23123: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23121: "50"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[t,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[207/10 + t]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23129: SimplifyCount[207/10] + SimplifyCount[Plus] + SimplifyCount[t]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[207/10] + SimplifyCount[Plus] + SimplifyCount[t]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000253}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23127: t + Rational["207", "10"]

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[10,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23137: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000043}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23135: "10"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[15,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23143: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00004}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23141: "15"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[20,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23149: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23147: "20"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[25,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23155: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23153: "25"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[30,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23161: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23159: "30"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[35,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23167: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23165: "35"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[40,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23173: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23171: "40"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[45,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23179: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000038}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23177: "45"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[50,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23185: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23183: "50"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23191: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23189: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23197: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23195: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23203: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23201: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23209: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23207: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23215: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23213: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23221: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23219: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23227: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23225: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23233: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23231: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23239: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23237: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[1,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23245: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23243: "1"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23251: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23249: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23257: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23255: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23263: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23261: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23269: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23267: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23275: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23273: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23281: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23279: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23287: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23285: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23293: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23291: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23299: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23297: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23305: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23303: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23311: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23309: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23317: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23315: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23323: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23321: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23329: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23327: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23335: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23333: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23341: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23339: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23347: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23345: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23353: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23351: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23359: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23357: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23365: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000038}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23363: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23371: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23369: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23377: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23375: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23383: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23381: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23389: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23387: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23395: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23393: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23401: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23399: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23407: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23405: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	-207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23413: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23411: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
productWithGlobalParameterConstraint[True,
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23417: {True}

@Backend.cpp 427 function: call   productWithGlobalParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[False,
	-54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[False]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23422: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000037}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23420: False

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[10*t == 891,
	-54/5]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10*(54/5 + t) == 891]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23428: SimplifyCount[891] + SimplifyCount[Equal] + SimplifyCount[10*(54/5 + t)]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[891] + SimplifyCount[Equal] + SimplifyCount[10*(54/5 + t)]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000767}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23426: "10"*t == "783"

@Backend.cpp 427 function: call   exprTimeShift
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x1-)^2+(y0--y1-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux1[t])^2 + (uy0[t] - uy1[t])^2 == 4,
	{ux0[t] == -9 + 10*t, ux1[t] == 10, uy0[t] == 207/10 + t, uy1[t] == 10},
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23436: ("10"*t + minus["19"])^"2" + (t + Rational["107", "10"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(107/10 + t)^2 + (-19 + 10*t)^2 == 4,
	0,
	True,
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$23455: (107/10 + t)^2 + (-19 + 10*t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23454: ("10"*t + minus["19"])^"2" + (t + Rational["107", "10"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(107/10 + t)^2 + (-19 + 10*t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$23477: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$23477: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23476: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x2-)^2+(y0--y2-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux2[t])^2 + (uy0[t] - uy2[t])^2 == 4,
	{ux0[t] == -9 + 10*t, ux2[t] == 15, uy0[t] == 207/10 + t, uy2[t] == 15},
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23493: ("10"*t + minus["24"])^"2" + (t + Rational["57", "10"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(57/10 + t)^2 + (-24 + 10*t)^2 == 4,
	0,
	True,
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$23512: (57/10 + t)^2 + (-24 + 10*t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23511: ("10"*t + minus["24"])^"2" + (t + Rational["57", "10"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(57/10 + t)^2 + (-24 + 10*t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$23534: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$23534: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23533: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x3-)^2+(y0--y3-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux3[t])^2 + (uy0[t] - uy3[t])^2 == 4,
	{ux0[t] == -9 + 10*t, ux3[t] == 20, uy0[t] == 207/10 + t, uy3[t] == 20},
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23550: ("10"*t + minus["29"])^"2" + (t + Rational["7", "10"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(7/10 + t)^2 + (-29 + 10*t)^2 == 4,
	0,
	True,
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$23569: (7/10 + t)^2 + (-29 + 10*t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23568: ("10"*t + minus["29"])^"2" + (t + Rational["7", "10"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(7/10 + t)^2 + (-29 + 10*t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$23591: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$23591: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23590: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x4-)^2+(y0--y4-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux4[t])^2 + (uy0[t] - uy4[t])^2 == 4,
	{ux0[t] == -9 + 10*t, ux4[t] == 25, uy0[t] == 207/10 + t, uy4[t] == 25},
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23607: ("10"*t + minus["34"])^"2" + (t + Rational[minus["43"], "10"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-43/10 + t)^2 + (-34 + 10*t)^2 == 4,
	0,
	True,
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$23626: (-43/10 + t)^2 + (-34 + 10*t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23625: ("10"*t + minus["34"])^"2" + (t + Rational[minus["43"], "10"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-43/10 + t)^2 + (-34 + 10*t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$23648: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$23648: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {(3443 - 10*Sqrt[323])/1010, {t -> (3443 - 10*Sqrt[323])/1010}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23647: {{("3443" + "323"^(Rational["1", "2"])*minus["10"])*Rational["1", "1010"], 1, {True}, -1}}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x5-)^2+(y0--y5-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux5[t])^2 + (uy0[t] - uy5[t])^2 == 4,
	{ux0[t] == -9 + 10*t, ux5[t] == 30, uy0[t] == 207/10 + t, uy5[t] == 30},
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23680: ("10"*t + minus["39"])^"2" + (t + Rational[minus["93"], "10"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-93/10 + t)^2 + (-39 + 10*t)^2 == 4,
	0,
	True,
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$23699: (-93/10 + t)^2 + (-39 + 10*t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23698: ("10"*t + minus["39"])^"2" + (t + Rational[minus["93"], "10"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-93/10 + t)^2 + (-39 + 10*t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$23721: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$23721: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23720: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x6-)^2+(y0--y6-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux6[t])^2 + (uy0[t] - uy6[t])^2 == 4,
	{ux0[t] == -9 + 10*t, ux6[t] == 35, uy0[t] == 207/10 + t, uy6[t] == 35},
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23737: ("10"*t + minus["44"])^"2" + (t + Rational[minus["143"], "10"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-143/10 + t)^2 + (-44 + 10*t)^2 == 4,
	0,
	True,
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$23756: (-143/10 + t)^2 + (-44 + 10*t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23755: ("10"*t + minus["44"])^"2" + (t + Rational[minus["143"], "10"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-143/10 + t)^2 + (-44 + 10*t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$23778: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$23778: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23777: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x7-)^2+(y0--y7-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux7[t])^2 + (uy0[t] - uy7[t])^2 == 4,
	{ux0[t] == -9 + 10*t, ux7[t] == 40, uy0[t] == 207/10 + t, uy7[t] == 40},
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23794: ("10"*t + minus["49"])^"2" + (t + Rational[minus["193"], "10"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-193/10 + t)^2 + (-49 + 10*t)^2 == 4,
	0,
	True,
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$23813: (-193/10 + t)^2 + (-49 + 10*t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23812: ("10"*t + minus["49"])^"2" + (t + Rational[minus["193"], "10"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-193/10 + t)^2 + (-49 + 10*t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$23835: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$23835: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23834: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x8-)^2+(y0--y8-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux8[t])^2 + (uy0[t] - uy8[t])^2 == 4,
	{ux0[t] == -9 + 10*t, ux8[t] == 45, uy0[t] == 207/10 + t, uy8[t] == 45},
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23851: ("10"*t + minus["54"])^"2" + (t + Rational[minus["243"], "10"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-243/10 + t)^2 + (-54 + 10*t)^2 == 4,
	0,
	True,
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$23870: (-243/10 + t)^2 + (-54 + 10*t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23869: ("10"*t + minus["54"])^"2" + (t + Rational[minus["243"], "10"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-243/10 + t)^2 + (-54 + 10*t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$23892: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$23892: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23891: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x9-)^2+(y0--y9-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux9[t])^2 + (uy0[t] - uy9[t])^2 == 4,
	{ux0[t] == -9 + 10*t, ux9[t] == 50, uy0[t] == 207/10 + t, uy9[t] == 50},
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23908: ("10"*t + minus["59"])^"2" + (t + Rational[minus["293"], "10"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-293/10 + t)^2 + (-59 + 10*t)^2 == 4,
	0,
	True,
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$23927: (-293/10 + t)^2 + (-59 + 10*t)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23926: ("10"*t + minus["59"])^"2" + (t + Rational[minus["293"], "10"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-293/10 + t)^2 + (-59 + 10*t)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$23949: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$23949: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23948: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--1=-10|10*10=x0-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + ux0[t] == -10,
	{ux0[t] == -9 + 10*t},
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23965: "10"*t + minus["10"] == minus["10"]

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[-10 + 10*t == -10,
	0,
	True,
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$23976: -10 + 10*t == -10 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23975: "10"*t + minus["10"] == minus["10"] && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + ux0[t],
	{ux0[t] == -9 + 10*t},
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23989: "100" == "10"*t + minus["8"]

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[100 == -8 + 10*t,
	0,
	True,
	207/10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$24000: 100 == -8 + 10*t && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$23999: "10"*t + minus["8"] == "100" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-10 + 10*t == -10 && 0 < t) || (-8 + 10*t == 100 && 0 < t),
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$24014: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$24014: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {54/5, {t -> 54/5}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24013: {{Rational["54", "5"], 1, {True}, -1}}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 1717 function: make_next_todo   candidate.time: (3443+323^(1/2)*(-10))*1/1010
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
compareMinTime[(3443 - 10*Sqrt[323])/1010,
	54/5,
	True,
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24038: {{True}, {False}, {False}}

@Backend.cpp 427 function: call   compareMinTime
@PhaseSimulator.cpp 1717 function: make_next_todo   candidate.time: 54/5
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
compareMinTime[(3443 - 10*Sqrt[323])/1010,
	783/10,
	True,
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24043: {{True}, {False}, {False}}

@Backend.cpp 427 function: call   compareMinTime
@PhaseSimulator.cpp 1717 function: make_next_todo   candidate.time: 99-(99/10-0)-(207/10-99/10)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
simplify[207/10 + (3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[207/10 + (3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24050: SimplifyCount[207/10] + SimplifyCount[(3443 - 10*Sqrt[323])/1010] + SimplifyCount[Plus]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[207/10] + SimplifyCount[(3443 - 10*Sqrt[323])/1010] + SimplifyCount[Plus]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplify", 0.010313}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24048: ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"]

@Backend.cpp 427 function: call   simplify
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[-9 + 10*t,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[-9 + (3443 - 10*Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24064: SimplifyCount[-9] + SimplifyCount[(3443 - 10*Sqrt[323])/101] + SimplifyCount[Plus]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[-9] + SimplifyCount[(3443 - 10*Sqrt[323])/101] + SimplifyCount[Plus]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.009622}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24062: ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"]

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[10,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24078: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000037}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24076: "10"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[15,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24084: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24082: "15"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[20,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24090: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24088: "20"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[25,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24096: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24094: "25"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[30,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24102: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24100: "30"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[35,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24108: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24106: "35"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[40,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24114: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24112: "40"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[45,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24120: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24118: "45"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[50,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24126: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24124: "50"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[207/10 + t,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[207/10 + (3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24132: SimplifyCount[207/10] + SimplifyCount[(3443 - 10*Sqrt[323])/1010] + SimplifyCount[Plus]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[207/10] + SimplifyCount[(3443 - 10*Sqrt[323])/1010] + SimplifyCount[Plus]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00004}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24130: ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"]

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[10,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24146: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24144: "10"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[15,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24152: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24150: "15"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[20,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24158: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24156: "20"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[25,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24164: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00004}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24162: "25"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[30,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24170: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24168: "30"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[35,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24176: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24174: "35"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[40,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24182: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24180: "40"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[45,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24188: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24186: "45"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[50,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24194: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24192: "50"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[10,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24200: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24198: "10"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24206: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24204: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24212: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24210: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24218: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24216: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24224: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24222: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24230: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24228: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24236: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24234: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24242: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24240: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24248: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24246: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24254: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24252: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[1,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24260: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24258: "1"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24266: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24264: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24272: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24270: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24278: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24276: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24284: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24282: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24290: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24288: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24296: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24294: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24302: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24300: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24308: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24306: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24314: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24312: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24320: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24318: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24326: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24324: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24332: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24330: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24338: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24336: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24344: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24342: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24350: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24348: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24356: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000038}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24354: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24362: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24360: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24368: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24366: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24374: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24372: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24380: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24378: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24386: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24384: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24392: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24390: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24398: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24396: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24404: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00003}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24402: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24410: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24408: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24416: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000037}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24414: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24422: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24420: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24428: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24426: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(3443 - 10*Sqrt[323])/1010]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24434: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24432: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@Simulator.cpp 185 function: process_one_todo   
--- Result Phase ---
%% PhaseType: 2
%% id: 6
%% step: 5
%% parent_id:5
%% unadopted modules: {}
%% positive_asks
%% negative_asks
(x0--1=-10|10*10=x0-+1)=>x0'=-1*x0'-
%% current_time: 207/10
%% end_time: (2435+323^(1/2)*(-1))*1/101
--- variable map ---
x0 <=> 10*t+(-216)
x1 <=> 10
x2 <=> 15
x3 <=> 20
x4 <=> 25
x5 <=> 30
x6 <=> 35
x7 <=> 40
x8 <=> 45
x9 <=> 50
y0 <=> t
y1 <=> 10
y2 <=> 15
y3 <=> 20
y4 <=> 25
y5 <=> 30
y6 <=> 35
y7 <=> 40
y8 <=> 45
y9 <=> 50
x0' <=> 10
x1' <=> 0
x2' <=> 0
x3' <=> 0
x4' <=> 0
x5' <=> 0
x6' <=> 0
x7' <=> 0
x8' <=> 0
x9' <=> 0
y0' <=> 1
y1' <=> 0
y2' <=> 0
y3' <=> 0
y4' <=> 0
y5' <=> 0
y6' <=> 0
y7' <=> 0
y8' <=> 0
y9' <=> 0
x0'' <=> 0
x1'' <=> 0
x2'' <=> 0
x3'' <=> 0
x4'' <=> 0
x5'' <=> 0
x6'' <=> 0
x7'' <=> 0
x8'' <=> 0
x9'' <=> 0
y0'' <=> 0
y1'' <=> 0
y2'' <=> 0
y3'' <=> 0
y4'' <=> 0
y5'' <=> 0
y6'' <=> 0
y7'' <=> 0
y8'' <=> 0
y9'' <=> 0

--- parameter constraint ---
{}

@SequentialSimulator.cpp 50 function: dfs   *current: %% PhaseType: 2
%% id: 6
%% step: 5
%% parent_id:5
%% unadopted modules: {}
%% positive_asks
%% negative_asks
(x0--1=-10|10*10=x0-+1)=>x0'=-1*x0'-
%% current_time: 207/10
%% end_time: (2435+323^(1/2)*(-1))*1/101
--- variable map ---
x0 <=> 10*t+(-216)
x1 <=> 10
x2 <=> 15
x3 <=> 20
x4 <=> 25
x5 <=> 30
x6 <=> 35
x7 <=> 40
x8 <=> 45
x9 <=> 50
y0 <=> t
y1 <=> 10
y2 <=> 15
y3 <=> 20
y4 <=> 25
y5 <=> 30
y6 <=> 35
y7 <=> 40
y8 <=> 45
y9 <=> 50
x0' <=> 10
x1' <=> 0
x2' <=> 0
x3' <=> 0
x4' <=> 0
x5' <=> 0
x6' <=> 0
x7' <=> 0
x8' <=> 0
x9' <=> 0
y0' <=> 1
y1' <=> 0
y2' <=> 0
y3' <=> 0
y4' <=> 0
y5' <=> 0
y6' <=> 0
y7' <=> 0
y8' <=> 0
y9' <=> 0
x0'' <=> 0
x1'' <=> 0
x2'' <=> 0
x3'' <=> 0
x4'' <=> 0
x5'' <=> 0
x6'' <=> 0
x7'' <=> 0
x8'' <=> 0
x9'' <=> 0
y0'' <=> 0
y1'' <=> 0
y2'' <=> 0
y3'' <=> 0
y4'' <=> 0
y5'' <=> 0
y6'' <=> 0
y7'' <=> 0
y8'' <=> 0
y9'' <=> 0

--- parameter constraint ---
{}

@Simulator.cpp 165 function: process_one_todo   
--- Current Todo ---
%% PhaseType: 1
%% id: 7
%% step: 6
%% parent_id:6
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: (2435+323^(1/2)*(-1))*1/101
--- variable map ---

--- parameter constraint ---
{}

@Simulator.cpp 166 function: process_one_todo   
--- prev map ---
x0 <=> (323^(1/2)*5+(-1267))*(-2)/101
x1 <=> 10
x2 <=> 15
x3 <=> 20
x4 <=> 25
x5 <=> 30
x6 <=> 35
x7 <=> 40
x8 <=> 45
x9 <=> 50
y0 <=> (2435+323^(1/2)*(-1))*1/101
y1 <=> 10
y2 <=> 15
y3 <=> 20
y4 <=> 25
y5 <=> 30
y6 <=> 35
y7 <=> 40
y8 <=> 45
y9 <=> 50
x0' <=> 10
x1' <=> 0
x2' <=> 0
x3' <=> 0
x4' <=> 0
x5' <=> 0
x6' <=> 0
x7' <=> 0
x8' <=> 0
x9' <=> 0
y0' <=> 1
y1' <=> 0
y2' <=> 0
y3' <=> 0
y4' <=> 0
y5' <=> 0
y6' <=> 0
y7' <=> 0
y8' <=> 0
y9' <=> 0
x0'' <=> 0
x1'' <=> 0
x2'' <=> 0
x3'' <=> 0
x4'' <=> 0
x5'' <=> 0
x6'' <=> 0
x7'' <=> 0
x8'' <=> 0
x9'' <=> 0
y0'' <=> 0
y1'' <=> 0
y2'' <=> 0
y3'' <=> 0
y4'' <=> 0
y5'' <=> 0
y6'' <=> 0
y7'' <=> 0
y8'' <=> 0
y9'' <=> 0

@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
setCurrentTime[(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24438: Null

@Backend.cpp 427 function: call   setCurrentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24440: Null

@Backend.cpp 427 function: call   resetConstraint
@PhaseSimulator.cpp 162 function: make_results_from_todo   *todo: %% PhaseType: 1
%% id: 7
%% step: 6
%% parent_id:6
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: (2435+323^(1/2)*(-1))*1/101
--- variable map ---

--- parameter constraint ---
{}

@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
clearPrevConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24442: Null

@Backend.cpp 427 function: call   clearPrevConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px0, 0],
	(-2*(-1267 + 5*Sqrt[323]))/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24444: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px1, 0],
	10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24446: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px2, 0],
	15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24448: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px3, 0],
	20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24450: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px4, 0],
	25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24452: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px5, 0],
	30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24454: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px6, 0],
	35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24456: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px7, 0],
	40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24458: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px8, 0],
	45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24460: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px9, 0],
	50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24462: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py0, 0],
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24464: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py1, 0],
	10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24466: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py2, 0],
	15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24468: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py3, 0],
	20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24470: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py4, 0],
	25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24472: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py5, 0],
	30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24474: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py6, 0],
	35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24476: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py7, 0],
	40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24478: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py8, 0],
	45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24480: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py9, 0],
	50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24482: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px0, 1],
	10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24484: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px1, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24486: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px2, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24488: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px3, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24490: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px4, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24492: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px5, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24494: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px6, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24496: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px7, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24498: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px8, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24500: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px9, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24502: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py0, 1],
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24504: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py1, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24506: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py2, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24508: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py3, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24510: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py4, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24512: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py5, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24514: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py6, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24516: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py7, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24518: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py8, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24520: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py9, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24522: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px0, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24524: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px1, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24526: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px2, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24528: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px3, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24530: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px4, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24532: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px5, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24534: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px6, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24536: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px7, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24538: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px8, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24540: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px9, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24542: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py0, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24544: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py1, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24546: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py2, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24548: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py3, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24550: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py4, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24552: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py5, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24554: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py6, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24556: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py7, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24558: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py8, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24560: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py9, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24562: Null

@Backend.cpp 427 function: call   addPrevEqual
@PhaseSimulator.cpp 199 function: make_results_from_todo   parameter_cons: {}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addParameterConstraint[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pConstraint", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pCons", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24564: Null

@Backend.cpp 427 function: call   addParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addParameterConstraint[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pConstraint", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pCons", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24566: Null

@Backend.cpp 427 function: call   addParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addAssumption[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"as in addAssumption:", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24568: Null

@Backend.cpp 427 function: call   addAssumption
@PhaseSimulator.cpp 326 function: simulate_ms   
--- next unadopted module set ---

@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-))&1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-)&x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)&x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)}
@ConsistencyChecker.cpp 394 function: check_consistency   get_infix_string(ask): (x0--x4-)^2+(y0--y4-)^2=4=>x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-))&1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-)&x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)&x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)
@ConsistencyChecker.cpp 398 function: check_consistency   related[1/2]: {x0''=0, y0''=0, x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-)), x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24570: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0,
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24572: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][dx0],
	prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24575: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy0,
	prev[py0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24578: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][dy0],
	prev[py0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24581: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][dx0] == 0 && Derivative[2][dy0] == 0 && (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx0] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy0] == (prev[px0, 0] - prev[px4, 0])*prev[px4, 1] + (prev[py0, 0] - prev[py4, 0])*prev[py4, 1] && (prev[py0, 0] - prev[py4, 0])*Derivative[1][dx0] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy0] == -((prev[px0, 0] - prev[px4, 0])*prev[py0, 1]) + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0])]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx0] == 0 && Derivative[2][dy0] == 0 && (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx0] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy0] == (prev[px0, 0] - prev[px4, 0])*prev[px4, 1] + (prev[py0, 0] - prev[py4, 0])*prev[py4, 1] && (prev[py0, 0] - prev[py4, 0])*Derivative[1][dx0] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy0] == -((prev[px0, 0] - prev[px4, 0])*prev[py0, 1]) + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0])]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24586: SimplifyCount[And] + SimplifyCount[(prev[py0, 0] - prev[py4, 0])*Derivative[1][dx0] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy0] == -((prev[px0, 0] - prev[px4, 0])*prev[py0, 1]) + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0])] + SimplifyCount[(prev[px0, 0] - prev[px4, 0])*Derivative[1][dx0] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy0] == (prev[px0, 0] - prev[px4, 0])*prev[px4, 1] + (prev[py0, 0] - prev[py4, 0])*prev[py4, 1]] + SimplifyCount[Derivative[2][dx0] == 0] + SimplifyCount[Derivative[2][dy0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[(prev[py0, 0] - prev[py4, 0])*Derivative[1][dx0] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy0] == -((prev[px0, 0] - prev[px4, 0])*prev[py0, 1]) + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0])] + SimplifyCount[(prev[px0, 0] - prev[px4, 0])*Derivative[1][dx0] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy0] == (prev[px0, 0] - prev[px4, 0])*prev[px4, 1] + (prev[py0, 0] - prev[py4, 0])*prev[py4, 1]] + SimplifyCount[Derivative[2][dx0] == 0] + SimplifyCount[Derivative[2][dy0] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.035563}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24584: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[Derivative[2][dx0] == 0 && Derivative[2][dy0] == 0 && prev[px0, 0]*(prev[px4, 1] - Derivative[1][dx0]) + prev[px4, 0]*(-prev[px4, 1] + Derivative[1][dx0]) + (prev[py0, 0] - prev[py4, 0])*(prev[py4, 1] - Derivative[1][dy0]) == 0 && prev[px4, 0]*prev[py0, 1] + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[py4, 0]*Derivative[1][dx0] + prev[px0, 0]*(-prev[py0, 1] + Derivative[1][dy0]) == prev[py0, 0]*Derivative[1][dx0] + prev[px4, 0]*Derivative[1][dy0],
	ux0 == prev[px0, 0] && Derivative[1][dx0] == prev[px0, 1] && uy0 == prev[py0, 0] && Derivative[1][dy0] == prev[py0, 1],
	True,
	True,
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24595: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24597: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[prev[px4, 0]*(prev[px0, 1] - prev[px4, 1]) + prev[px0, 0]*(-prev[px0, 1] + prev[px4, 1]) + (prev[py0, 0] - prev[py4, 0])*(-prev[py0, 1] + prev[py4, 1]) == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24599: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[prev[px4, 0]*(prev[px0, 1] - prev[px4, 1]) + prev[px0, 0]*(-prev[px0, 1] + prev[px4, 1]) + (prev[py0, 0] - prev[py4, 0])*(-prev[py0, 1] + prev[py4, 1])]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[prev[px4, 0]*prev[py0, 1] + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px0, 1]*prev[py4, 0] == prev[px0, 1]*prev[py0, 0] + prev[px4, 0]*prev[py0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24601: SimplifyCount[Equal] + SimplifyCount[prev[px0, 1]*prev[py0, 0] + prev[px4, 0]*prev[py0, 1]] + SimplifyCount[prev[px4, 0]*prev[py0, 1] + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px0, 1]*prev[py4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx0]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy0]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[prev[px4, 0]*(prev[px0, 1] - prev[px4, 1]) + prev[px0, 0]*(-prev[px0, 1] + prev[px4, 1]) + (prev[py0, 0] - prev[py4, 0])*(-prev[py0, 1] + prev[py4, 1])]}, {1, SimplifyCount[Equal] + SimplifyCount[prev[px0, 1]*prev[py0, 0] + prev[px4, 0]*prev[py0, 1]] + SimplifyCount[prev[px4, 0]*prev[py0, 1] + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px0, 1]*prev[py4, 0]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 4, 0.005832}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$24603: {prev[px4, 0]*(prev[px0, 1] - prev[px4, 1]) + prev[px0, 0]*(-prev[px0, 1] + prev[px4, 1]) + (prev[py0, 0] - prev[py4, 0])*(-prev[py0, 1] + prev[py4, 1]) == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24617: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24619: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[False]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24621: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx0]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy0]]}, {1, 1}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000232}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$24594: False, resultConstraint: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpTrue$24594: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$24594: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24593: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@ConsistencyChecker.cpp 299 function: check_consistency_foreach   
@ConsistencyChecker.cpp 398 function: check_consistency   related[2/2]: {x4''=0, y4''=0, 1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-), x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24629: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux4,
	prev[px4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24631: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][dx4],
	prev[px4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24634: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy4,
	prev[py4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24637: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][dy4],
	prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24640: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][dx4] == 0 && Derivative[2][dy4] == 0 && prev[px0, 1]*(prev[px0, 0] - prev[px4, 0]) + prev[py0, 1]*(prev[py0, 0] - prev[py4, 0]) == (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx4] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy4] && (prev[py0, 0] - prev[py4, 0])*Derivative[1][dx4] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy4] == prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) - (prev[px0, 0] - prev[px4, 0])*prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx4] == 0 && Derivative[2][dy4] == 0 && prev[px0, 1]*(prev[px0, 0] - prev[px4, 0]) + prev[py0, 1]*(prev[py0, 0] - prev[py4, 0]) == (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx4] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy4] && (prev[py0, 0] - prev[py4, 0])*Derivative[1][dx4] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy4] == prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) - (prev[px0, 0] - prev[px4, 0])*prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24645: SimplifyCount[And] + SimplifyCount[prev[px0, 1]*(prev[px0, 0] - prev[px4, 0]) + prev[py0, 1]*(prev[py0, 0] - prev[py4, 0]) == (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx4] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy4]] + SimplifyCount[(prev[py0, 0] - prev[py4, 0])*Derivative[1][dx4] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy4] == prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) - (prev[px0, 0] - prev[px4, 0])*prev[py4, 1]] + SimplifyCount[Derivative[2][dx4] == 0] + SimplifyCount[Derivative[2][dy4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[prev[px0, 1]*(prev[px0, 0] - prev[px4, 0]) + prev[py0, 1]*(prev[py0, 0] - prev[py4, 0]) == (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx4] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy4]] + SimplifyCount[(prev[py0, 0] - prev[py4, 0])*Derivative[1][dx4] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy4] == prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) - (prev[px0, 0] - prev[px4, 0])*prev[py4, 1]] + SimplifyCount[Derivative[2][dx4] == 0] + SimplifyCount[Derivative[2][dy4] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.035408}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24643: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[Derivative[2][dx4] == 0 && Derivative[2][dy4] == 0 && prev[px0, 1]*prev[px4, 0] + prev[py0, 1]*prev[py4, 0] + prev[px0, 0]*(-prev[px0, 1] + Derivative[1][dx4]) + prev[py0, 0]*Derivative[1][dy4] == prev[py0, 0]*prev[py0, 1] + prev[px4, 0]*Derivative[1][dx4] + prev[py4, 0]*Derivative[1][dy4] && prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px4, 0]*prev[py4, 1] + prev[py4, 0]*Derivative[1][dx4] + prev[px0, 0]*(-prev[py4, 1] + Derivative[1][dy4]) == prev[py0, 0]*Derivative[1][dx4] + prev[px4, 0]*Derivative[1][dy4],
	ux4 == prev[px4, 0] && Derivative[1][dx4] == prev[px4, 1] && uy4 == prev[py4, 0] && Derivative[1][dy4] == prev[py4, 1],
	True,
	True,
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24654: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24656: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[prev[px0, 1]*prev[px4, 0] + prev[px0, 0]*(-prev[px0, 1] + prev[px4, 1]) + prev[py0, 1]*prev[py4, 0] + prev[py0, 0]*prev[py4, 1] == prev[px4, 0]*prev[px4, 1] + prev[py0, 0]*prev[py0, 1] + prev[py4, 0]*prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24658: SimplifyCount[Equal] + SimplifyCount[prev[px0, 1]*prev[px4, 0] + prev[px0, 0]*(-prev[px0, 1] + prev[px4, 1]) + prev[py0, 1]*prev[py4, 0] + prev[py0, 0]*prev[py4, 1]] + SimplifyCount[prev[px4, 0]*prev[px4, 1] + prev[py0, 0]*prev[py0, 1] + prev[py4, 0]*prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px4, 1]*prev[py4, 0] + prev[px4, 0]*prev[py4, 1] == prev[px4, 1]*prev[py0, 0] + prev[px4, 0]*prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24660: SimplifyCount[Equal] + SimplifyCount[prev[px4, 1]*prev[py0, 0] + prev[px4, 0]*prev[py4, 1]] + SimplifyCount[prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px4, 1]*prev[py4, 0] + prev[px4, 0]*prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx4]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy4]]}, {1, SimplifyCount[Equal] + SimplifyCount[prev[px0, 1]*prev[px4, 0] + prev[px0, 0]*(-prev[px0, 1] + prev[px4, 1]) + prev[py0, 1]*prev[py4, 0] + prev[py0, 0]*prev[py4, 1]] + SimplifyCount[prev[px4, 0]*prev[px4, 1] + prev[py0, 0]*prev[py0, 1] + prev[py4, 0]*prev[py4, 1]]}, {1, SimplifyCount[Equal] + SimplifyCount[prev[px4, 1]*prev[py0, 0] + prev[px4, 0]*prev[py4, 1]] + SimplifyCount[prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px4, 1]*prev[py4, 0] + prev[px4, 0]*prev[py4, 1]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 4, 0.003401}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$24662: {prev[px0, 1]*prev[px4, 0] + prev[px0, 0]*(-prev[px0, 1] + prev[px4, 1]) + prev[py0, 1]*prev[py4, 0] + prev[py0, 0]*prev[py4, 1] == prev[px4, 0]*prev[px4, 1] + prev[py0, 0]*prev[py0, 1] + prev[py4, 0]*prev[py4, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24676: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24678: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[False]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24680: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx4]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy4]]}, {1, 1}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.000212}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$24653: False, resultConstraint: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpTrue$24653: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$24653: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24652: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@ConsistencyChecker.cpp 299 function: check_consistency_foreach   
@PhaseSimulator.cpp 359 function: simulate_ms   INCONSISTENT: {}
@IncrementalModuleSet.cpp 243 function: generate_new_ms   %% inconsistent module set : {COL(x0,y0,x4,y4,1), CONST(x0), CONST(y0)}
@IncrementalModuleSet.cpp 249 function: generate_new_ms   %% maximal consistent module set : 
@IncrementalModuleSet.cpp 39 function: get_removable_module_sets   %% candidate modules : {COL(x0,y0,x4,y4,1), CONST(x0), CONST(y0)}

@IncrementalModuleSet.cpp 40 function: get_removable_module_sets   %% current modules : {}

@IncrementalModuleSet.cpp 86 function: get_removable_module_sets   %% removable modules : {CONST(x0)} , {CONST(y0)} , 

@IncrementalModuleSet.cpp 285 function: generate_new_ms   %% new ms : {CONST(x0)}
@IncrementalModuleSet.cpp 285 function: generate_new_ms   %% new ms : {CONST(y0)}
@IncrementalModuleSet.cpp 243 function: generate_new_ms   %% inconsistent module set : {COL(x0,y0,x4,y4,1), CONST(x4), CONST(y4)}
@IncrementalModuleSet.cpp 249 function: generate_new_ms   %% maximal consistent module set : 
@IncrementalModuleSet.cpp 39 function: get_removable_module_sets   %% candidate modules : {COL(x0,y0,x4,y4,1), CONST(x4), CONST(y4)}

@IncrementalModuleSet.cpp 40 function: get_removable_module_sets   %% current modules : {CONST(x0)}

@IncrementalModuleSet.cpp 86 function: get_removable_module_sets   %% removable modules : {CONST(x4)} , {CONST(y4)} , 

@IncrementalModuleSet.cpp 285 function: generate_new_ms   %% new ms : {CONST(x0), CONST(x4)}
@IncrementalModuleSet.cpp 285 function: generate_new_ms   %% new ms : {CONST(x0), CONST(y4)}
@IncrementalModuleSet.cpp 39 function: get_removable_module_sets   %% candidate modules : {COL(x0,y0,x4,y4,1), CONST(x4), CONST(y4)}

@IncrementalModuleSet.cpp 40 function: get_removable_module_sets   %% current modules : {CONST(y0)}

@IncrementalModuleSet.cpp 86 function: get_removable_module_sets   %% removable modules : {CONST(x4)} , {CONST(y4)} , 

@IncrementalModuleSet.cpp 285 function: generate_new_ms   %% new ms : {CONST(x4), CONST(y0)}
@IncrementalModuleSet.cpp 285 function: generate_new_ms   %% new ms : {CONST(y0), CONST(y4)}
@PhaseSimulator.cpp 326 function: simulate_ms   
--- next unadopted module set ---
CONST(x0).
CONST(x4).

@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {CONST(x0).
, CONST(x4).
, x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-))&1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-)&x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)&x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)}
@ConsistencyChecker.cpp 394 function: check_consistency   get_infix_string(ask): (x0--x4-)^2+(y0--y4-)^2=4=>x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-))&1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-)&x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)&x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)
@ConsistencyChecker.cpp 398 function: check_consistency   related[1/2]: {y0''=0, x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-)), x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24688: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0,
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24690: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy0,
	prev[py0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24693: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][dy0],
	prev[py0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24696: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][dy0] == 0 && (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx0] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy0] == (prev[px0, 0] - prev[px4, 0])*prev[px4, 1] + (prev[py0, 0] - prev[py4, 0])*prev[py4, 1] && (prev[py0, 0] - prev[py4, 0])*Derivative[1][dx0] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy0] == -((prev[px0, 0] - prev[px4, 0])*prev[py0, 1]) + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0])]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy0] == 0 && (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx0] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy0] == (prev[px0, 0] - prev[px4, 0])*prev[px4, 1] + (prev[py0, 0] - prev[py4, 0])*prev[py4, 1] && (prev[py0, 0] - prev[py4, 0])*Derivative[1][dx0] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy0] == -((prev[px0, 0] - prev[px4, 0])*prev[py0, 1]) + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0])]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24701: SimplifyCount[And] + SimplifyCount[(prev[py0, 0] - prev[py4, 0])*Derivative[1][dx0] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy0] == -((prev[px0, 0] - prev[px4, 0])*prev[py0, 1]) + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0])] + SimplifyCount[(prev[px0, 0] - prev[px4, 0])*Derivative[1][dx0] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy0] == (prev[px0, 0] - prev[px4, 0])*prev[px4, 1] + (prev[py0, 0] - prev[py4, 0])*prev[py4, 1]] + SimplifyCount[Derivative[2][dy0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[(prev[py0, 0] - prev[py4, 0])*Derivative[1][dx0] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy0] == -((prev[px0, 0] - prev[px4, 0])*prev[py0, 1]) + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0])] + SimplifyCount[(prev[px0, 0] - prev[px4, 0])*Derivative[1][dx0] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy0] == (prev[px0, 0] - prev[px4, 0])*prev[px4, 1] + (prev[py0, 0] - prev[py4, 0])*prev[py4, 1]] + SimplifyCount[Derivative[2][dy0] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.001674}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24699: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[Derivative[2][dy0] == 0 && prev[px0, 0]*(prev[px4, 1] - Derivative[1][dx0]) + prev[px4, 0]*(-prev[px4, 1] + Derivative[1][dx0]) + (prev[py0, 0] - prev[py4, 0])*(prev[py4, 1] - Derivative[1][dy0]) == 0 && prev[px4, 0]*prev[py0, 1] + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[py4, 0]*Derivative[1][dx0] + prev[px0, 0]*(-prev[py0, 1] + Derivative[1][dy0]) == prev[py0, 0]*Derivative[1][dx0] + prev[px4, 0]*Derivative[1][dy0],
	ux0 == prev[px0, 0] && uy0 == prev[py0, 0] && Derivative[1][dy0] == prev[py0, 1],
	True,
	True,
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24710: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[(prev[py0, 0] - prev[py4, 0])*(-prev[py0, 1] + prev[py4, 1]) + prev[px0, 0]*(prev[px4, 1] - Derivative[1][dx0]) + prev[px4, 0]*(-prev[px4, 1] + Derivative[1][dx0]) == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24712: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[(prev[py0, 0] - prev[py4, 0])*(-prev[py0, 1] + prev[py4, 1]) + prev[px0, 0]*(prev[px4, 1] - Derivative[1][dx0]) + prev[px4, 0]*(-prev[px4, 1] + Derivative[1][dx0])]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[prev[px4, 0]*prev[py0, 1] + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[py4, 0]*Derivative[1][dx0] == prev[px4, 0]*prev[py0, 1] + prev[py0, 0]*Derivative[1][dx0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24714: SimplifyCount[Equal] + SimplifyCount[prev[px4, 0]*prev[py0, 1] + prev[py0, 0]*Derivative[1][dx0]] + SimplifyCount[prev[px4, 0]*prev[py0, 1] + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[py4, 0]*Derivative[1][dx0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy0]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[(prev[py0, 0] - prev[py4, 0])*(-prev[py0, 1] + prev[py4, 1]) + prev[px0, 0]*(prev[px4, 1] - Derivative[1][dx0]) + prev[px4, 0]*(-prev[px4, 1] + Derivative[1][dx0])]}, {1, SimplifyCount[Equal] + SimplifyCount[prev[px4, 0]*prev[py0, 1] + prev[py0, 0]*Derivative[1][dx0]] + SimplifyCount[prev[px4, 0]*prev[py0, 1] + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[py4, 0]*Derivative[1][dx0]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.009827}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$24716: {(prev[py0, 0] - prev[py4, 0])*(prev[py0, 1] - prev[py4, 1]) + prev[px4, 0]*(prev[px4, 1] - Derivative[1][dx0]) + prev[px0, 0]*(-prev[px4, 1] + Derivative[1][dx0]) == 0, (prev[py0, 0] - prev[py4, 0])*(prev[px0, 1] - Derivative[1][dx0]) == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24717: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[-25 + (2435 - Sqrt[323])/101 - 25*Derivative[1][dx0] - (2*(-1267 + 5*Sqrt[323])*Derivative[1][dx0])/101 == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24719: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[-25 + (2435 - Sqrt[323])/101 - 25*Derivative[1][dx0] - (2*(-1267 + 5*Sqrt[323])*Derivative[1][dx0])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[(-25 + (2435 - Sqrt[323])/101)*(10 - Derivative[1][dx0]) == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24721: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[(-25 + (2435 - Sqrt[323])/101)*(10 - Derivative[1][dx0])]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy0]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[-25 + (2435 - Sqrt[323])/101 - 25*Derivative[1][dx0] - (2*(-1267 + 5*Sqrt[323])*Derivative[1][dx0])/101]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[(-25 + (2435 - Sqrt[323])/101)*(10 - Derivative[1][dx0])]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.030943}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$24709: False, resultConstraint: Derivative[2][dy0] == 0 && 90 + Sqrt[323] + (-9 + 10*Sqrt[323])*Derivative[1][dx0] == 0 && Derivative[1][dx0] == 10

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpTrue$24709: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$24709: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24708: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@ConsistencyChecker.cpp 299 function: check_consistency_foreach   
@ConsistencyChecker.cpp 398 function: check_consistency   related[2/2]: {y4''=0, 1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-), x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24729: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux4,
	prev[px4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24731: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy4,
	prev[py4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24734: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][dy4],
	prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24737: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][dy4] == 0 && prev[px0, 1]*(prev[px0, 0] - prev[px4, 0]) + prev[py0, 1]*(prev[py0, 0] - prev[py4, 0]) == (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx4] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy4] && (prev[py0, 0] - prev[py4, 0])*Derivative[1][dx4] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy4] == prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) - (prev[px0, 0] - prev[px4, 0])*prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy4] == 0 && prev[px0, 1]*(prev[px0, 0] - prev[px4, 0]) + prev[py0, 1]*(prev[py0, 0] - prev[py4, 0]) == (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx4] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy4] && (prev[py0, 0] - prev[py4, 0])*Derivative[1][dx4] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy4] == prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) - (prev[px0, 0] - prev[px4, 0])*prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24742: SimplifyCount[And] + SimplifyCount[prev[px0, 1]*(prev[px0, 0] - prev[px4, 0]) + prev[py0, 1]*(prev[py0, 0] - prev[py4, 0]) == (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx4] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy4]] + SimplifyCount[(prev[py0, 0] - prev[py4, 0])*Derivative[1][dx4] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy4] == prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) - (prev[px0, 0] - prev[px4, 0])*prev[py4, 1]] + SimplifyCount[Derivative[2][dy4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[prev[px0, 1]*(prev[px0, 0] - prev[px4, 0]) + prev[py0, 1]*(prev[py0, 0] - prev[py4, 0]) == (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx4] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy4]] + SimplifyCount[(prev[py0, 0] - prev[py4, 0])*Derivative[1][dx4] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy4] == prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) - (prev[px0, 0] - prev[px4, 0])*prev[py4, 1]] + SimplifyCount[Derivative[2][dy4] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00128}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24740: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[Derivative[2][dy4] == 0 && prev[px0, 1]*prev[px4, 0] + prev[py0, 1]*prev[py4, 0] + prev[px0, 0]*(-prev[px0, 1] + Derivative[1][dx4]) + prev[py0, 0]*Derivative[1][dy4] == prev[py0, 0]*prev[py0, 1] + prev[px4, 0]*Derivative[1][dx4] + prev[py4, 0]*Derivative[1][dy4] && prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px4, 0]*prev[py4, 1] + prev[py4, 0]*Derivative[1][dx4] + prev[px0, 0]*(-prev[py4, 1] + Derivative[1][dy4]) == prev[py0, 0]*Derivative[1][dx4] + prev[px4, 0]*Derivative[1][dy4],
	ux4 == prev[px4, 0] && uy4 == prev[py4, 0] && Derivative[1][dy4] == prev[py4, 1],
	True,
	True,
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24751: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[prev[px0, 1]*prev[px4, 0] + prev[py0, 1]*prev[py4, 0] + prev[py0, 0]*prev[py4, 1] + prev[px0, 0]*(-prev[px0, 1] + Derivative[1][dx4]) == prev[py0, 0]*prev[py0, 1] + prev[py4, 0]*prev[py4, 1] + prev[px4, 0]*Derivative[1][dx4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24753: SimplifyCount[Equal] + SimplifyCount[prev[py0, 0]*prev[py0, 1] + prev[py4, 0]*prev[py4, 1] + prev[px4, 0]*Derivative[1][dx4]] + SimplifyCount[prev[px0, 1]*prev[px4, 0] + prev[py0, 1]*prev[py4, 0] + prev[py0, 0]*prev[py4, 1] + prev[px0, 0]*(-prev[px0, 1] + Derivative[1][dx4])]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px4, 0]*prev[py4, 1] + prev[py4, 0]*Derivative[1][dx4] == prev[px4, 0]*prev[py4, 1] + prev[py0, 0]*Derivative[1][dx4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24755: SimplifyCount[Equal] + SimplifyCount[prev[px4, 0]*prev[py4, 1] + prev[py0, 0]*Derivative[1][dx4]] + SimplifyCount[prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px4, 0]*prev[py4, 1] + prev[py4, 0]*Derivative[1][dx4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy4]]}, {1, SimplifyCount[Equal] + SimplifyCount[prev[py0, 0]*prev[py0, 1] + prev[py4, 0]*prev[py4, 1] + prev[px4, 0]*Derivative[1][dx4]] + SimplifyCount[prev[px0, 1]*prev[px4, 0] + prev[py0, 1]*prev[py4, 0] + prev[py0, 0]*prev[py4, 1] + prev[px0, 0]*(-prev[px0, 1] + Derivative[1][dx4])]}, {1, SimplifyCount[Equal] + SimplifyCount[prev[px4, 0]*prev[py4, 1] + prev[py0, 0]*Derivative[1][dx4]] + SimplifyCount[prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px4, 0]*prev[py4, 1] + prev[py4, 0]*Derivative[1][dx4]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.005857}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$24757: {prev[px0, 1]*prev[px4, 0] + prev[py0, 1]*prev[py4, 0] + prev[py0, 0]*prev[py4, 1] + prev[px0, 0]*(-prev[px0, 1] + Derivative[1][dx4]) == prev[py0, 0]*prev[py0, 1] + prev[py4, 0]*prev[py4, 1] + prev[px4, 0]*Derivative[1][dx4], (prev[py0, 0] - prev[py4, 0])*(prev[px4, 1] - Derivative[1][dx4]) == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dy4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24758: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[275 - (2*(-1267 + 5*Sqrt[323])*(-10 + Derivative[1][dx4]))/101 == (2435 - Sqrt[323])/101 + 25*Derivative[1][dx4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24760: SimplifyCount[Equal] + SimplifyCount[275 - (2*(-1267 + 5*Sqrt[323])*(-10 + Derivative[1][dx4]))/101] + SimplifyCount[(2435 - Sqrt[323])/101 + 25*Derivative[1][dx4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[-((-25 + (2435 - Sqrt[323])/101)*Derivative[1][dx4]) == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24762: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[-((-25 + (2435 - Sqrt[323])/101)*Derivative[1][dx4])]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dy4]]}, {1, SimplifyCount[Equal] + SimplifyCount[275 - (2*(-1267 + 5*Sqrt[323])*(-10 + Derivative[1][dx4]))/101] + SimplifyCount[(2435 - Sqrt[323])/101 + 25*Derivative[1][dx4]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[-((-25 + (2435 - Sqrt[323])/101)*Derivative[1][dx4])]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.037415}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$24750: False, resultConstraint: Derivative[2][dy4] == 0 && (-9 + 10*Sqrt[323])*Derivative[1][dx4] == 101*Sqrt[323] && Derivative[1][dx4] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpTrue$24750: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$24750: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24749: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@ConsistencyChecker.cpp 299 function: check_consistency_foreach   
@PhaseSimulator.cpp 359 function: simulate_ms   INCONSISTENT: {Constraint[ConstraintCall<CONST(Variable[x0])>[Always[Equal[Differential[Differential[Variable[x0]]],Number[0]]]]], Constraint[ConstraintCall<CONST(Variable[x4])>[Always[Equal[Differential[Differential[Variable[x4]]],Number[0]]]]]}
@IncrementalModuleSet.cpp 243 function: generate_new_ms   %% inconsistent module set : {COL(x0,y0,x4,y4,1), CONST(y0)}
@IncrementalModuleSet.cpp 249 function: generate_new_ms   %% maximal consistent module set : 
@IncrementalModuleSet.cpp 39 function: get_removable_module_sets   %% candidate modules : {COL(x0,y0,x4,y4,1), CONST(y0)}

@IncrementalModuleSet.cpp 40 function: get_removable_module_sets   %% current modules : {CONST(x0), CONST(x4)}

@IncrementalModuleSet.cpp 86 function: get_removable_module_sets   %% removable modules : {CONST(y0)} , 

@IncrementalModuleSet.cpp 285 function: generate_new_ms   %% new ms : {CONST(x0), CONST(x4), CONST(y0)}
@IncrementalModuleSet.cpp 39 function: get_removable_module_sets   %% candidate modules : {COL(x0,y0,x4,y4,1), CONST(y0)}

@IncrementalModuleSet.cpp 40 function: get_removable_module_sets   %% current modules : {CONST(x0), CONST(y4)}

@IncrementalModuleSet.cpp 86 function: get_removable_module_sets   %% removable modules : {CONST(y0)} , 

@IncrementalModuleSet.cpp 285 function: generate_new_ms   %% new ms : {CONST(x0), CONST(y0), CONST(y4)}
@IncrementalModuleSet.cpp 243 function: generate_new_ms   %% inconsistent module set : {COL(x0,y0,x4,y4,1), CONST(y4)}
@IncrementalModuleSet.cpp 249 function: generate_new_ms   %% maximal consistent module set : 
@IncrementalModuleSet.cpp 39 function: get_removable_module_sets   %% candidate modules : {COL(x0,y0,x4,y4,1), CONST(y4)}

@IncrementalModuleSet.cpp 40 function: get_removable_module_sets   %% current modules : {CONST(x4), CONST(y0)}

@IncrementalModuleSet.cpp 86 function: get_removable_module_sets   %% removable modules : {CONST(y4)} , 

@IncrementalModuleSet.cpp 285 function: generate_new_ms   %% new ms : {CONST(x4), CONST(y0), CONST(y4)}
@IncrementalModuleSet.cpp 39 function: get_removable_module_sets   %% candidate modules : {COL(x0,y0,x4,y4,1), CONST(y4)}

@IncrementalModuleSet.cpp 40 function: get_removable_module_sets   %% current modules : {CONST(x0), CONST(x4), CONST(y0)}

@IncrementalModuleSet.cpp 86 function: get_removable_module_sets   %% removable modules : {CONST(y4)} , 

@IncrementalModuleSet.cpp 285 function: generate_new_ms   %% new ms : {CONST(x0), CONST(x4), CONST(y0), CONST(y4)}
@PhaseSimulator.cpp 326 function: simulate_ms   
--- next unadopted module set ---
CONST(y0).
CONST(y4).

@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {CONST(y0).
, CONST(y4).
, x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-))&1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-)&x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)&x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)}
@ConsistencyChecker.cpp 394 function: check_consistency   get_infix_string(ask): (x0--x4-)^2+(y0--y4-)^2=4=>x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-))&1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-)&x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)&x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)
@ConsistencyChecker.cpp 398 function: check_consistency   related[1/2]: {x0''=0, x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-)), x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24770: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0,
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24772: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][dx0],
	prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24775: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy0,
	prev[py0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24778: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][dx0] == 0 && (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx0] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy0] == (prev[px0, 0] - prev[px4, 0])*prev[px4, 1] + (prev[py0, 0] - prev[py4, 0])*prev[py4, 1] && (prev[py0, 0] - prev[py4, 0])*Derivative[1][dx0] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy0] == -((prev[px0, 0] - prev[px4, 0])*prev[py0, 1]) + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0])]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx0] == 0 && (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx0] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy0] == (prev[px0, 0] - prev[px4, 0])*prev[px4, 1] + (prev[py0, 0] - prev[py4, 0])*prev[py4, 1] && (prev[py0, 0] - prev[py4, 0])*Derivative[1][dx0] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy0] == -((prev[px0, 0] - prev[px4, 0])*prev[py0, 1]) + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0])]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24783: SimplifyCount[And] + SimplifyCount[(prev[py0, 0] - prev[py4, 0])*Derivative[1][dx0] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy0] == -((prev[px0, 0] - prev[px4, 0])*prev[py0, 1]) + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0])] + SimplifyCount[(prev[px0, 0] - prev[px4, 0])*Derivative[1][dx0] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy0] == (prev[px0, 0] - prev[px4, 0])*prev[px4, 1] + (prev[py0, 0] - prev[py4, 0])*prev[py4, 1]] + SimplifyCount[Derivative[2][dx0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[(prev[py0, 0] - prev[py4, 0])*Derivative[1][dx0] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy0] == -((prev[px0, 0] - prev[px4, 0])*prev[py0, 1]) + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0])] + SimplifyCount[(prev[px0, 0] - prev[px4, 0])*Derivative[1][dx0] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy0] == (prev[px0, 0] - prev[px4, 0])*prev[px4, 1] + (prev[py0, 0] - prev[py4, 0])*prev[py4, 1]] + SimplifyCount[Derivative[2][dx0] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.001298}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24781: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[Derivative[2][dx0] == 0 && prev[px0, 0]*(prev[px4, 1] - Derivative[1][dx0]) + prev[px4, 0]*(-prev[px4, 1] + Derivative[1][dx0]) + (prev[py0, 0] - prev[py4, 0])*(prev[py4, 1] - Derivative[1][dy0]) == 0 && prev[px4, 0]*prev[py0, 1] + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[py4, 0]*Derivative[1][dx0] + prev[px0, 0]*(-prev[py0, 1] + Derivative[1][dy0]) == prev[py0, 0]*Derivative[1][dx0] + prev[px4, 0]*Derivative[1][dy0],
	ux0 == prev[px0, 0] && Derivative[1][dx0] == prev[px0, 1] && uy0 == prev[py0, 0],
	True,
	True,
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24792: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[prev[px4, 0]*(prev[px0, 1] - prev[px4, 1]) + prev[px0, 0]*(-prev[px0, 1] + prev[px4, 1]) + (prev[py0, 0] - prev[py4, 0])*(prev[py4, 1] - Derivative[1][dy0]) == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24794: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[prev[px4, 0]*(prev[px0, 1] - prev[px4, 1]) + prev[px0, 0]*(-prev[px0, 1] + prev[px4, 1]) + (prev[py0, 0] - prev[py4, 0])*(prev[py4, 1] - Derivative[1][dy0])]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[prev[px4, 0]*prev[py0, 1] + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px0, 1]*prev[py4, 0] + prev[px0, 0]*(-prev[py0, 1] + Derivative[1][dy0]) == prev[px0, 1]*prev[py0, 0] + prev[px4, 0]*Derivative[1][dy0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24796: SimplifyCount[Equal] + SimplifyCount[prev[px0, 1]*prev[py0, 0] + prev[px4, 0]*Derivative[1][dy0]] + SimplifyCount[prev[px4, 0]*prev[py0, 1] + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px0, 1]*prev[py4, 0] + prev[px0, 0]*(-prev[py0, 1] + Derivative[1][dy0])]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx0]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[prev[px4, 0]*(prev[px0, 1] - prev[px4, 1]) + prev[px0, 0]*(-prev[px0, 1] + prev[px4, 1]) + (prev[py0, 0] - prev[py4, 0])*(prev[py4, 1] - Derivative[1][dy0])]}, {1, SimplifyCount[Equal] + SimplifyCount[prev[px0, 1]*prev[py0, 0] + prev[px4, 0]*Derivative[1][dy0]] + SimplifyCount[prev[px4, 0]*prev[py0, 1] + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px0, 1]*prev[py4, 0] + prev[px0, 0]*(-prev[py0, 1] + Derivative[1][dy0])]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.00646}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$24798: {prev[px4, 0]*(prev[px0, 1] - prev[px4, 1]) + prev[px0, 0]*(-prev[px0, 1] + prev[px4, 1]) + (prev[py0, 0] - prev[py4, 0])*(prev[py4, 1] - Derivative[1][dy0]) == 0, (prev[px0, 0] - prev[px4, 0])*(prev[py0, 1] - Derivative[1][dy0]) == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24799: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[250 + (20*(-1267 + 5*Sqrt[323]))/101 - (-25 + (2435 - Sqrt[323])/101)*Derivative[1][dy0] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24801: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[250 + (20*(-1267 + 5*Sqrt[323]))/101 - (-25 + (2435 - Sqrt[323])/101)*Derivative[1][dy0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[(-25 - (2*(-1267 + 5*Sqrt[323]))/101)*(1 - Derivative[1][dy0]) == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24803: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[(-25 - (2*(-1267 + 5*Sqrt[323]))/101)*(1 - Derivative[1][dy0])]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx0]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[250 + (20*(-1267 + 5*Sqrt[323]))/101 - (-25 + (2435 - Sqrt[323])/101)*Derivative[1][dy0]]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[(-25 - (2*(-1267 + 5*Sqrt[323]))/101)*(1 - Derivative[1][dy0])]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.012375}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$24791: False, resultConstraint: Derivative[2][dx0] == 0 && 100*Sqrt[323] + (90 + Sqrt[323])*Derivative[1][dy0] == 90 && Derivative[1][dy0] == 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpTrue$24791: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$24791: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24790: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@ConsistencyChecker.cpp 299 function: check_consistency_foreach   
@ConsistencyChecker.cpp 398 function: check_consistency   related[2/2]: {x4''=0, 1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-), x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24811: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux4,
	prev[px4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24813: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][dx4],
	prev[px4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24816: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy4,
	prev[py4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24819: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][dx4] == 0 && prev[px0, 1]*(prev[px0, 0] - prev[px4, 0]) + prev[py0, 1]*(prev[py0, 0] - prev[py4, 0]) == (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx4] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy4] && (prev[py0, 0] - prev[py4, 0])*Derivative[1][dx4] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy4] == prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) - (prev[px0, 0] - prev[px4, 0])*prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx4] == 0 && prev[px0, 1]*(prev[px0, 0] - prev[px4, 0]) + prev[py0, 1]*(prev[py0, 0] - prev[py4, 0]) == (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx4] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy4] && (prev[py0, 0] - prev[py4, 0])*Derivative[1][dx4] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy4] == prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) - (prev[px0, 0] - prev[px4, 0])*prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24824: SimplifyCount[And] + SimplifyCount[prev[px0, 1]*(prev[px0, 0] - prev[px4, 0]) + prev[py0, 1]*(prev[py0, 0] - prev[py4, 0]) == (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx4] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy4]] + SimplifyCount[(prev[py0, 0] - prev[py4, 0])*Derivative[1][dx4] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy4] == prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) - (prev[px0, 0] - prev[px4, 0])*prev[py4, 1]] + SimplifyCount[Derivative[2][dx4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[prev[px0, 1]*(prev[px0, 0] - prev[px4, 0]) + prev[py0, 1]*(prev[py0, 0] - prev[py4, 0]) == (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx4] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy4]] + SimplifyCount[(prev[py0, 0] - prev[py4, 0])*Derivative[1][dx4] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy4] == prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) - (prev[px0, 0] - prev[px4, 0])*prev[py4, 1]] + SimplifyCount[Derivative[2][dx4] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.001274}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24822: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[Derivative[2][dx4] == 0 && prev[px0, 1]*prev[px4, 0] + prev[py0, 1]*prev[py4, 0] + prev[px0, 0]*(-prev[px0, 1] + Derivative[1][dx4]) + prev[py0, 0]*Derivative[1][dy4] == prev[py0, 0]*prev[py0, 1] + prev[px4, 0]*Derivative[1][dx4] + prev[py4, 0]*Derivative[1][dy4] && prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px4, 0]*prev[py4, 1] + prev[py4, 0]*Derivative[1][dx4] + prev[px0, 0]*(-prev[py4, 1] + Derivative[1][dy4]) == prev[py0, 0]*Derivative[1][dx4] + prev[px4, 0]*Derivative[1][dy4],
	ux4 == prev[px4, 0] && Derivative[1][dx4] == prev[px4, 1] && uy4 == prev[py4, 0],
	True,
	True,
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24833: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[prev[px0, 1]*prev[px4, 0] + prev[px0, 0]*(-prev[px0, 1] + prev[px4, 1]) + prev[py0, 1]*prev[py4, 0] + prev[py0, 0]*Derivative[1][dy4] == prev[px4, 0]*prev[px4, 1] + prev[py0, 0]*prev[py0, 1] + prev[py4, 0]*Derivative[1][dy4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24835: SimplifyCount[Equal] + SimplifyCount[prev[px0, 1]*prev[px4, 0] + prev[px0, 0]*(-prev[px0, 1] + prev[px4, 1]) + prev[py0, 1]*prev[py4, 0] + prev[py0, 0]*Derivative[1][dy4]] + SimplifyCount[prev[px4, 0]*prev[px4, 1] + prev[py0, 0]*prev[py0, 1] + prev[py4, 0]*Derivative[1][dy4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px4, 1]*prev[py4, 0] + prev[px4, 0]*prev[py4, 1] + prev[px0, 0]*(-prev[py4, 1] + Derivative[1][dy4]) == prev[px4, 1]*prev[py0, 0] + prev[px4, 0]*Derivative[1][dy4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24837: SimplifyCount[Equal] + SimplifyCount[prev[px4, 1]*prev[py0, 0] + prev[px4, 0]*Derivative[1][dy4]] + SimplifyCount[prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px4, 1]*prev[py4, 0] + prev[px4, 0]*prev[py4, 1] + prev[px0, 0]*(-prev[py4, 1] + Derivative[1][dy4])]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx4]]}, {1, SimplifyCount[Equal] + SimplifyCount[prev[px0, 1]*prev[px4, 0] + prev[px0, 0]*(-prev[px0, 1] + prev[px4, 1]) + prev[py0, 1]*prev[py4, 0] + prev[py0, 0]*Derivative[1][dy4]] + SimplifyCount[prev[px4, 0]*prev[px4, 1] + prev[py0, 0]*prev[py0, 1] + prev[py4, 0]*Derivative[1][dy4]]}, {1, SimplifyCount[Equal] + SimplifyCount[prev[px4, 1]*prev[py0, 0] + prev[px4, 0]*Derivative[1][dy4]] + SimplifyCount[prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px4, 1]*prev[py4, 0] + prev[px4, 0]*prev[py4, 1] + prev[px0, 0]*(-prev[py4, 1] + Derivative[1][dy4])]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.007245}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$24839: {prev[px0, 1]*prev[px4, 0] + prev[px0, 0]*(-prev[px0, 1] + prev[px4, 1]) + prev[py0, 1]*prev[py4, 0] + prev[py0, 0]*Derivative[1][dy4] == prev[px4, 0]*prev[px4, 1] + prev[py0, 0]*prev[py0, 1] + prev[py4, 0]*Derivative[1][dy4], (prev[px0, 0] - prev[px4, 0])*(prev[py4, 1] - Derivative[1][dy4]) == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][dx4] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24840: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[275 + (20*(-1267 + 5*Sqrt[323]))/101 + ((2435 - Sqrt[323])*Derivative[1][dy4])/101 == (2435 - Sqrt[323])/101 + 25*Derivative[1][dy4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24842: SimplifyCount[Equal] + SimplifyCount[(2435 - Sqrt[323])/101 + 25*Derivative[1][dy4]] + SimplifyCount[275 + (20*(-1267 + 5*Sqrt[323]))/101 + ((2435 - Sqrt[323])*Derivative[1][dy4])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[-((-25 - (2*(-1267 + 5*Sqrt[323]))/101)*Derivative[1][dy4]) == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24844: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[-((-25 - (2*(-1267 + 5*Sqrt[323]))/101)*Derivative[1][dy4])]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][dx4]]}, {1, SimplifyCount[Equal] + SimplifyCount[(2435 - Sqrt[323])/101 + 25*Derivative[1][dy4]] + SimplifyCount[275 + (20*(-1267 + 5*Sqrt[323]))/101 + ((2435 - Sqrt[323])*Derivative[1][dy4])/101]}, {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[-((-25 - (2*(-1267 + 5*Sqrt[323]))/101)*Derivative[1][dy4])]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 3, 0.026786}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$24832: False, resultConstraint: Derivative[2][dx4] == 0 && (90 + Sqrt[323])*Derivative[1][dy4] == 101*Sqrt[323] && Derivative[1][dy4] == 0

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpTrue$24832: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$24832: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24831: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@ConsistencyChecker.cpp 299 function: check_consistency_foreach   
@PhaseSimulator.cpp 359 function: simulate_ms   INCONSISTENT: {Constraint[ConstraintCall<CONST(Variable[y0])>[Always[Equal[Differential[Differential[Variable[y0]]],Number[0]]]]], Constraint[ConstraintCall<CONST(Variable[y4])>[Always[Equal[Differential[Differential[Variable[y4]]],Number[0]]]]]}
@IncrementalModuleSet.cpp 243 function: generate_new_ms   %% inconsistent module set : {COL(x0,y0,x4,y4,1), CONST(x0)}
@IncrementalModuleSet.cpp 249 function: generate_new_ms   %% maximal consistent module set : 
@IncrementalModuleSet.cpp 39 function: get_removable_module_sets   %% candidate modules : {COL(x0,y0,x4,y4,1), CONST(x0)}

@IncrementalModuleSet.cpp 40 function: get_removable_module_sets   %% current modules : {CONST(y0), CONST(y4)}

@IncrementalModuleSet.cpp 86 function: get_removable_module_sets   %% removable modules : {CONST(x0)} , 

@IncrementalModuleSet.cpp 285 function: generate_new_ms   %% new ms : {CONST(x0), CONST(y0), CONST(y4)}
@IncrementalModuleSet.cpp 39 function: get_removable_module_sets   %% candidate modules : {COL(x0,y0,x4,y4,1), CONST(x0)}

@IncrementalModuleSet.cpp 40 function: get_removable_module_sets   %% current modules : {CONST(x4), CONST(y0), CONST(y4)}

@IncrementalModuleSet.cpp 86 function: get_removable_module_sets   %% removable modules : {CONST(x0)} , 

@IncrementalModuleSet.cpp 285 function: generate_new_ms   %% new ms : {CONST(x0), CONST(x4), CONST(y0), CONST(y4)}
@IncrementalModuleSet.cpp 243 function: generate_new_ms   %% inconsistent module set : {COL(x0,y0,x4,y4,1), CONST(x4)}
@IncrementalModuleSet.cpp 249 function: generate_new_ms   %% maximal consistent module set : 
@IncrementalModuleSet.cpp 39 function: get_removable_module_sets   %% candidate modules : {COL(x0,y0,x4,y4,1), CONST(x4)}

@IncrementalModuleSet.cpp 40 function: get_removable_module_sets   %% current modules : {CONST(x0), CONST(y0), CONST(y4)}

@IncrementalModuleSet.cpp 86 function: get_removable_module_sets   %% removable modules : {CONST(x4)} , 

@IncrementalModuleSet.cpp 285 function: generate_new_ms   %% new ms : {CONST(x0), CONST(x4), CONST(y0), CONST(y4)}
@PhaseSimulator.cpp 326 function: simulate_ms   
--- next unadopted module set ---
CONST(x0).
CONST(x4).
CONST(y0).
CONST(y4).

@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {CONST(x0).
, CONST(y0).
, CONST(x4).
, CONST(y4).
, x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-))&1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-)&x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)&x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)}
@ConsistencyChecker.cpp 394 function: check_consistency   get_infix_string(ask): (x0--x4-)^2+(y0--y4-)^2=4=>x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-))&1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-)&x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)&x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)
@ConsistencyChecker.cpp 398 function: check_consistency   related[1/2]: {x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-)), x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24852: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0,
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24854: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy0,
	prev[py0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24857: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[(prev[px0, 0] - prev[px4, 0])*Derivative[1][dx0] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy0] == (prev[px0, 0] - prev[px4, 0])*prev[px4, 1] + (prev[py0, 0] - prev[py4, 0])*prev[py4, 1] && (prev[py0, 0] - prev[py4, 0])*Derivative[1][dx0] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy0] == -((prev[px0, 0] - prev[px4, 0])*prev[py0, 1]) + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0])]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[(prev[px0, 0] - prev[px4, 0])*Derivative[1][dx0] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy0] == (prev[px0, 0] - prev[px4, 0])*prev[px4, 1] + (prev[py0, 0] - prev[py4, 0])*prev[py4, 1] && (prev[py0, 0] - prev[py4, 0])*Derivative[1][dx0] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy0] == -((prev[px0, 0] - prev[px4, 0])*prev[py0, 1]) + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0])]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24862: SimplifyCount[And] + SimplifyCount[(prev[py0, 0] - prev[py4, 0])*Derivative[1][dx0] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy0] == -((prev[px0, 0] - prev[px4, 0])*prev[py0, 1]) + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0])] + SimplifyCount[(prev[px0, 0] - prev[px4, 0])*Derivative[1][dx0] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy0] == (prev[px0, 0] - prev[px4, 0])*prev[px4, 1] + (prev[py0, 0] - prev[py4, 0])*prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[(prev[py0, 0] - prev[py4, 0])*Derivative[1][dx0] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy0] == -((prev[px0, 0] - prev[px4, 0])*prev[py0, 1]) + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0])] + SimplifyCount[(prev[px0, 0] - prev[px4, 0])*Derivative[1][dx0] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy0] == (prev[px0, 0] - prev[px4, 0])*prev[px4, 1] + (prev[py0, 0] - prev[py4, 0])*prev[py4, 1]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.001175}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24860: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[prev[px0, 0]*(prev[px4, 1] - Derivative[1][dx0]) + prev[px4, 0]*(-prev[px4, 1] + Derivative[1][dx0]) + (prev[py0, 0] - prev[py4, 0])*(prev[py4, 1] - Derivative[1][dy0]) == 0 && prev[px4, 0]*prev[py0, 1] + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[py4, 0]*Derivative[1][dx0] + prev[px0, 0]*(-prev[py0, 1] + Derivative[1][dy0]) == prev[py0, 0]*Derivative[1][dx0] + prev[px4, 0]*Derivative[1][dy0],
	ux0 == prev[px0, 0] && uy0 == prev[py0, 0],
	True,
	True,
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[prev[px0, 0]*(prev[px4, 1] - Derivative[1][dx0]) + prev[px4, 0]*(-prev[px4, 1] + Derivative[1][dx0]) + (prev[py0, 0] - prev[py4, 0])*(prev[py4, 1] - Derivative[1][dy0]) == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24871: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[prev[px0, 0]*(prev[px4, 1] - Derivative[1][dx0]) + prev[px4, 0]*(-prev[px4, 1] + Derivative[1][dx0]) + (prev[py0, 0] - prev[py4, 0])*(prev[py4, 1] - Derivative[1][dy0])]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[prev[px4, 0]*prev[py0, 1] + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[py4, 0]*Derivative[1][dx0] + prev[px0, 0]*(-prev[py0, 1] + Derivative[1][dy0]) == prev[py0, 0]*Derivative[1][dx0] + prev[px4, 0]*Derivative[1][dy0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24873: SimplifyCount[Equal] + SimplifyCount[prev[py0, 0]*Derivative[1][dx0] + prev[px4, 0]*Derivative[1][dy0]] + SimplifyCount[prev[px4, 0]*prev[py0, 1] + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[py4, 0]*Derivative[1][dx0] + prev[px0, 0]*(-prev[py0, 1] + Derivative[1][dy0])]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[prev[px0, 0]*(prev[px4, 1] - Derivative[1][dx0]) + prev[px4, 0]*(-prev[px4, 1] + Derivative[1][dx0]) + (prev[py0, 0] - prev[py4, 0])*(prev[py4, 1] - Derivative[1][dy0])]}, {1, SimplifyCount[Equal] + SimplifyCount[prev[py0, 0]*Derivative[1][dx0] + prev[px4, 0]*Derivative[1][dy0]] + SimplifyCount[prev[px4, 0]*prev[py0, 1] + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[py4, 0]*Derivative[1][dx0] + prev[px0, 0]*(-prev[py0, 1] + Derivative[1][dy0])]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 2, 0.000149}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$24875: {prev[px0, 0]*(prev[px4, 1] - Derivative[1][dx0]) + prev[px4, 0]*(-prev[px4, 1] + Derivative[1][dx0]) + (prev[py0, 0] - prev[py4, 0])*(prev[py4, 1] - Derivative[1][dy0]) == 0, prev[px4, 0]*prev[py0, 1] + prev[px0, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[py4, 0]*Derivative[1][dx0] + prev[px0, 0]*(-prev[py0, 1] + Derivative[1][dy0]) == prev[py0, 0]*Derivative[1][dx0] + prev[px4, 0]*Derivative[1][dy0]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx0] == -(((25 + (-2435 + Sqrt[323])/101)*(25 + (2*(-1267 + 5*Sqrt[323]))/101 + 10*(-25 + (2435 - Sqrt[323])/101)))/((25 + (-2435 + Sqrt[323])/101)^2 - (-25 - (2*(-1267 + 5*Sqrt[323]))/101)*(25 + (2*(-1267 + 5*Sqrt[323]))/101)))]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24876: SimplifyCount[-(((25 + (-2435 + Sqrt[323])/101)*(25 + (2*(-1267 + 5*Sqrt[323]))/101 + 10*(-25 + (2435 - Sqrt[323])/101)))/((25 + (-2435 + Sqrt[323])/101)^2 - (-25 - (2*(-1267 + 5*Sqrt[323]))/101)*(25 + (2*(-1267 + 5*Sqrt[323]))/101)))] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy0] == -((5625 - (250*(2435 - Sqrt[323]))/101 + (400*(-1267 + 5*Sqrt[323]))/101 - (20*(2435 - Sqrt[323])*(-1267 + 5*Sqrt[323]))/10201 - (4*(-1267 + 5*Sqrt[323])^2)/10201)/(1250 - (50*(2435 - Sqrt[323]))/101 + (2435 - Sqrt[323])^2/10201 + (100*(-1267 + 5*Sqrt[323]))/101 + (4*(-1267 + 5*Sqrt[323])^2)/10201))]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24878: SimplifyCount[-((5625 - (250*(2435 - Sqrt[323]))/101 + (400*(-1267 + 5*Sqrt[323]))/101 - (20*(2435 - Sqrt[323])*(-1267 + 5*Sqrt[323]))/10201 - (4*(-1267 + 5*Sqrt[323])^2)/10201)/(1250 - (50*(2435 - Sqrt[323]))/101 + (2435 - Sqrt[323])^2/10201 + (100*(-1267 + 5*Sqrt[323]))/101 + (4*(-1267 + 5*Sqrt[323])^2)/10201))] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[-(((25 + (-2435 + Sqrt[323])/101)*(25 + (2*(-1267 + 5*Sqrt[323]))/101 + 10*(-25 + (2435 - Sqrt[323])/101)))/((25 + (-2435 + Sqrt[323])/101)^2 - (-25 - (2*(-1267 + 5*Sqrt[323]))/101)*(25 + (2*(-1267 + 5*Sqrt[323]))/101)))] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx0]]}, {1, SimplifyCount[-((5625 - (250*(2435 - Sqrt[323]))/101 + (400*(-1267 + 5*Sqrt[323]))/101 - (20*(2435 - Sqrt[323])*(-1267 + 5*Sqrt[323]))/10201 - (4*(-1267 + 5*Sqrt[323])^2)/10201)/(1250 - (50*(2435 - Sqrt[323]))/101 + (2435 - Sqrt[323])^2/10201 + (100*(-1267 + 5*Sqrt[323]))/101 + (4*(-1267 + 5*Sqrt[323])^2)/10201))] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy0]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 2, 0.067724}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$24870: True, resultConstraint: 404*Derivative[1][dx0] == 9*(90 + Sqrt[323]) && 90*Sqrt[323] + 404*Derivative[1][dy0] == 81

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$24870: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24869: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[404*Derivative[1][dx0] == 9*(90 + Sqrt[323]) && 90*Sqrt[323] + 404*Derivative[1][dy0] == 81,
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$24888[[i$24888]]: 404*Derivative[1][dx0] == 9*(90 + Sqrt[323]), newVars$24888[[1]]: Derivative[1][dx0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$24888: Derivative[1][dx0] == (9*(90 + Sqrt[323]))/404

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$24888[[i$24888]]: 90*Sqrt[323] + 404*Derivative[1][dy0] == 81, newVars$24888[[1]]: Derivative[1][dy0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$24888: Derivative[1][dy0] == (-9*(-9 + 10*Sqrt[323]))/404

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$24887: Derivative[1][dx0] == (9*(90 + Sqrt[323]))/404 && Derivative[1][dy0] == (-9*(-9 + 10*Sqrt[323]))/404, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{Derivative[1][dx0] == (9*(90 + Sqrt[323]))/404, Derivative[1][dy0] == (-9*(-9 + 10*Sqrt[323]))/404}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$24887: {{{{dx0, 1}, 0, ("323"^(Rational["1", "2"]) + "90")*Rational["9", "404"]}, {{dy0, 1}, 0, ("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24886: {{{{dx0, 1}, 0, ("323"^(Rational["1", "2"]) + "90")*Rational["9", "404"]}, {{dy0, 1}, 0, ("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"]}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24909: 3928

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[2/2]: {1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-), x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24911: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux4,
	prev[px4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24913: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy4,
	prev[py4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24916: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[prev[px0, 1]*(prev[px0, 0] - prev[px4, 0]) + prev[py0, 1]*(prev[py0, 0] - prev[py4, 0]) == (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx4] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy4] && (prev[py0, 0] - prev[py4, 0])*Derivative[1][dx4] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy4] == prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) - (prev[px0, 0] - prev[px4, 0])*prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[prev[px0, 1]*(prev[px0, 0] - prev[px4, 0]) + prev[py0, 1]*(prev[py0, 0] - prev[py4, 0]) == (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx4] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy4] && (prev[py0, 0] - prev[py4, 0])*Derivative[1][dx4] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy4] == prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) - (prev[px0, 0] - prev[px4, 0])*prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24921: SimplifyCount[And] + SimplifyCount[prev[px0, 1]*(prev[px0, 0] - prev[px4, 0]) + prev[py0, 1]*(prev[py0, 0] - prev[py4, 0]) == (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx4] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy4]] + SimplifyCount[(prev[py0, 0] - prev[py4, 0])*Derivative[1][dx4] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy4] == prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) - (prev[px0, 0] - prev[px4, 0])*prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[prev[px0, 1]*(prev[px0, 0] - prev[px4, 0]) + prev[py0, 1]*(prev[py0, 0] - prev[py4, 0]) == (prev[px0, 0] - prev[px4, 0])*Derivative[1][dx4] + (prev[py0, 0] - prev[py4, 0])*Derivative[1][dy4]] + SimplifyCount[(prev[py0, 0] - prev[py4, 0])*Derivative[1][dx4] - (prev[px0, 0] - prev[px4, 0])*Derivative[1][dy4] == prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) - (prev[px0, 0] - prev[px4, 0])*prev[py4, 1]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.001182}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24919: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyPoint[prev[px0, 1]*prev[px4, 0] + prev[py0, 1]*prev[py4, 0] + prev[px0, 0]*(-prev[px0, 1] + Derivative[1][dx4]) + prev[py0, 0]*Derivative[1][dy4] == prev[py0, 0]*prev[py0, 1] + prev[px4, 0]*Derivative[1][dx4] + prev[py4, 0]*Derivative[1][dy4] && prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px4, 0]*prev[py4, 1] + prev[py4, 0]*Derivative[1][dx4] + prev[px0, 0]*(-prev[py4, 1] + Derivative[1][dy4]) == prev[py0, 0]*Derivative[1][dx4] + prev[px4, 0]*Derivative[1][dy4],
	ux4 == prev[px4, 0] && uy4 == prev[py4, 0],
	True,
	True,
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> 10, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> 0, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> 1, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> 0, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px0, 2] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px4, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py0, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py4, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	{prev[px0, 0], prev[px0, 1], prev[px0, 2], prev[px1, 0], prev[px1, 1], prev[px1, 2], prev[px2, 0], prev[px2, 1], prev[px2, 2], prev[px3, 0], prev[px3, 1], prev[px3, 2], prev[px4, 0], prev[px4, 1], prev[px4, 2], prev[px5, 0], prev[px5, 1], prev[px5, 2], prev[px6, 0], prev[px6, 1], prev[px6, 2], prev[px7, 0], prev[px7, 1], prev[px7, 2], prev[px8, 0], prev[px8, 1], prev[px8, 2], prev[px9, 0], prev[px9, 1], prev[px9, 2], prev[py0, 0], prev[py0, 1], prev[py0, 2], prev[py1, 0], prev[py1, 1], prev[py1, 2], prev[py2, 0], prev[py2, 1], prev[py2, 2], prev[py3, 0], prev[py3, 1], prev[py3, 2], prev[py4, 0], prev[py4, 1], prev[py4, 2], prev[py5, 0], prev[py5, 1], prev[py5, 2], prev[py6, 0], prev[py6, 1], prev[py6, 2], prev[py7, 0], prev[py7, 1], prev[py7, 2], prev[py8, 0], prev[py8, 1], prev[py8, 2], prev[py9, 0], prev[py9, 1], prev[py9, 2]},
	{},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"assum: ", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[prev[px0, 1]*prev[px4, 0] + prev[py0, 1]*prev[py4, 0] + prev[px0, 0]*(-prev[px0, 1] + Derivative[1][dx4]) + prev[py0, 0]*Derivative[1][dy4] == prev[py0, 0]*prev[py0, 1] + prev[px4, 0]*Derivative[1][dx4] + prev[py4, 0]*Derivative[1][dy4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24930: SimplifyCount[Equal] + SimplifyCount[prev[px0, 1]*prev[px4, 0] + prev[py0, 1]*prev[py4, 0] + prev[px0, 0]*(-prev[px0, 1] + Derivative[1][dx4]) + prev[py0, 0]*Derivative[1][dy4]] + SimplifyCount[prev[py0, 0]*prev[py0, 1] + prev[px4, 0]*Derivative[1][dx4] + prev[py4, 0]*Derivative[1][dy4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px4, 0]*prev[py4, 1] + prev[py4, 0]*Derivative[1][dx4] + prev[px0, 0]*(-prev[py4, 1] + Derivative[1][dy4]) == prev[py0, 0]*Derivative[1][dx4] + prev[px4, 0]*Derivative[1][dy4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24932: SimplifyCount[Equal] + SimplifyCount[prev[py0, 0]*Derivative[1][dx4] + prev[px4, 0]*Derivative[1][dy4]] + SimplifyCount[prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px4, 0]*prev[py4, 1] + prev[py4, 0]*Derivative[1][dx4] + prev[px0, 0]*(-prev[py4, 1] + Derivative[1][dy4])]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[Equal] + SimplifyCount[prev[px0, 1]*prev[px4, 0] + prev[py0, 1]*prev[py4, 0] + prev[px0, 0]*(-prev[px0, 1] + Derivative[1][dx4]) + prev[py0, 0]*Derivative[1][dy4]] + SimplifyCount[prev[py0, 0]*prev[py0, 1] + prev[px4, 0]*Derivative[1][dx4] + prev[py4, 0]*Derivative[1][dy4]]}, {1, SimplifyCount[Equal] + SimplifyCount[prev[py0, 0]*Derivative[1][dx4] + prev[px4, 0]*Derivative[1][dy4]] + SimplifyCount[prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px4, 0]*prev[py4, 1] + prev[py4, 0]*Derivative[1][dx4] + prev[px0, 0]*(-prev[py4, 1] + Derivative[1][dy4])]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 2, 0.000136}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: consToSolve$24934: {prev[px0, 1]*prev[px4, 0] + prev[py0, 1]*prev[py4, 0] + prev[px0, 0]*(-prev[px0, 1] + Derivative[1][dx4]) + prev[py0, 0]*Derivative[1][dy4] == prev[py0, 0]*prev[py0, 1] + prev[px4, 0]*Derivative[1][dx4] + prev[py4, 0]*Derivative[1][dy4], prev[px4, 1]*(prev[py0, 0] - prev[py4, 0]) + prev[px4, 0]*prev[py4, 1] + prev[py4, 0]*Derivative[1][dx4] + prev[px0, 0]*(-prev[py4, 1] + Derivative[1][dy4]) == prev[py0, 0]*Derivative[1][dx4] + prev[px4, 0]*Derivative[1][dy4]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dx4] == ((-25 - (2*(-1267 + 5*Sqrt[323]))/101)*(275 + (-2435 + Sqrt[323])/101 + (20*(-1267 + 5*Sqrt[323]))/101))/((-25 + (2435 - Sqrt[323])/101)*(25 + (-2435 + Sqrt[323])/101) - (-25 - (2*(-1267 + 5*Sqrt[323]))/101)^2)]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24935: SimplifyCount[((-25 - (2*(-1267 + 5*Sqrt[323]))/101)*(275 + (-2435 + Sqrt[323])/101 + (20*(-1267 + 5*Sqrt[323]))/101))/((-25 + (2435 - Sqrt[323])/101)*(25 + (-2435 + Sqrt[323])/101) - (-25 - (2*(-1267 + 5*Sqrt[323]))/101)^2)] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[1][dy4] == -((-6875 + (300*(2435 - Sqrt[323]))/101 - (2435 - Sqrt[323])^2/10201 - (500*(-1267 + 5*Sqrt[323]))/101 + (20*(2435 - Sqrt[323])*(-1267 + 5*Sqrt[323]))/10201)/(1250 - (50*(2435 - Sqrt[323]))/101 + (2435 - Sqrt[323])^2/10201 + (100*(-1267 + 5*Sqrt[323]))/101 + (4*(-1267 + 5*Sqrt[323])^2)/10201))]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24937: SimplifyCount[-((-6875 + (300*(2435 - Sqrt[323]))/101 - (2435 - Sqrt[323])^2/10201 - (500*(-1267 + 5*Sqrt[323]))/101 + (20*(2435 - Sqrt[323])*(-1267 + 5*Sqrt[323]))/10201)/(1250 - (50*(2435 - Sqrt[323]))/101 + (2435 - Sqrt[323])^2/10201 + (100*(-1267 + 5*Sqrt[323]))/101 + (4*(-1267 + 5*Sqrt[323])^2)/10201))] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy4]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {{1, SimplifyCount[((-25 - (2*(-1267 + 5*Sqrt[323]))/101)*(275 + (-2435 + Sqrt[323])/101 + (20*(-1267 + 5*Sqrt[323]))/101))/((-25 + (2435 - Sqrt[323])/101)*(25 + (-2435 + Sqrt[323])/101) - (-25 - (2*(-1267 + 5*Sqrt[323]))/101)^2)] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dx4]]}, {1, SimplifyCount[-((-6875 + (300*(2435 - Sqrt[323]))/101 - (2435 - Sqrt[323])^2/10201 - (500*(-1267 + 5*Sqrt[323]))/101 + (20*(2435 - Sqrt[323])*(-1267 + 5*Sqrt[323]))/10201)/(1250 - (50*(2435 - Sqrt[323]))/101 + (2435 - Sqrt[323])^2/10201 + (100*(-1267 + 5*Sqrt[323]))/101 + (4*(-1267 + 5*Sqrt[323])^2)/10201))] + SimplifyCount[Equal] + SimplifyCount[Derivative[1][dy4]]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 2, 0.06025}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: solved$24929: True, resultConstraint: 9*Sqrt[323] + 404*Derivative[1][dx4] == 3230 && 404*Derivative[1][dy4] == 323 + 90*Sqrt[323]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: cpFalse$24929: False

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24928: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyPoint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMap[9*Sqrt[323] + 404*Derivative[1][dx4] == 3230 && 404*Derivative[1][dy4] == 323 + 90*Sqrt[323],
	{ux0, ux1, ux2, ux3, ux4, ux5, ux6, ux7, ux8, ux9, uy0, uy1, uy2, uy3, uy4, uy5, uy6, uy7, uy8, uy9, Derivative[1][dx0], Derivative[1][dx1], Derivative[1][dx2], Derivative[1][dx3], Derivative[1][dx4], Derivative[1][dx5], Derivative[1][dx6], Derivative[1][dx7], Derivative[1][dx8], Derivative[1][dx9], Derivative[1][dy0], Derivative[1][dy1], Derivative[1][dy2], Derivative[1][dy3], Derivative[1][dy4], Derivative[1][dy5], Derivative[1][dy6], Derivative[1][dy7], Derivative[1][dy8], Derivative[1][dy9], Derivative[2][dx0], Derivative[2][dx1], Derivative[2][dx2], Derivative[2][dx3], Derivative[2][dx4], Derivative[2][dx5], Derivative[2][dx6], Derivative[2][dx7], Derivative[2][dx8], Derivative[2][dx9], Derivative[2][dy0], Derivative[2][dy1], Derivative[2][dy2], Derivative[2][dy3], Derivative[2][dy4], Derivative[2][dy5], Derivative[2][dy6], Derivative[2][dy7], Derivative[2][dy8], Derivative[2][dy9]},
	True,
	{},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$24947[[i$24947]]: 9*Sqrt[323] + 404*Derivative[1][dx4] == 3230, newVars$24947[[1]]: Derivative[1][dx4]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$24947: Derivative[1][dx4] == (3230 - 9*Sqrt[323])/404

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listToProcess$24947[[i$24947]]: 404*Derivative[1][dy4] == 323 + 90*Sqrt[323], newVars$24947[[1]]: Derivative[1][dy4]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$24947: Derivative[1][dy4] == (323 + 90*Sqrt[323])/404

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tmpCons$24946: Derivative[1][dx4] == (3230 - 9*Sqrt[323])/404 && Derivative[1][dy4] == (323 + 90*Sqrt[323])/404, succeeded: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"tmpCons after adjustExprs in createVariableMap", {{Derivative[1][dx4] == (3230 - 9*Sqrt[323])/404, Derivative[1][dy4] == (323 + 90*Sqrt[323])/404}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: map$24946: {{{{dx4, 1}, 0, ("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational["1", "404"]}, {{dy4, 1}, 0, ("323" + "323"^(Rational["1", "2"])*"90")*Rational["1", "404"]}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24945: {{{{dx4, 1}, 0, ("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational["1", "404"]}, {{dy4, 1}, 0, ("323" + "323"^(Rational["1", "2"])*"90")*Rational["1", "404"]}}}

@Backend.cpp 427 function: call   createVariableMap
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24970: 4224

@Backend.cpp 427 function: call   getSizeOfConstraint
@PhaseSimulator.cpp 369 function: simulate_ms   CONSISTENT: {Constraint[ConstraintCall<CONST(Variable[x0])>[Always[Equal[Differential[Differential[Variable[x0]]],Number[0]]]]], Constraint[ConstraintCall<CONST(Variable[x4])>[Always[Equal[Differential[Differential[Variable[x4]]],Number[0]]]]], Constraint[ConstraintCall<CONST(Variable[y0])>[Always[Equal[Differential[Differential[Variable[y0]]],Number[0]]]]], Constraint[ConstraintCall<CONST(Variable[y4])>[Always[Equal[Differential[Differential[Variable[y4]]],Number[0]]]]]}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getParameterConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24972: {True}

@Backend.cpp 427 function: call   getParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exactlyEqual[(9*(90 + Sqrt[323]))/404,
	10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24975: False

@Backend.cpp 427 function: call   exactlyEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exactlyEqual[(3230 - 9*Sqrt[323])/404,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24977: False

@Backend.cpp 427 function: call   exactlyEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exactlyEqual[(-9*(-9 + 10*Sqrt[323]))/404,
	1]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24979: False

@Backend.cpp 427 function: call   exactlyEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exactlyEqual[(323 + 90*Sqrt[323])/404,
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24981: False

@Backend.cpp 427 function: call   exactlyEqual
@PhaseSimulator.cpp 1557 function: make_next_todo   *phase: %% PhaseType: 1
%% id: 7
%% step: 6
%% parent_id:6
%% unadopted modules: {CONST(x0), CONST(x4), CONST(y0), CONST(y4)}
%% inconsistent modules: {COL(x0,y0,x4,y4,1), CONST(x0), CONST(y0)}
%% inconsistent modules: {COL(x0,y0,x4,y4,1), CONST(x4), CONST(y4)}
%% inconsistent modules: {COL(x0,y0,x4,y4,1), CONST(y0)}
%% inconsistent modules: {COL(x0,y0,x4,y4,1), CONST(y4)}
%% inconsistent modules: {COL(x0,y0,x4,y4,1), CONST(x0)}
%% inconsistent modules: {COL(x0,y0,x4,y4,1), CONST(x4)}
%% inconsistent constraints: {x0''=0, y0''=0, x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-)), x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)}
		{x4''=0, y4''=0, 1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-), x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)}
		{y0''=0, x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-)), x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)}
		{y4''=0, 1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-), x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)}
		{x0''=0, x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-)), x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)}
		{x4''=0, 1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-), x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)}
%% positive_asks
(x0--x4-)^2+(y0--y4-)^2=4=>x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-))&1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-)&x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)&x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)
%% negative_asks
%% current_time: (2435+323^(1/2)*(-1))*1/101
--- variable map ---
x0' <=> (323^(1/2)+90)*9/404
x4' <=> (3230+323^(1/2)*(-9))*1/404
y0' <=> (10*323^(1/2)+(-9))*(-9)/404
y4' <=> (323+323^(1/2)*90)*1/404

--- parameter constraint ---
{}

@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
removeRedundantParameters[(2435 - Sqrt[323])/101,
	0,
	{ux0 == (-2*(-1267 + 5*Sqrt[323]))/101, ux1 == 10, ux2 == 15, ux3 == 20, ux4 == 25, ux5 == 30, ux6 == 35, ux7 == 40, ux8 == 45, ux9 == 50, uy0 == (2435 - Sqrt[323])/101, uy1 == 10, uy2 == 15, uy3 == 20, uy4 == 25, uy5 == 30, uy6 == 35, uy7 == 40, uy8 == 45, uy9 == 50, Derivative[1][dx0] == (9*(90 + Sqrt[323]))/404, Derivative[1][dx1] == 0, Derivative[1][dx2] == 0, Derivative[1][dx3] == 0, Derivative[1][dx4] == (3230 - 9*Sqrt[323])/404, Derivative[1][dx5] == 0, Derivative[1][dx6] == 0, Derivative[1][dx7] == 0, Derivative[1][dx8] == 0, Derivative[1][dx9] == 0, Derivative[1][dy0] == (-9*(-9 + 10*Sqrt[323]))/404, Derivative[1][dy1] == 0, Derivative[1][dy2] == 0, Derivative[1][dy3] == 0, Derivative[1][dy4] == (323 + 90*Sqrt[323])/404, Derivative[1][dy5] == 0, Derivative[1][dy6] == 0, Derivative[1][dy7] == 0, Derivative[1][dy8] == 0, Derivative[1][dy9] == 0, Derivative[2][dx1] == 0, Derivative[2][dx2] == 0, Derivative[2][dx3] == 0, Derivative[2][dx5] == 0, Derivative[2][dx6] == 0, Derivative[2][dx7] == 0, Derivative[2][dx8] == 0, Derivative[2][dx9] == 0, Derivative[2][dy1] == 0, Derivative[2][dy2] == 0, Derivative[2][dy3] == 0, Derivative[2][dy5] == 0, Derivative[2][dy6] == 0, Derivative[2][dy7] == 0, Derivative[2][dy8] == 0, Derivative[2][dy9] == 0},
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: parsInVM$24984: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: redundantPars$24984: {}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24983: {True}

@Backend.cpp 427 function: call   removeRedundantParameters
@Simulator.cpp 185 function: process_one_todo   
--- Result Phase ---
%% PhaseType: 1
%% id: 7
%% step: 6
%% parent_id:6
%% unadopted modules: {CONST(x0), CONST(x4), CONST(y0), CONST(y4)}
%% inconsistent modules: {COL(x0,y0,x4,y4,1), CONST(x0), CONST(y0)}
%% inconsistent modules: {COL(x0,y0,x4,y4,1), CONST(x4), CONST(y4)}
%% inconsistent modules: {COL(x0,y0,x4,y4,1), CONST(y0)}
%% inconsistent modules: {COL(x0,y0,x4,y4,1), CONST(y4)}
%% inconsistent modules: {COL(x0,y0,x4,y4,1), CONST(x0)}
%% inconsistent modules: {COL(x0,y0,x4,y4,1), CONST(x4)}
%% inconsistent constraints: {x0''=0, y0''=0, x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-)), x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)}
		{x4''=0, y4''=0, 1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-), x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)}
		{y0''=0, x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-)), x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)}
		{y4''=0, 1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-), x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)}
		{x0''=0, x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-)), x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)}
		{x4''=0, 1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-), x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)}
%% positive_asks
(x0--x4-)^2+(y0--y4-)^2=4=>x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-))&1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-)&x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)&x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)
%% negative_asks
%% current_time: (2435+323^(1/2)*(-1))*1/101
%% end_time: (2435+323^(1/2)*(-1))*1/101
--- variable map ---
x0 <=> (323^(1/2)*5+(-1267))*(-2)/101
x1 <=> 10
x2 <=> 15
x3 <=> 20
x4 <=> 25
x5 <=> 30
x6 <=> 35
x7 <=> 40
x8 <=> 45
x9 <=> 50
y0 <=> (2435+323^(1/2)*(-1))*1/101
y1 <=> 10
y2 <=> 15
y3 <=> 20
y4 <=> 25
y5 <=> 30
y6 <=> 35
y7 <=> 40
y8 <=> 45
y9 <=> 50
x0' <=> (323^(1/2)+90)*9/404
x1' <=> 0
x2' <=> 0
x3' <=> 0
x4' <=> (3230+323^(1/2)*(-9))*1/404
x5' <=> 0
x6' <=> 0
x7' <=> 0
x8' <=> 0
x9' <=> 0
y0' <=> (10*323^(1/2)+(-9))*(-9)/404
y1' <=> 0
y2' <=> 0
y3' <=> 0
y4' <=> (323+323^(1/2)*90)*1/404
y5' <=> 0
y6' <=> 0
y7' <=> 0
y8' <=> 0
y9' <=> 0
x1'' <=> 0
x2'' <=> 0
x3'' <=> 0
x5'' <=> 0
x6'' <=> 0
x7'' <=> 0
x8'' <=> 0
x9'' <=> 0
y1'' <=> 0
y2'' <=> 0
y3'' <=> 0
y5'' <=> 0
y6'' <=> 0
y7'' <=> 0
y8'' <=> 0
y9'' <=> 0

--- parameter constraint ---
{}

@SequentialSimulator.cpp 50 function: dfs   *current: %% PhaseType: 1
%% id: 7
%% step: 6
%% parent_id:6
%% unadopted modules: {CONST(x0), CONST(x4), CONST(y0), CONST(y4)}
%% inconsistent modules: {COL(x0,y0,x4,y4,1), CONST(x0), CONST(y0)}
%% inconsistent modules: {COL(x0,y0,x4,y4,1), CONST(x4), CONST(y4)}
%% inconsistent modules: {COL(x0,y0,x4,y4,1), CONST(y0)}
%% inconsistent modules: {COL(x0,y0,x4,y4,1), CONST(y4)}
%% inconsistent modules: {COL(x0,y0,x4,y4,1), CONST(x0)}
%% inconsistent modules: {COL(x0,y0,x4,y4,1), CONST(x4)}
%% inconsistent constraints: {x0''=0, y0''=0, x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-)), x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)}
		{x4''=0, y4''=0, 1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-), x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)}
		{y0''=0, x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-)), x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)}
		{y4''=0, 1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-), x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)}
		{x0''=0, x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-)), x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)}
		{x4''=0, 1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-), x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)}
%% positive_asks
(x0--x4-)^2+(y0--y4-)^2=4=>x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-))&1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-)&x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)&x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)
%% negative_asks
%% current_time: (2435+323^(1/2)*(-1))*1/101
%% end_time: (2435+323^(1/2)*(-1))*1/101
--- variable map ---
x0 <=> (323^(1/2)*5+(-1267))*(-2)/101
x1 <=> 10
x2 <=> 15
x3 <=> 20
x4 <=> 25
x5 <=> 30
x6 <=> 35
x7 <=> 40
x8 <=> 45
x9 <=> 50
y0 <=> (2435+323^(1/2)*(-1))*1/101
y1 <=> 10
y2 <=> 15
y3 <=> 20
y4 <=> 25
y5 <=> 30
y6 <=> 35
y7 <=> 40
y8 <=> 45
y9 <=> 50
x0' <=> (323^(1/2)+90)*9/404
x1' <=> 0
x2' <=> 0
x3' <=> 0
x4' <=> (3230+323^(1/2)*(-9))*1/404
x5' <=> 0
x6' <=> 0
x7' <=> 0
x8' <=> 0
x9' <=> 0
y0' <=> (10*323^(1/2)+(-9))*(-9)/404
y1' <=> 0
y2' <=> 0
y3' <=> 0
y4' <=> (323+323^(1/2)*90)*1/404
y5' <=> 0
y6' <=> 0
y7' <=> 0
y8' <=> 0
y9' <=> 0
x1'' <=> 0
x2'' <=> 0
x3'' <=> 0
x5'' <=> 0
x6'' <=> 0
x7'' <=> 0
x8'' <=> 0
x9'' <=> 0
y1'' <=> 0
y2'' <=> 0
y3'' <=> 0
y5'' <=> 0
y6'' <=> 0
y7'' <=> 0
y8'' <=> 0
y9'' <=> 0

--- parameter constraint ---
{}

@Simulator.cpp 165 function: process_one_todo   
--- Current Todo ---
%% PhaseType: 2
%% id: 8
%% step: 7
%% parent_id:7
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: (2435+323^(1/2)*(-1))*1/101
--- variable map ---

--- parameter constraint ---
{}

@Simulator.cpp 166 function: process_one_todo   
--- prev map ---

@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24988: Null

@Backend.cpp 427 function: call   resetConstraint
@PhaseSimulator.cpp 162 function: make_results_from_todo   *todo: %% PhaseType: 2
%% id: 8
%% step: 7
%% parent_id:7
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: (2435+323^(1/2)*(-1))*1/101
--- variable map ---

--- parameter constraint ---
{}

@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
clearPrevConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24990: Null

@Backend.cpp 427 function: call   clearPrevConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px0, 0],
	(-2*(-1267 + 5*Sqrt[323]))/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24992: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px1, 0],
	10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24994: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px2, 0],
	15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24996: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px3, 0],
	20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$24998: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px4, 0],
	25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25000: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px5, 0],
	30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25002: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px6, 0],
	35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25004: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px7, 0],
	40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25006: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px8, 0],
	45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25008: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px9, 0],
	50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25010: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py0, 0],
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25012: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py1, 0],
	10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25014: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py2, 0],
	15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25016: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py3, 0],
	20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25018: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py4, 0],
	25]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25020: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py5, 0],
	30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25022: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py6, 0],
	35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25024: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py7, 0],
	40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25026: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py8, 0],
	45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25028: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py9, 0],
	50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25030: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px0, 1],
	(9*(90 + Sqrt[323]))/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25032: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px1, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25034: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px2, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25036: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px3, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25038: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px4, 1],
	(3230 - 9*Sqrt[323])/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25040: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px5, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25042: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px6, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25044: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px7, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25046: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px8, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25048: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px9, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25050: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py0, 1],
	(-9*(-9 + 10*Sqrt[323]))/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25052: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py1, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25054: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py2, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25056: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py3, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25058: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py4, 1],
	(323 + 90*Sqrt[323])/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25060: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py5, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25062: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py6, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25064: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py7, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25066: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py8, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25068: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py9, 1],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25070: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px1, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25072: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px2, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25074: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px3, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25076: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px5, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25078: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px6, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25080: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px7, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25082: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px8, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25084: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[px9, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25086: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py1, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25088: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py2, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25090: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py3, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25092: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py5, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25094: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py6, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25096: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py7, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25098: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py8, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25100: Null

@Backend.cpp 427 function: call   addPrevEqual
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addPrevEqual[prev[py9, 2],
	0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25102: Null

@Backend.cpp 427 function: call   addPrevEqual
@PhaseSimulator.cpp 199 function: make_results_from_todo   parameter_cons: {}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addParameterConstraint[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pConstraint", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pCons", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25104: Null

@Backend.cpp 427 function: call   addParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addParameterConstraint[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pConstraint", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"pCons", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25106: Null

@Backend.cpp 427 function: call   addParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addAssumption[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"as in addAssumption:", True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25108: Null

@Backend.cpp 427 function: call   addAssumption
@PhaseSimulator.cpp 326 function: simulate_ms   
--- next unadopted module set ---

@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {CONST(x0).
, CONST(y0).
, CONST(x4).
, CONST(y4).
, x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-))&1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-)&x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)&x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)}
@ConsistencyChecker.cpp 179 function: check_entailment   get_infix_string(guard): (x0--x4-)^2+(y0--y4-)^2=4
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25110: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0[0],
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25112: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux0][0],
	prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25115: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux4[0],
	prev[px4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25118: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux4][0],
	prev[px4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25121: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy0[0],
	prev[py0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25124: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy0][0],
	prev[py0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25127: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy4[0],
	prev[py4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25130: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy4][0],
	prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25133: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25138: SimplifyCount[And] + SimplifyCount[Derivative[2][ux0][t] == 0] + SimplifyCount[Derivative[2][ux4][t] == 0] + SimplifyCount[Derivative[2][uy0][t] == 0] + SimplifyCount[Derivative[2][uy4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[Derivative[2][ux0][t] == 0] + SimplifyCount[Derivative[2][ux4][t] == 0] + SimplifyCount[Derivative[2][uy0][t] == 0] + SimplifyCount[Derivative[2][uy4][t] == 0]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000662}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25136: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[(ux0[t] - ux4[t])^2 + (uy0[t] - uy4[t])^2 == 4 && Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0,
	ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1] && ux4[0] == prev[px4, 0] && Derivative[1][ux4][0] == prev[px4, 1] && uy0[0] == prev[py0, 0] && Derivative[1][uy0][0] == prev[py0, 1] && uy4[0] == prev[py4, 0] && Derivative[1][uy4][0] == prev[py4, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[(ux0[t] - ux4[t])^2 + (uy0[t] - uy4[t])^2 == 4 && Derivative[2][ux0][t] == 0 && Derivative[2][uy0][t] == 0 && Derivative[2][ux4][t] == 0 && Derivative[2][uy4][t] == 0,
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$25147: {(ux0[t] - ux4[t])^2 + (uy0[t] - uy4[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux4][t] == 0, Derivative[2][uy0][t] == 0, Derivative[2][uy4][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$25147: {{Derivative[2][uy4][t] == 0}, {(ux0[t] - ux4[t])^2 + (uy0[t] - uy4[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux4][t] == 0, Derivative[2][uy0][t] == 0}, {uy4}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$25147: {{uy4[t] -> prev[py4, 0] + t*prev[py4, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$25147: {(ux0[t] - ux4[t])^2 + (-25 - ((323 + 90*Sqrt[323])*t)/404 + uy0[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux4][t] == 0, Derivative[2][uy0][t] == 0}, tVars$25147: {ux0[t], ux4[t], uy0[t], ux0[t], ux4[t], uy0[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$25147: {{Derivative[2][uy0][t] == 0}, {(ux0[t] - ux4[t])^2 + (-25 - ((323 + 90*Sqrt[323])*t)/404 + uy0[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux4][t] == 0}, {uy0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$25147: {{uy0[t] -> prev[py0, 0] + t*prev[py0, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$25147: {(-25 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404 - ((323 + 90*Sqrt[323])*t)/404)^2 + (ux0[t] - ux4[t])^2 == 4, Derivative[2][ux0][t] == 0, Derivative[2][ux4][t] == 0}, tVars$25147: {ux0[t], ux4[t], ux0[t], ux4[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$25147: {{Derivative[2][ux4][t] == 0}, {(-25 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404 - ((323 + 90*Sqrt[323])*t)/404)^2 + (ux0[t] - ux4[t])^2 == 4, Derivative[2][ux0][t] == 0}, {ux4}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$25147: {{ux4[t] -> prev[px4, 0] + t*prev[px4, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$25147: {(-25 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404 - ((323 + 90*Sqrt[323])*t)/404)^2 + (-25 - ((3230 - 9*Sqrt[323])*t)/404 + ux0[t])^2 == 4, Derivative[2][ux0][t] == 0}, tVars$25147: {ux0[t], ux0[t]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: searchResult$25147: {{Derivative[2][ux0][t] == 0}, {(-25 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404 - ((323 + 90*Sqrt[323])*t)/404)^2 + (-25 - ((3230 - 9*Sqrt[323])*t)/404 + ux0[t])^2 == 4}, {ux0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: rules$25147: {{ux0[t] -> prev[px0, 0] + t*prev[px0, 1]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$25144: overConstrained

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", overConstrained}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25143: {{False}, {True}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@PhaseSimulator.cpp 783 function: calculate_closure   
--- conflicted ask ---
(x0--x4-)^2+(y0--y4-)^2=4=>x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-))&1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-)&x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)&x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)
@PhaseSimulator.cpp 701 function: calculate_closure   diff_sum: {CONST(x0).
, CONST(y0).
, CONST(x4).
, CONST(y4).
, x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-))&1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-)&x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)&x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)}
@ConsistencyChecker.cpp 398 function: check_consistency   related[1/4]: {x0''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25218: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux0[0],
	prev[px0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25220: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux0][0],
	prev[px0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25223: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux0][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux0][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25228: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux0][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux0][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000053}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25226: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][ux0][t] == 0,
	ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux0][t] == 0,
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$25233: {Derivative[2][ux0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$25233: {ux0[t] -> (-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404}, resultCons$25233: t > 0,                  -2 (-1267 + 5 Sqrt[323])                                                                                                                                                                                                      2435 - Sqrt[323]                                                                                                                                                                                                      9 (90 + Sqrt[323])                                                                           3230 - 9 Sqrt[323]                                                                                                                 -9 (-9 + 10 Sqrt[323])                                                                           323 + 90 Sqrt[323]
{prev[px0, 0] -> ------------------------, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> ----------------, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> ------------------, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> ------------------, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> ----------------------, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> ------------------, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}
{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$25232: {solved, or[and[]], {ux0[t] -> (-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux0[t] -> (-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux0[t] -> (-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404, Derivative[1][ux0][t] -> (9*(90 + Sqrt[323]))/404, Derivative[2][ux0][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$25232: {ux0[t] -> (-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404, Derivative[1][ux0][t] -> (9*(90 + Sqrt[323]))/404, Derivative[2][ux0][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][ux0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux0[0] == prev[px0, 0] && Derivative[1][ux0][0] == prev[px0, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux0[0] == (-2*(-1267 + 5*Sqrt[323]))/101 && Derivative[1][ux0][0] == (9*(90 + Sqrt[323]))/404}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux0[t] -> (-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404, Derivative[1][ux0][t] -> (9*(90 + Sqrt[323]))/404, Derivative[2][ux0][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(-2*(-1267 + 5*Sqrt[323]))/101 == prev[px0, 0] && (9*(90 + Sqrt[323]))/404 == prev[px0, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$25232: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$25232}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25231: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][ux0][t] == 0,
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux0[t], Derivative[1][ux0][t], Derivative[2][ux0][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux0][t] == 0,
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$25424: {Derivative[2][ux0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$25424: {ux0[t] -> (-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404}, resultCons$25424: t > 0,                  -2 (-1267 + 5 Sqrt[323])                                                                                                                                                                                                      2435 - Sqrt[323]                                                                                                                                                                                                      9 (90 + Sqrt[323])                                                                           3230 - 9 Sqrt[323]                                                                                                                 -9 (-9 + 10 Sqrt[323])                                                                           323 + 90 Sqrt[323]
{prev[px0, 0] -> ------------------------, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> ----------------, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> ------------------, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> ------------------, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> ----------------------, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> ------------------, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}
{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux0[t] -> (-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25422: {{{{ux0, 0}, 0, ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"]}, {{ux0, 1}, 0, ("323"^(Rational["1", "2"]) + "90")*Rational["9", "404"]}, {{ux0, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25460: 792

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[2/4]: {y0''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25462: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy0[0],
	prev[py0, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25464: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy0][0],
	prev[py0, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25467: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy0][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy0][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25472: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy0][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy0][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000056}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25470: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][uy0][t] == 0,
	uy0[0] == prev[py0, 0] && Derivative[1][uy0][0] == prev[py0, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy0][t] == 0,
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$25477: {Derivative[2][uy0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$25477: {uy0[t] -> (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404}, resultCons$25477: t > 0,                  -2 (-1267 + 5 Sqrt[323])                                                                                                                                                                                                      2435 - Sqrt[323]                                                                                                                                                                                                      9 (90 + Sqrt[323])                                                                           3230 - 9 Sqrt[323]                                                                                                                 -9 (-9 + 10 Sqrt[323])                                                                           323 + 90 Sqrt[323]
{prev[px0, 0] -> ------------------------, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> ----------------, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> ------------------, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> ------------------, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> ----------------------, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> ------------------, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}
                           101                                                                                                                                                                                                                       101                                                                                                                                                                                                                    404                                                                                          404                                                                                                                                  404                                                                                            404: {prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$25476: {solved, or[and[]], {uy0[t] -> (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy0[t] -> (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy0[t] -> (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404, Derivative[1][uy0][t] -> (-9*(-9 + 10*Sqrt[323]))/404, Derivative[2][uy0][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$25476: {uy0[t] -> (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404, Derivative[1][uy0][t] -> (-9*(-9 + 10*Sqrt[323]))/404, Derivative[2][uy0][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][uy0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy0[0] == prev[py0, 0] && Derivative[1][uy0][0] == prev[py0, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy0[0] == (2435 - Sqrt[323])/101 && Derivative[1][uy0][0] == (-9*(-9 + 10*Sqrt[323]))/404}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy0[t] -> (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404, Derivative[1][uy0][t] -> (-9*(-9 + 10*Sqrt[323]))/404, Derivative[2][uy0][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {(2435 - Sqrt[323])/101 == prev[py0, 0] && (-9*(-9 + 10*Sqrt[323]))/404 == prev[py0, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$25476: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$25476}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25475: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][uy0][t] == 0,
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{uy0[t], Derivative[1][uy0][t], Derivative[2][uy0][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy0][t] == 0,
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$25668: {Derivative[2][uy0][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$25668: {uy0[t] -> (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404}, resultCons$25668: t > 0,                  -2 (-1267 + 5 Sqrt[323])                                                                                                                                                                                                      2435 - Sqrt[323]                                                                                                                                                                                                      9 (90 + Sqrt[323])                                                                           3230 - 9 Sqrt[323]                                                                                                                 -9 (-9 + 10 Sqrt[323])                                                                           323 + 90 Sqrt[323]
{prev[px0, 0] -> ------------------------, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> ----------------, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> ------------------, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> ------------------, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> ----------------------, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> ------------------, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}
{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy0[t] -> (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25666: {{{{uy0, 0}, 0, ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"]}, {{uy0, 1}, 0, ("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"]}, {{uy0, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25708: 792

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[3/4]: {x4''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25710: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[ux4[0],
	prev[px4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25712: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][ux4][0],
	prev[px4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25715: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][ux4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][ux4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25720: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux4][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][ux4][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000052}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25718: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][ux4][t] == 0,
	ux4[0] == prev[px4, 0] && Derivative[1][ux4][0] == prev[px4, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux4][t] == 0,
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$25725: {Derivative[2][ux4][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$25725: {ux4[t] -> 25 + ((3230 - 9*Sqrt[323])*t)/404}, resultCons$25725: t > 0,                  -2 (-1267 + 5 Sqrt[323])                                                                                                                                                                                                      2435 - Sqrt[323]                                                                                                                                                                                                      9 (90 + Sqrt[323])                                                                           3230 - 9 Sqrt[323]                                                                                                                 -9 (-9 + 10 Sqrt[323])                                                                           323 + 90 Sqrt[323]
{prev[px0, 0] -> ------------------------, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> ----------------, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> ------------------, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> ------------------, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> ----------------------, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> ------------------, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}
{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$25724: {solved, or[and[]], {ux4[t] -> 25 + ((3230 - 9*Sqrt[323])*t)/404}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux4[t] -> 25 + ((3230 - 9*Sqrt[323])*t)/404}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux4[t] -> 25 + ((3230 - 9*Sqrt[323])*t)/404, Derivative[1][ux4][t] -> (3230 - 9*Sqrt[323])/404, Derivative[2][ux4][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$25724: {ux4[t] -> 25 + ((3230 - 9*Sqrt[323])*t)/404, Derivative[1][ux4][t] -> (3230 - 9*Sqrt[323])/404, Derivative[2][ux4][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][ux4][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux4[0] == prev[px4, 0] && Derivative[1][ux4][0] == prev[px4, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {ux4[0] == 25 && Derivative[1][ux4][0] == (3230 - 9*Sqrt[323])/404}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{ux4[t] -> 25 + ((3230 - 9*Sqrt[323])*t)/404, Derivative[1][ux4][t] -> (3230 - 9*Sqrt[323])/404, Derivative[2][ux4][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {25 == prev[px4, 0] && (3230 - 9*Sqrt[323])/404 == prev[px4, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$25724: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$25724}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25723: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][ux4][t] == 0,
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{ux4[t], Derivative[1][ux4][t], Derivative[2][ux4][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][ux4][t] == 0,
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$25916: {Derivative[2][ux4][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$25916: {ux4[t] -> 25 + ((3230 - 9*Sqrt[323])*t)/404}, resultCons$25916: t > 0,                  -2 (-1267 + 5 Sqrt[323])                                                                                                                                                                                                      2435 - Sqrt[323]                                                                                                                                                                                                      9 (90 + Sqrt[323])                                                                           3230 - 9 Sqrt[323]                                                                                                                 -9 (-9 + 10 Sqrt[323])                                                                           323 + 90 Sqrt[323]
{prev[px0, 0] -> ------------------------, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> ----------------, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> ------------------, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> ------------------, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> ----------------------, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> ------------------, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}
                           101                                                                                                                                                                                                                       101                                                                                                                                                                                                                    404                                                                                          404                                                                                                                                  404                                                                                            404: {prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {ux4[t] -> 25 + ((3230 - 9*Sqrt[323])*t)/404}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25914: {{{{ux4, 0}, 0, "25" + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational["1", "404"]}, {{ux4, 1}, 0, ("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational["1", "404"]}, {{ux4, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25948: 792

@Backend.cpp 427 function: call   getSizeOfConstraint
@ConsistencyChecker.cpp 398 function: check_consistency   related[4/4]: {y4''=0}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForVariable[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25950: Null

@Backend.cpp 427 function: call   resetConstraintForVariable
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[uy4[0],
	prev[py4, 0]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25952: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addInitEquation[Derivative[1][uy4][0],
	prev[py4, 1]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25955: Null

@Backend.cpp 427 function: call   addInitEquation
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
addConstraint[Derivative[2][uy4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[Derivative[2][uy4][t] == 0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25960: SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy4][t]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[0] + SimplifyCount[Equal] + SimplifyCount[Derivative[2][uy4][t]]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000051}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25958: Null

@Backend.cpp 427 function: call   addConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
checkConsistencyInterval[Derivative[2][uy4][t] == 0,
	uy4[0] == prev[py4, 0] && Derivative[1][uy4][0] == prev[py4, 1],
	True,
	{ux0[t], ux1[t], ux2[t], ux3[t], ux4[t], ux5[t], ux6[t], ux7[t], ux8[t], ux9[t], uy0[t], uy1[t], uy2[t], uy3[t], uy4[t], uy5[t], uy6[t], uy7[t], uy8[t], uy9[t], Derivative[1][ux0][t], Derivative[1][ux1][t], Derivative[1][ux2][t], Derivative[1][ux3][t], Derivative[1][ux4][t], Derivative[1][ux5][t], Derivative[1][ux6][t], Derivative[1][ux7][t], Derivative[1][ux8][t], Derivative[1][ux9][t], Derivative[1][uy0][t], Derivative[1][uy1][t], Derivative[1][uy2][t], Derivative[1][uy3][t], Derivative[1][uy4][t], Derivative[1][uy5][t], Derivative[1][uy6][t], Derivative[1][uy7][t], Derivative[1][uy8][t], Derivative[1][uy9][t], Derivative[2][ux0][t], Derivative[2][ux1][t], Derivative[2][ux2][t], Derivative[2][ux3][t], Derivative[2][ux4][t], Derivative[2][ux5][t], Derivative[2][ux6][t], Derivative[2][ux7][t], Derivative[2][ux8][t], Derivative[2][ux9][t], Derivative[2][uy0][t], Derivative[2][uy1][t], Derivative[2][uy2][t], Derivative[2][uy3][t], Derivative[2][uy4][t], Derivative[2][uy5][t], Derivative[2][uy6][t], Derivative[2][uy7][t], Derivative[2][uy8][t], Derivative[2][uy9][t]},
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	True,
	True,
	{}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy4][t] == 0,
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$25965: {Derivative[2][uy4][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$25965: {uy4[t] -> 25 + ((323 + 90*Sqrt[323])*t)/404}, resultCons$25965: t > 0,                  -2 (-1267 + 5 Sqrt[323])                                                                                                                                                                                                      2435 - Sqrt[323]                                                                                                                                                                                                      9 (90 + Sqrt[323])                                                                           3230 - 9 Sqrt[323]                                                                                                                 -9 (-9 + 10 Sqrt[323])                                                                           323 + 90 Sqrt[323]
{prev[px0, 0] -> ------------------------, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> ----------------, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> ------------------, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> ------------------, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> ----------------------, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> ------------------, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}
{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: sol$25964: {solved, or[and[]], {uy4[t] -> 25 + ((323 + 90*Sqrt[323])*t)/404}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy4[t] -> 25 + ((323 + 90*Sqrt[323])*t)/404}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy4[t] -> 25 + ((323 + 90*Sqrt[323])*t)/404, Derivative[1][uy4][t] -> (323 + 90*Sqrt[323])/404, Derivative[2][uy4][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tRules$25964: {uy4[t] -> 25 + ((323 + 90*Sqrt[323])*t)/404, Derivative[1][uy4][t] -> (323 + 90*Sqrt[323])/404, Derivative[2][uy4][t] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"hoge"}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {Derivative[2][uy4][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy4[0] == prev[py4, 0] && Derivative[1][uy4][0] == prev[py4, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {uy4[0] == 25 && Derivative[1][uy4][0] == (323 + 90*Sqrt[323])/404}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {{uy4[t] -> 25 + ((323 + 90*Sqrt[323])*t)/404, Derivative[1][uy4][t] -> (323 + 90*Sqrt[323])/404, Derivative[2][uy4][t] -> 0}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {25 == prev[py4, 0] && (323 + 90*Sqrt[323])/404 == prev[py4, 1]}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {True}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: tCons$25964: or[and[]]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"cpFalse", cpFalse$25964}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$25963: {{True}, {False}}

@Backend.cpp 427 function: call   checkConsistencyInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
createVariableMapInterval[Derivative[2][uy4][t] == 0,
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0},
	{uy4[t], Derivative[1][uy4][t], Derivative[2][uy4][t]}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: exDSolve[Derivative[2][uy4][t] == 0,
	{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: listExpr$26156: {Derivative[2][uy4][t] == 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultRule$26156: {uy4[t] -> 25 + ((323 + 90*Sqrt[323])*t)/404}, resultCons$26156: t > 0,                  -2 (-1267 + 5 Sqrt[323])                                                                                                                                                                                                      2435 - Sqrt[323]                                                                                                                                                                                                      9 (90 + Sqrt[323])                                                                           3230 - 9 Sqrt[323]                                                                                                                 -9 (-9 + 10 Sqrt[323])                                                                           323 + 90 Sqrt[323]
{prev[px0, 0] -> ------------------------, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> ----------------, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> ------------------, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> ------------------, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> ----------------------, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> ------------------, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}
{prev[px0, 0] -> (-2*(-1267 + 5*Sqrt[323]))/101, prev[px1, 0] -> 10, prev[px2, 0] -> 15, prev[px3, 0] -> 20, prev[px4, 0] -> 25, prev[px5, 0] -> 30, prev[px6, 0] -> 35, prev[px7, 0] -> 40, prev[px8, 0] -> 45, prev[px9, 0] -> 50, prev[py0, 0] -> (2435 - Sqrt[323])/101, prev[py1, 0] -> 10, prev[py2, 0] -> 15, prev[py3, 0] -> 20, prev[py4, 0] -> 25, prev[py5, 0] -> 30, prev[py6, 0] -> 35, prev[py7, 0] -> 40, prev[py8, 0] -> 45, prev[py9, 0] -> 50, prev[px0, 1] -> (9*(90 + Sqrt[323]))/404, prev[px1, 1] -> 0, prev[px2, 1] -> 0, prev[px3, 1] -> 0, prev[px4, 1] -> (3230 - 9*Sqrt[323])/404, prev[px5, 1] -> 0, prev[px6, 1] -> 0, prev[px7, 1] -> 0, prev[px8, 1] -> 0, prev[px9, 1] -> 0, prev[py0, 1] -> (-9*(-9 + 10*Sqrt[323]))/404, prev[py1, 1] -> 0, prev[py2, 1] -> 0, prev[py3, 1] -> 0, prev[py4, 1] -> (323 + 90*Sqrt[323])/404, prev[py5, 1] -> 0, prev[py6, 1] -> 0, prev[py7, 1] -> 0, prev[py8, 1] -> 0, prev[py9, 1] -> 0, prev[px1, 2] -> 0, prev[px2, 2] -> 0, prev[px3, 2] -> 0, prev[px5, 2] -> 0, prev[px6, 2] -> 0, prev[px7, 2] -> 0, prev[px8, 2] -> 0, prev[px9, 2] -> 0, prev[py1, 2] -> 0, prev[py2, 2] -> 0, prev[py3, 2] -> 0, prev[py5, 2] -> 0, prev[py6, 2] -> 0, prev[py7, 2] -> 0, prev[py8, 2] -> 0, prev[py9, 2] -> 0}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"sol after exDSolve", {solved, or[and[]], {uy4[t] -> 25 + ((323 + 90*Sqrt[323])*t)/404}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26154: {{{{uy4, 0}, 0, "25" + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational["1", "404"]}, {{uy4, 1}, 0, ("323" + "323"^(Rational["1", "2"])*"90")*Rational["1", "404"]}, {{uy4, 2}, 0, "0"}}}

@Backend.cpp 427 function: call   createVariableMapInterval
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getSizeOfConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26188: 792

@Backend.cpp 427 function: call   getSizeOfConstraint
@PhaseSimulator.cpp 369 function: simulate_ms   CONSISTENT: {}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
getParameterConstraint[]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26190: {True}

@Backend.cpp 427 function: call   getParameterConstraint
@PhaseSimulator.cpp 1557 function: make_next_todo   *phase: %% PhaseType: 2
%% id: 8
%% step: 7
%% parent_id:7
%% unadopted modules: {}
%% positive_asks
%% negative_asks
(x0--x4-)^2+(y0--y4-)^2=4=>x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-))&1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-)&x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)&x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)
%% current_time: (2435+323^(1/2)*(-1))*1/101
--- variable map ---
x0 <=> (323^(1/2)+90)*t*9/404+(323^(1/2)*5+(-1267))*(-2)/101
x4 <=> 25+t*(3230+323^(1/2)*(-9))*1/404
y0 <=> (2435+323^(1/2)*(-1))*1/101+t*(10*323^(1/2)+(-9))*(-9)/404
y4 <=> 25+(323+323^(1/2)*90)*t*1/404
x0' <=> (323^(1/2)+90)*9/404
x4' <=> (3230+323^(1/2)*(-9))*1/404
y0' <=> (10*323^(1/2)+(-9))*(-9)/404
y4' <=> (323+323^(1/2)*90)*1/404
x0'' <=> 0
x4'' <=> 0
y0'' <=> 0
y4'' <=> 0

--- parameter constraint ---
{}

@PhaseSimulator.cpp 666 function: replace_prev2parameter   phase.get_parameter_constraint(): {}
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
resetConstraintForParameter[True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26193: Null

@Backend.cpp 427 function: call   resetConstraintForParameter
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[(-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[(-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*((-2435 + Sqrt[323])/101 + t))/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26197: SimplifyCount[(-2*(-1267 + 5*Sqrt[323]))/101] + SimplifyCount[Plus] + SimplifyCount[(9*(90 + Sqrt[323])*((-2435 + Sqrt[323])/101 + t))/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[(-2*(-1267 + 5*Sqrt[323]))/101] + SimplifyCount[Plus] + SimplifyCount[(9*(90 + Sqrt[323])*((-2435 + Sqrt[323])/101 + t))/404]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.009163}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26195: (("323"^(Rational["1", "2"]) + "90")*"909"*t + "323"^(Rational["1", "2"])*minus["25145"] + minus["945707"])*Rational["1", "40804"]

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[25 + ((3230 - 9*Sqrt[323])*t)/404,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[25 + ((3230 - 9*Sqrt[323])*((-2435 + Sqrt[323])/101 + t))/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26219: SimplifyCount[25] + SimplifyCount[Plus] + SimplifyCount[((3230 - 9*Sqrt[323])*((-2435 + Sqrt[323])/101 + t))/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[25] + SimplifyCount[Plus] + SimplifyCount[((3230 - 9*Sqrt[323])*((-2435 + Sqrt[323])/101 + t))/404]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.013444}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26217: "25" + ("323"^(Rational["1", "2"]) + "101"*t + minus["2435"])*("323"^(Rational["1", "2"])*"9" + minus["3230"])*Rational[minus["1"], "40804"]

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[(2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[(2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*((-2435 + Sqrt[323])/101 + t))/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26243: SimplifyCount[(2435 - Sqrt[323])/101] + SimplifyCount[Plus] + SimplifyCount[(-9*(-9 + 10*Sqrt[323])*((-2435 + Sqrt[323])/101 + t))/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[(2435 - Sqrt[323])/101] + SimplifyCount[Plus] + SimplifyCount[(-9*(-9 + 10*Sqrt[323])*((-2435 + Sqrt[323])/101 + t))/404]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.009178}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26241: ("218827"*"323"^(Rational["1", "2"]) + "757435" + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*minus["909"])*Rational["1", "40804"]

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[25 + ((323 + 90*Sqrt[323])*t)/404,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[25 + ((323 + 90*Sqrt[323])*((-2435 + Sqrt[323])/101 + t))/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26267: SimplifyCount[25] + SimplifyCount[Plus] + SimplifyCount[((323 + 90*Sqrt[323])*((-2435 + Sqrt[323])/101 + t))/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[25] + SimplifyCount[Plus] + SimplifyCount[((323 + 90*Sqrt[323])*((-2435 + Sqrt[323])/101 + t))/404]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.010613}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26265: "25" + ("323" + "323"^(Rational["1", "2"])*"90")*("323"^(Rational["1", "2"]) + "101"*t + minus["2435"])*Rational["1", "40804"]

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[(9*(90 + Sqrt[323]))/404,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[(9*(90 + Sqrt[323]))/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26291: SimplifyCount[9/404] + SimplifyCount[90 + Sqrt[323]] + SimplifyCount[Times]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[9/404] + SimplifyCount[90 + Sqrt[323]] + SimplifyCount[Times]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000051}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26289: ("323"^(Rational["1", "2"]) + "90")*Rational["9", "404"]

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[(3230 - 9*Sqrt[323])/404,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[(3230 - 9*Sqrt[323])/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26303: SimplifyCount[1/404] + SimplifyCount[3230 - 9*Sqrt[323]] + SimplifyCount[Times]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[1/404] + SimplifyCount[3230 - 9*Sqrt[323]] + SimplifyCount[Times]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000049}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26301: ("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational["1", "404"]

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[(-9*(-9 + 10*Sqrt[323]))/404,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[(-9*(-9 + 10*Sqrt[323]))/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26317: SimplifyCount[-9/404] + SimplifyCount[-9 + 10*Sqrt[323]] + SimplifyCount[Times]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[-9/404] + SimplifyCount[-9 + 10*Sqrt[323]] + SimplifyCount[Times]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.002528}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26315: ("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"]

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[(323 + 90*Sqrt[323])/404,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[(323 + 90*Sqrt[323])/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26331: SimplifyCount[1/404] + SimplifyCount[323 + 90*Sqrt[323]] + SimplifyCount[Times]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[1/404] + SimplifyCount[323 + 90*Sqrt[323]] + SimplifyCount[Times]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000049}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26329: ("323" + "323"^(Rational["1", "2"])*"90")*Rational["1", "404"]

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26345: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26343: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26351: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00004}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26349: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26357: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000038}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26355: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26363: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000038}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26361: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[10,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26369: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000048}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26367: "10"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[15,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26375: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000044}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26373: "15"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[20,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26381: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000043}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26379: "20"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[30,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26387: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000044}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26385: "30"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[35,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26393: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000047}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26391: "35"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[40,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26399: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26397: "40"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[45,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26405: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26403: "45"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[50,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26411: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000044}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26409: "50"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[10,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26417: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000047}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26415: "10"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[15,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26423: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26421: "15"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[20,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26429: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26427: "20"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[30,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26435: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000044}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26433: "30"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[35,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26441: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000041}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26439: "35"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[40,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26447: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000041}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26445: "40"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[45,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26453: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000043}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26451: "45"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[50,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26459: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000044}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26457: "50"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26465: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26463: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26471: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000041}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26469: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26477: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000046}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26475: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26483: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000044}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26481: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26489: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26487: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26495: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26493: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26501: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000044}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26499: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26507: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26505: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26513: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000041}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26511: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26519: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26517: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26525: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000045}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26523: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26531: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26529: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26537: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26535: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26543: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000044}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26541: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26549: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26547: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26555: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000041}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26553: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26561: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000041}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26559: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26567: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000044}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26565: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26573: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000041}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26571: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26579: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26577: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26585: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000045}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26583: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26591: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000041}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26589: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26597: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000041}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26595: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26603: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26601: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26609: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000044}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26607: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26615: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000041}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26613: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26621: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26619: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26627: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000045}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26625: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26633: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26631: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26639: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000041}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26637: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26645: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000042}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26643: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[0,
	(-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26651: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000044}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26649: "0"

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
productWithGlobalParameterConstraint[True,
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26655: {True}

@Backend.cpp 427 function: call   productWithGlobalParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[-10 + 10*t == -10 && 0 < t,
	207/10 + (-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[-10 + 10*(-207/10 + (2435 - Sqrt[323])/101 + t) == -10 && 0 < -207/10 + (2435 - Sqrt[323])/101 + t]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26660: SimplifyCount[And] + SimplifyCount[-10 + 10*(-207/10 + (2435 - Sqrt[323])/101 + t) == -10] + SimplifyCount[0 < -207/10 + (2435 - Sqrt[323])/101 + t]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[-10 + 10*(-207/10 + (2435 - Sqrt[323])/101 + t) == -10] + SimplifyCount[0 < -207/10 + (2435 - Sqrt[323])/101 + t]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.023576}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26658: False

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[-8 + 10*t == 100 && 0 < t,
	207/10 + (-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[-8 + 10*(-207/10 + (2435 - Sqrt[323])/101 + t) == 100 && 0 < -207/10 + (2435 - Sqrt[323])/101 + t]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26670: SimplifyCount[And] + SimplifyCount[-8 + 10*(-207/10 + (2435 - Sqrt[323])/101 + t) == 100] + SimplifyCount[0 < -207/10 + (2435 - Sqrt[323])/101 + t]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[And] + SimplifyCount[-8 + 10*(-207/10 + (2435 - Sqrt[323])/101 + t) == 100] + SimplifyCount[0 < -207/10 + (2435 - Sqrt[323])/101 + t]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.020231}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26668: "202"*t == "1493" + "2"*"323"^(Rational["1", "2"])

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
productWithGlobalParameterConstraint[True,
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26688: {True}

@Backend.cpp 427 function: call   productWithGlobalParameterConstraint
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[False,
	207/10 + (-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[False]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26693: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000047}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26691: False

@Backend.cpp 427 function: call   exprTimeShift
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
exprTimeShift[10*t == 783,
	207/10 + (-2435 + Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10*(-207/10 + (2435 - Sqrt[323])/101 + t) == 783]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26699: SimplifyCount[783] + SimplifyCount[Equal] + SimplifyCount[10*(-207/10 + (2435 - Sqrt[323])/101 + t)]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[783] + SimplifyCount[Equal] + SimplifyCount[10*(-207/10 + (2435 - Sqrt[323])/101 + t)]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.008314}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26697: "101"*t == "323"^(Rational["1", "2"]) + "7564"

@Backend.cpp 427 function: call   exprTimeShift
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x1-)^2+(y0--y1-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux1[t])^2 + (uy0[t] - uy1[t])^2 == 4,
	{ux0[t] == (-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404, ux1[t] == 10, uy0[t] == (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404, uy1[t] == 10},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26711: (minus["10"] + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"])^"2" + (minus["10"] + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-10 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-10 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$26762: (-10 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-10 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26761: (minus["10"] + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"])^"2" + (minus["10"] + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-10 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-10 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$26816: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$26816: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26815: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x2-)^2+(y0--y2-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux2[t])^2 + (uy0[t] - uy2[t])^2 == 4,
	{ux0[t] == (-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404, ux2[t] == 15, uy0[t] == (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404, uy2[t] == 15},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26832: (minus["15"] + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"])^"2" + (minus["15"] + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-15 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-15 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$26883: (-15 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-15 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26882: (minus["15"] + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"])^"2" + (minus["15"] + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-15 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-15 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$26937: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$26937: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26936: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x3-)^2+(y0--y3-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux3[t])^2 + (uy0[t] - uy3[t])^2 == 4,
	{ux0[t] == (-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404, ux3[t] == 20, uy0[t] == (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404, uy3[t] == 20},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$26953: (minus["20"] + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"])^"2" + (minus["20"] + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-20 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-20 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$27004: (-20 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-20 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27003: (minus["20"] + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"])^"2" + (minus["20"] + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-20 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-20 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$27058: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$27058: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27057: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x4-)^2+(y0--y4-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux4[t])^2 + (uy0[t] - uy4[t])^2 == 4,
	{ux0[t] == (-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404, ux4[t] == 25 + ((3230 - 9*Sqrt[323])*t)/404, uy0[t] == (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404, uy4[t] == 25 + ((323 + 90*Sqrt[323])*t)/404},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27074: (minus["25"] + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational[minus["1"], "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"])^"2" + (minus["25"] + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational[minus["1"], "404"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-25 - (2*(-1267 + 5*Sqrt[323]))/101 - ((3230 - 9*Sqrt[323])*t)/404 + (9*(90 + Sqrt[323])*t)/404)^2 + (-25 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404 - ((323 + 90*Sqrt[323])*t)/404)^2 == 4,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$27145: (-25 - (2*(-1267 + 5*Sqrt[323]))/101 - ((3230 - 9*Sqrt[323])*t)/404 + (9*(90 + Sqrt[323])*t)/404)^2 + (-25 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404 - ((323 + 90*Sqrt[323])*t)/404)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27144: (minus["25"] + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational[minus["1"], "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"])^"2" + (minus["25"] + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational[minus["1"], "404"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-25 - (2*(-1267 + 5*Sqrt[323]))/101 - ((3230 - 9*Sqrt[323])*t)/404 + (9*(90 + Sqrt[323])*t)/404)^2 + (-25 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404 - ((323 + 90*Sqrt[323])*t)/404)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$27219: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$27219: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27218: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x5-)^2+(y0--y5-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux5[t])^2 + (uy0[t] - uy5[t])^2 == 4,
	{ux0[t] == (-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404, ux5[t] == 30, uy0[t] == (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404, uy5[t] == 30},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27235: (minus["30"] + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"])^"2" + (minus["30"] + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-30 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-30 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$27286: (-30 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-30 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27285: (minus["30"] + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"])^"2" + (minus["30"] + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-30 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-30 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$27340: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$27340: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27339: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x6-)^2+(y0--y6-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux6[t])^2 + (uy0[t] - uy6[t])^2 == 4,
	{ux0[t] == (-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404, ux6[t] == 35, uy0[t] == (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404, uy6[t] == 35},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27356: (minus["35"] + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"])^"2" + (minus["35"] + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-35 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-35 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$27407: (-35 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-35 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27406: (minus["35"] + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"])^"2" + (minus["35"] + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-35 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-35 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$27461: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$27461: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27460: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x7-)^2+(y0--y7-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux7[t])^2 + (uy0[t] - uy7[t])^2 == 4,
	{ux0[t] == (-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404, ux7[t] == 40, uy0[t] == (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404, uy7[t] == 40},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27477: (minus["40"] + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"])^"2" + (minus["40"] + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-40 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-40 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$27528: (-40 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-40 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27527: (minus["40"] + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"])^"2" + (minus["40"] + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-40 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-40 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$27582: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$27582: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27581: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x8-)^2+(y0--y8-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux8[t])^2 + (uy0[t] - uy8[t])^2 == 4,
	{ux0[t] == (-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404, ux8[t] == 45, uy0[t] == (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404, uy8[t] == 45},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27598: (minus["45"] + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"])^"2" + (minus["45"] + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-45 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-45 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$27649: (-45 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-45 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27648: (minus["45"] + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"])^"2" + (minus["45"] + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-45 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-45 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$27703: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$27703: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27702: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--x9-)^2+(y0--y9-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux0[t] - ux9[t])^2 + (uy0[t] - uy9[t])^2 == 4,
	{ux0[t] == (-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404, ux9[t] == 50, uy0[t] == (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404, uy9[t] == 50},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27719: (minus["50"] + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"])^"2" + (minus["50"] + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-50 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-50 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$27770: (-50 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-50 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27769: (minus["50"] + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"])^"2" + (minus["50"] + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-50 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404)^2 + (-50 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$27824: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$27824: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27823: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x1--x4-)^2+(y1--y4-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux1[t] - ux4[t])^2 + (uy1[t] - uy4[t])^2 == 4,
	{ux1[t] == 10, ux4[t] == 25 + ((3230 - 9*Sqrt[323])*t)/404, uy1[t] == 10, uy4[t] == 25 + ((323 + 90*Sqrt[323])*t)/404},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27840: (minus["15"] + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational[minus["1"], "404"])^"2" + (minus["15"] + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational[minus["1"], "404"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-15 - ((3230 - 9*Sqrt[323])*t)/404)^2 + (-15 - ((323 + 90*Sqrt[323])*t)/404)^2 == 4,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$27875: (-15 - ((3230 - 9*Sqrt[323])*t)/404)^2 + (-15 - ((323 + 90*Sqrt[323])*t)/404)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27874: (minus["15"] + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational[minus["1"], "404"])^"2" + (minus["15"] + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational[minus["1"], "404"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-15 - ((3230 - 9*Sqrt[323])*t)/404)^2 + (-15 - ((323 + 90*Sqrt[323])*t)/404)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$27913: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$27913: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27912: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x2--x4-)^2+(y2--y4-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux2[t] - ux4[t])^2 + (uy2[t] - uy4[t])^2 == 4,
	{ux2[t] == 15, ux4[t] == 25 + ((3230 - 9*Sqrt[323])*t)/404, uy2[t] == 15, uy4[t] == 25 + ((323 + 90*Sqrt[323])*t)/404},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27929: (minus["10"] + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational[minus["1"], "404"])^"2" + (minus["10"] + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational[minus["1"], "404"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-10 - ((3230 - 9*Sqrt[323])*t)/404)^2 + (-10 - ((323 + 90*Sqrt[323])*t)/404)^2 == 4,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$27964: (-10 - ((3230 - 9*Sqrt[323])*t)/404)^2 + (-10 - ((323 + 90*Sqrt[323])*t)/404)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$27963: (minus["10"] + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational[minus["1"], "404"])^"2" + (minus["10"] + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational[minus["1"], "404"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-10 - ((3230 - 9*Sqrt[323])*t)/404)^2 + (-10 - ((323 + 90*Sqrt[323])*t)/404)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$28002: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$28002: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28001: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x3--x4-)^2+(y3--y4-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux3[t] - ux4[t])^2 + (uy3[t] - uy4[t])^2 == 4,
	{ux3[t] == 20, ux4[t] == 25 + ((3230 - 9*Sqrt[323])*t)/404, uy3[t] == 20, uy4[t] == 25 + ((323 + 90*Sqrt[323])*t)/404},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28018: (minus["5"] + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational[minus["1"], "404"])^"2" + (minus["5"] + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational[minus["1"], "404"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-5 - ((3230 - 9*Sqrt[323])*t)/404)^2 + (-5 - ((323 + 90*Sqrt[323])*t)/404)^2 == 4,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$28053: (-5 - ((3230 - 9*Sqrt[323])*t)/404)^2 + (-5 - ((323 + 90*Sqrt[323])*t)/404)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28052: (minus["5"] + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational[minus["1"], "404"])^"2" + (minus["5"] + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational[minus["1"], "404"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-5 - ((3230 - 9*Sqrt[323])*t)/404)^2 + (-5 - ((323 + 90*Sqrt[323])*t)/404)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$28091: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$28091: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28090: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x4--x5-)^2+(y4--y5-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux4[t] - ux5[t])^2 + (uy4[t] - uy5[t])^2 == 4,
	{ux4[t] == 25 + ((3230 - 9*Sqrt[323])*t)/404, ux5[t] == 30, uy4[t] == 25 + ((323 + 90*Sqrt[323])*t)/404, uy5[t] == 30},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28107: (minus["5"] + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational["1", "404"])^"2" + (minus["5"] + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational["1", "404"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-5 + ((3230 - 9*Sqrt[323])*t)/404)^2 + (-5 + ((323 + 90*Sqrt[323])*t)/404)^2 == 4,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$28142: (-5 + ((3230 - 9*Sqrt[323])*t)/404)^2 + (-5 + ((323 + 90*Sqrt[323])*t)/404)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28141: (minus["5"] + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational["1", "404"])^"2" + (minus["5"] + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational["1", "404"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-5 + ((3230 - 9*Sqrt[323])*t)/404)^2 + (-5 + ((323 + 90*Sqrt[323])*t)/404)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$28180: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$28180: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101, {t -> (5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28179: {{("3553" + "323"^(Rational["1", "2"])*"81")*Rational["5", "32623"] + (("22275"*"323"^(Rational["1", "2"]) + minus["367942"])*Rational["2", "323"])^(Rational["1", "2"])*Rational[minus["1"], "101"], 1, {True}, -1}}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x4--x6-)^2+(y4--y6-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux4[t] - ux6[t])^2 + (uy4[t] - uy6[t])^2 == 4,
	{ux4[t] == 25 + ((3230 - 9*Sqrt[323])*t)/404, ux6[t] == 35, uy4[t] == 25 + ((323 + 90*Sqrt[323])*t)/404, uy6[t] == 35},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28226: (minus["10"] + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational["1", "404"])^"2" + (minus["10"] + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational["1", "404"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-10 + ((3230 - 9*Sqrt[323])*t)/404)^2 + (-10 + ((323 + 90*Sqrt[323])*t)/404)^2 == 4,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$28261: (-10 + ((3230 - 9*Sqrt[323])*t)/404)^2 + (-10 + ((323 + 90*Sqrt[323])*t)/404)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28260: (minus["10"] + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational["1", "404"])^"2" + (minus["10"] + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational["1", "404"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-10 + ((3230 - 9*Sqrt[323])*t)/404)^2 + (-10 + ((323 + 90*Sqrt[323])*t)/404)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$28299: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$28299: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28298: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x4--x7-)^2+(y4--y7-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux4[t] - ux7[t])^2 + (uy4[t] - uy7[t])^2 == 4,
	{ux4[t] == 25 + ((3230 - 9*Sqrt[323])*t)/404, ux7[t] == 40, uy4[t] == 25 + ((323 + 90*Sqrt[323])*t)/404, uy7[t] == 40},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28315: (minus["15"] + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational["1", "404"])^"2" + (minus["15"] + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational["1", "404"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-15 + ((3230 - 9*Sqrt[323])*t)/404)^2 + (-15 + ((323 + 90*Sqrt[323])*t)/404)^2 == 4,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$28350: (-15 + ((3230 - 9*Sqrt[323])*t)/404)^2 + (-15 + ((323 + 90*Sqrt[323])*t)/404)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28349: (minus["15"] + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational["1", "404"])^"2" + (minus["15"] + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational["1", "404"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-15 + ((3230 - 9*Sqrt[323])*t)/404)^2 + (-15 + ((323 + 90*Sqrt[323])*t)/404)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$28388: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$28388: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28387: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x4--x8-)^2+(y4--y8-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux4[t] - ux8[t])^2 + (uy4[t] - uy8[t])^2 == 4,
	{ux4[t] == 25 + ((3230 - 9*Sqrt[323])*t)/404, ux8[t] == 45, uy4[t] == 25 + ((323 + 90*Sqrt[323])*t)/404, uy8[t] == 45},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28404: (minus["20"] + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational["1", "404"])^"2" + (minus["20"] + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational["1", "404"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-20 + ((3230 - 9*Sqrt[323])*t)/404)^2 + (-20 + ((323 + 90*Sqrt[323])*t)/404)^2 == 4,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$28439: (-20 + ((3230 - 9*Sqrt[323])*t)/404)^2 + (-20 + ((323 + 90*Sqrt[323])*t)/404)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28438: (minus["20"] + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational["1", "404"])^"2" + (minus["20"] + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational["1", "404"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-20 + ((3230 - 9*Sqrt[323])*t)/404)^2 + (-20 + ((323 + 90*Sqrt[323])*t)/404)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$28477: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$28477: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28476: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x4--x9-)^2+(y4--y9-)^2=4
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[(ux4[t] - ux9[t])^2 + (uy4[t] - uy9[t])^2 == 4,
	{ux4[t] == 25 + ((3230 - 9*Sqrt[323])*t)/404, ux9[t] == 50, uy4[t] == 25 + ((323 + 90*Sqrt[323])*t)/404, uy9[t] == 50},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28493: (minus["25"] + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational["1", "404"])^"2" + (minus["25"] + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational["1", "404"])^"2" == "4"

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[(-25 + ((3230 - 9*Sqrt[323])*t)/404)^2 + (-25 + ((323 + 90*Sqrt[323])*t)/404)^2 == 4,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$28528: (-25 + ((3230 - 9*Sqrt[323])*t)/404)^2 + (-25 + ((323 + 90*Sqrt[323])*t)/404)^2 == 4 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28527: (minus["25"] + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational["1", "404"])^"2" + (minus["25"] + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational["1", "404"])^"2" == "4" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-25 + ((3230 - 9*Sqrt[323])*t)/404)^2 + (-25 + ((323 + 90*Sqrt[323])*t)/404)^2 == 4 && 0 < t,
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$28566: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$28566: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {Infinity, {t -> Indeterminate}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28565: {}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x0--1=-10|10*10=x0-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + ux0[t] == -10,
	{ux0[t] == (-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28582: minus["1"] + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"] == minus["10"]

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[-1 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404 == -10,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$28607: -1 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404 == -10 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28606: minus["1"] + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"] == minus["10"] && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + ux0[t],
	{ux0[t] == (-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28634: "100" == "1" + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"]

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[100 == 1 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$28659: 100 == 1 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28658: "1" + ("323"^(Rational["1", "2"]) + "90")*t*Rational["9", "404"] + ("323"^(Rational["1", "2"])*"5" + minus["1267"])*Rational[minus["2"], "101"] == "100" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-1 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404 == -10 && 0 < t) || (1 - (2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404 == 100 && 0 < t),
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$28687: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$28687: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {(29860 + 40*Sqrt[323])/(810 + 9*Sqrt[323]), {t -> (29860 + 40*Sqrt[323])/(810 + 9*Sqrt[323])}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28686: {{("29860" + "323"^(Rational["1", "2"])*"40")*("810" + "323"^(Rational["1", "2"])*"9")^minus["1"], 1, {True}, -1}}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (x4--1=-10|10*10=x4-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + ux4[t] == -10,
	{ux4[t] == 25 + ((3230 - 9*Sqrt[323])*t)/404},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28727: "24" + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational["1", "404"] == minus["10"]

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[24 + ((3230 - 9*Sqrt[323])*t)/404 == -10,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$28745: 24 + ((3230 - 9*Sqrt[323])*t)/404 == -10 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28744: "24" + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational["1", "404"] == minus["10"] && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + ux4[t],
	{ux4[t] == 25 + ((3230 - 9*Sqrt[323])*t)/404},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28765: "100" == "26" + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational["1", "404"]

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[100 == 26 + ((3230 - 9*Sqrt[323])*t)/404,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$28783: 100 == 26 + ((3230 - 9*Sqrt[323])*t)/404 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28782: "26" + t*("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational["1", "404"] == "100" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(24 + ((3230 - 9*Sqrt[323])*t)/404 == -10 && 0 < t) || (26 + ((3230 - 9*Sqrt[323])*t)/404 == 100 && 0 < t),
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$28804: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$28804: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {-29896/(-3230 + 9*Sqrt[323]), {t -> -29896/(-3230 + 9*Sqrt[323])}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28803: {{minus["29896"]*("323"^(Rational["1", "2"])*"9" + minus["3230"])^minus["1"], 1, {True}, -1}}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (y0--1=-10|10*10=y0-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + uy0[t] == -10,
	{uy0[t] == (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28838: minus["1"] + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"] == minus["10"]

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[-1 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404 == -10,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$28865: -1 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404 == -10 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28864: minus["1"] + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"] == minus["10"] && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + uy0[t],
	{uy0[t] == (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28894: "100" == "1" + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"]

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[100 == 1 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$28921: 100 == 1 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28920: "1" + ("2435" + "323"^(Rational["1", "2"])*minus["1"])*Rational["1", "101"] + t*("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"] == "100" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(-1 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404 == -10 && 0 < t) || (1 + (2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404 == 100 && 0 < t),
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$28951: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$28951: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {(13376 - 4*Sqrt[323])/(-81 + 90*Sqrt[323]), {t -> (13376 - 4*Sqrt[323])/(-81 + 90*Sqrt[323])}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28950: {{("13376" + "323"^(Rational["1", "2"])*minus["4"])*("323"^(Rational["1", "2"])*"90" + minus["81"])^minus["1"], 1, {True}, -1}}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 881 function: find_min_time   get_infix_string(guard): (y4--1=-10|10*10=y4-+1)
@PhaseSimulator.cpp 887 function: find_min_time   phase->discrete_guards.size(): 0
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[-1 + uy4[t] == -10,
	{uy4[t] == 25 + ((323 + 90*Sqrt[323])*t)/404},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$28991: "24" + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational["1", "404"] == minus["10"]

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[24 + ((323 + 90*Sqrt[323])*t)/404 == -10,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$29009: 24 + ((323 + 90*Sqrt[323])*t)/404 == -10 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29008: "24" + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational["1", "404"] == minus["10"] && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
substituteVM[100 == 1 + uy4[t],
	{uy4[t] == 25 + ((323 + 90*Sqrt[323])*t)/404},
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29029: "100" == "26" + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational["1", "404"]

@Backend.cpp 427 function: call   substituteVM
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
calculateConsistentTime[100 == 26 + ((323 + 90*Sqrt[323])*t)/404,
	0,
	True,
	(2435 - Sqrt[323])/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: resultCons$29047: 100 == 26 + ((323 + 90*Sqrt[323])*t)/404 && 0 < t

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29046: "26" + ("323" + "323"^(Rational["1", "2"])*"90")*t*Rational["1", "404"] == "100" && "0" < t

@Backend.cpp 427 function: call   calculateConsistentTime
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
minimizeTime[(24 + ((323 + 90*Sqrt[323])*t)/404 == -10 && 0 < t) || (26 + ((323 + 90*Sqrt[323])*t)/404 == 100 && 0 < t),
	True,
	0,
	Infinity]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"parsInCons", {}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: necessaryPCons$29068: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: restPCons$29068: True

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"minT after Minimize:", {29896/(323 + 90*Sqrt[323]), {t -> 29896/(323 + 90*Sqrt[323])}}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29067: {{"29896"*("323" + "323"^(Rational["1", "2"])*"90")^minus["1"], 1, {True}, -1}}

@Backend.cpp 427 function: call   minimizeTime
@PhaseSimulator.cpp 1717 function: make_next_todo   candidate.time: (3553+323^(1/2)*81)*5/32623+((22275*323^(1/2)+(-367942))*2/323)^(1/2)*(-1)/101
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
compareMinTime[(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101,
	(29860 + 40*Sqrt[323])/(810 + 9*Sqrt[323]),
	True,
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29102: {{True}, {False}, {False}}

@Backend.cpp 427 function: call   compareMinTime
@PhaseSimulator.cpp 1717 function: make_next_todo   candidate.time: (29860+323^(1/2)*40)*(810+323^(1/2)*9)^(-1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
compareMinTime[(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101,
	-29896/(-3230 + 9*Sqrt[323]),
	True,
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29107: {{True}, {False}, {False}}

@Backend.cpp 427 function: call   compareMinTime
@PhaseSimulator.cpp 1717 function: make_next_todo   candidate.time: -29896*(323^(1/2)*9+(-3230))^(-1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
compareMinTime[(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101,
	(13376 - 4*Sqrt[323])/(-81 + 90*Sqrt[323]),
	True,
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29112: {{True}, {False}, {False}}

@Backend.cpp 427 function: call   compareMinTime
@PhaseSimulator.cpp 1717 function: make_next_todo   candidate.time: (13376+323^(1/2)*(-4))*(323^(1/2)*90+(-81))^(-1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
compareMinTime[(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101,
	29896/(323 + 90*Sqrt[323]),
	True,
	True]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29117: {{True}, {False}, {False}}

@Backend.cpp 427 function: call   compareMinTime
@PhaseSimulator.cpp 1717 function: make_next_todo   candidate.time: 29896*(323+323^(1/2)*90)^(-1)
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
simplify[(2435 - Sqrt[323])/101 + (5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[(2435 - Sqrt[323])/101 + (5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29124: SimplifyCount[(2435 - Sqrt[323])/101] + SimplifyCount[(5*(3553 + 81*Sqrt[323]))/32623] + SimplifyCount[-Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101] + SimplifyCount[Plus]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[(2435 - Sqrt[323])/101] + SimplifyCount[(5*(3553 + 81*Sqrt[323]))/32623] + SimplifyCount[-Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101] + SimplifyCount[Plus]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplify", 0.023045}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29122: ("804270" + "323"^(Rational["1", "2"])*"82" + minus["1"]*("646"*("22275"*"323"^(Rational["1", "2"]) + minus["367942"]))^(Rational["1", "2"]))*Rational["1", "32623"]

@Backend.cpp 427 function: call   simplify
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[(-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*t)/404,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[(-2*(-1267 + 5*Sqrt[323]))/101 + (9*(90 + Sqrt[323])*((5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101))/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29151: SimplifyCount[(-2*(-1267 + 5*Sqrt[323]))/101] + SimplifyCount[(9*(90 + Sqrt[323])*((5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101))/404] + SimplifyCount[Plus]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[(-2*(-1267 + 5*Sqrt[323]))/101] + SimplifyCount[(9*(90 + Sqrt[323])*((5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101))/404] + SimplifyCount[Plus]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.103226}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29149: Rational["1", "404"]*("10136" + "323"^(Rational["1", "2"])*minus["40"] + ("323"^(Rational["1", "2"]) + "90")*(("646"*("22275"*"323"^(Rational["1", "2"]) + minus["367942"]))^(Rational["1", "2"]) + ("3553" + "323"^(Rational["1", "2"])*"81")*minus["5"])*Rational[minus["9"], "32623"])

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[10,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29193: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000048}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29191: "10"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[15,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29199: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29197: "15"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[20,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29205: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29203: "20"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[25 + ((3230 - 9*Sqrt[323])*t)/404,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[25 + ((3230 - 9*Sqrt[323])*((5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101))/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29211: SimplifyCount[25] + SimplifyCount[((3230 - 9*Sqrt[323])*((5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101))/404] + SimplifyCount[Plus]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[25] + SimplifyCount[((3230 - 9*Sqrt[323])*((5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101))/404] + SimplifyCount[Plus]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.036543}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29209: "25" + ("323"^(Rational["1", "2"])*"9" + minus["3230"])*(("646"*("22275"*"323"^(Rational["1", "2"]) + minus["367942"]))^(Rational["1", "2"]) + ("3553" + "323"^(Rational["1", "2"])*"81")*minus["5"])*Rational["1", "13179692"]

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[30,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29248: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000038}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29246: "30"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[35,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29254: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29252: "35"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[40,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29260: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29258: "40"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[45,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29266: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29264: "45"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[50,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29272: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000038}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29270: "50"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[(2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*t)/404,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[(2435 - Sqrt[323])/101 - (9*(-9 + 10*Sqrt[323])*((5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101))/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29278: SimplifyCount[(2435 - Sqrt[323])/101] + SimplifyCount[(-9*(-9 + 10*Sqrt[323])*((5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101))/404] + SimplifyCount[Plus]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[(2435 - Sqrt[323])/101] + SimplifyCount[(-9*(-9 + 10*Sqrt[323])*((5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101))/404] + SimplifyCount[Plus]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.026774}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29276: ("307413635" + "323"^(Rational["1", "2"])*minus["1696537"] + "29070"*("323"^(Rational["1", "2"])*"44550" + minus["735884"])^(Rational["1", "2"]) + ("646"*("22275"*"323"^(Rational["1", "2"]) + minus["367942"]))^(Rational["1", "2"])*minus["81"])*Rational["1", "13179692"]

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[10,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[10]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29316: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000037}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29314: "10"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[15,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[15]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29322: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29320: "15"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[20,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[20]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29328: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29326: "20"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[25 + ((323 + 90*Sqrt[323])*t)/404,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[25 + ((323 + 90*Sqrt[323])*((5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101))/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29334: SimplifyCount[25] + SimplifyCount[((323 + 90*Sqrt[323])*((5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101))/404] + SimplifyCount[Plus]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[25] + SimplifyCount[((323 + 90*Sqrt[323])*((5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101))/404] + SimplifyCount[Plus]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.027245}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29332: "25" + ("323" + "323"^(Rational["1", "2"])*"90")*(("646"*("22275"*"323"^(Rational["1", "2"]) + minus["367942"]))^(Rational["1", "2"]) + ("3553" + "323"^(Rational["1", "2"])*"81")*minus["5"])*Rational[minus["1"], "13179692"]

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[30,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[30]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29371: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000037}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29369: "30"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[35,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[35]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29377: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29375: "35"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[40,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[40]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29383: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29381: "40"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[45,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[45]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29389: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29387: "45"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[50,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[50]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29395: 2

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 2}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29393: "50"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[(9*(90 + Sqrt[323]))/404,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[(9*(90 + Sqrt[323]))/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29401: SimplifyCount[9/404] + SimplifyCount[90 + Sqrt[323]] + SimplifyCount[Times]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[9/404] + SimplifyCount[90 + Sqrt[323]] + SimplifyCount[Times]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.002012}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29399: ("323"^(Rational["1", "2"]) + "90")*Rational["9", "404"]

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29413: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29411: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29419: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29417: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29425: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29423: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[(3230 - 9*Sqrt[323])/404,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[(3230 - 9*Sqrt[323])/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29431: SimplifyCount[1/404] + SimplifyCount[3230 - 9*Sqrt[323]] + SimplifyCount[Times]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[1/404] + SimplifyCount[3230 - 9*Sqrt[323]] + SimplifyCount[Times]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000041}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29429: ("3230" + "323"^(Rational["1", "2"])*minus["9"])*Rational["1", "404"]

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29445: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29443: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29451: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000037}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29449: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29457: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29455: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29463: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29461: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29469: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29467: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[(-9*(-9 + 10*Sqrt[323]))/404,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[(-9*(-9 + 10*Sqrt[323]))/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29475: SimplifyCount[-9/404] + SimplifyCount[-9 + 10*Sqrt[323]] + SimplifyCount[Times]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[-9/404] + SimplifyCount[-9 + 10*Sqrt[323]] + SimplifyCount[Times]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.002386}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29473: ("10"*"323"^(Rational["1", "2"]) + minus["9"])*Rational[minus["9"], "404"]

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29489: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29487: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29495: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29493: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29501: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29499: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[(323 + 90*Sqrt[323])/404,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[(323 + 90*Sqrt[323])/404]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29507: SimplifyCount[1/404] + SimplifyCount[323 + 90*Sqrt[323]] + SimplifyCount[Times]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, SimplifyCount[1/404] + SimplifyCount[323 + 90*Sqrt[323]] + SimplifyCount[Times]}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000038}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29505: ("323" + "323"^(Rational["1", "2"])*"90")*Rational["1", "404"]

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29521: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29519: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29527: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29525: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29533: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29531: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29539: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000036}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29537: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29545: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.00004}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29543: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29551: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000037}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29549: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29557: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29555: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29563: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29561: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29569: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29567: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29575: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29573: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29581: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29579: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29587: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29585: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29593: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29591: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29599: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000031}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29597: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29605: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000033}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29603: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29611: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000035}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29609: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29617: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000037}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29615: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29623: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29621: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29629: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29627: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29635: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29633: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29641: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29639: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29647: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000034}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29645: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29653: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000038}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29651: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29659: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29657: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@mathematica/MathematicaLink.cpp 135 function: receive_to_return_packet   input: 
applyTime2Expr[0,
	(5*(3553 + 81*Sqrt[323]))/32623 - Sqrt[(2*(-367942 + 22275*Sqrt[323]))/323]/101]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: simplifyCount[0]

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29665: 1

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"simplifyCount", {1, 1}}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: {"timeConstrainedSimplify", 0.000032}

@mathematica/MathematicaLink.cpp 137 function: receive_to_return_packet   trace: publicRet$29663: "0"

@Backend.cpp 427 function: call   applyTime2Expr
@Simulator.cpp 185 function: process_one_todo   
--- Result Phase ---
%% PhaseType: 2
%% id: 8
%% step: 7
%% parent_id:7
%% unadopted modules: {}
%% positive_asks
%% negative_asks
(x0--x4-)^2+(y0--y4-)^2=4=>x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-))&1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-)&x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)&x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)
%% current_time: (2435+323^(1/2)*(-1))*1/101
%% end_time: (804270+323^(1/2)*82+(-1)*(646*(22275*323^(1/2)+(-367942)))^(1/2))*1/32623
--- variable map ---
x0 <=> ((323^(1/2)+90)*909*t+323^(1/2)*(-25145)+(-945707))*1/40804
x1 <=> 10
x2 <=> 15
x3 <=> 20
x4 <=> 25+(323^(1/2)+101*t+(-2435))*(323^(1/2)*9+(-3230))*(-1)/40804
x5 <=> 30
x6 <=> 35
x7 <=> 40
x8 <=> 45
x9 <=> 50
y0 <=> (218827*323^(1/2)+757435+t*(10*323^(1/2)+(-9))*(-909))*1/40804
y1 <=> 10
y2 <=> 15
y3 <=> 20
y4 <=> 25+(323+323^(1/2)*90)*(323^(1/2)+101*t+(-2435))*1/40804
y5 <=> 30
y6 <=> 35
y7 <=> 40
y8 <=> 45
y9 <=> 50
x0' <=> (323^(1/2)+90)*9/404
x1' <=> 0
x2' <=> 0
x3' <=> 0
x4' <=> (3230+323^(1/2)*(-9))*1/404
x5' <=> 0
x6' <=> 0
x7' <=> 0
x8' <=> 0
x9' <=> 0
y0' <=> (10*323^(1/2)+(-9))*(-9)/404
y1' <=> 0
y2' <=> 0
y3' <=> 0
y4' <=> (323+323^(1/2)*90)*1/404
y5' <=> 0
y6' <=> 0
y7' <=> 0
y8' <=> 0
y9' <=> 0
x0'' <=> 0
x1'' <=> 0
x2'' <=> 0
x3'' <=> 0
x4'' <=> 0
x5'' <=> 0
x6'' <=> 0
x7'' <=> 0
x8'' <=> 0
x9'' <=> 0
y0'' <=> 0
y1'' <=> 0
y2'' <=> 0
y3'' <=> 0
y4'' <=> 0
y5'' <=> 0
y6'' <=> 0
y7'' <=> 0
y8'' <=> 0
y9'' <=> 0

--- parameter constraint ---
{}

@SequentialSimulator.cpp 50 function: dfs   *current: %% PhaseType: 2
%% id: 8
%% step: 7
%% parent_id:7
%% unadopted modules: {}
%% positive_asks
%% negative_asks
(x0--x4-)^2+(y0--y4-)^2=4=>x0'*(x0--x4-)+y0'*(y0--y4-)=1-*(x4'-*(x0--x4-)+y4'-*(y0--y4-))&1-*(x0'-*(x0--x4-)+y0'-*(y0--y4-))=x4'*(x0--x4-)+y4'*(y0--y4-)&x0'*(y0--y4-)-y0'*(x0--x4-)=x0'-*(y0--y4-)-y0'-*(x0--x4-)&x4'*(y0--y4-)-y4'*(x0--x4-)=x4'-*(y0--y4-)-y4'-*(x0--x4-)
%% current_time: (2435+323^(1/2)*(-1))*1/101
%% end_time: (804270+323^(1/2)*82+(-1)*(646*(22275*323^(1/2)+(-367942)))^(1/2))*1/32623
--- variable map ---
x0 <=> ((323^(1/2)+90)*909*t+323^(1/2)*(-25145)+(-945707))*1/40804
x1 <=> 10
x2 <=> 15
x3 <=> 20
x4 <=> 25+(323^(1/2)+101*t+(-2435))*(323^(1/2)*9+(-3230))*(-1)/40804
x5 <=> 30
x6 <=> 35
x7 <=> 40
x8 <=> 45
x9 <=> 50
y0 <=> (218827*323^(1/2)+757435+t*(10*323^(1/2)+(-9))*(-909))*1/40804
y1 <=> 10
y2 <=> 15
y3 <=> 20
y4 <=> 25+(323+323^(1/2)*90)*(323^(1/2)+101*t+(-2435))*1/40804
y5 <=> 30
y6 <=> 35
y7 <=> 40
y8 <=> 45
y9 <=> 50
x0' <=> (323^(1/2)+90)*9/404
x1' <=> 0
x2' <=> 0
x3' <=> 0
x4' <=> (3230+323^(1/2)*(-9))*1/404
x5' <=> 0
x6' <=> 0
x7' <=> 0
x8' <=> 0
x9' <=> 0
y0' <=> (10*323^(1/2)+(-9))*(-9)/404
y1' <=> 0
y2' <=> 0
y3' <=> 0
y4' <=> (323+323^(1/2)*90)*1/404
y5' <=> 0
y6' <=> 0
y7' <=> 0
y8' <=> 0
y9' <=> 0
x0'' <=> 0
x1'' <=> 0
x2'' <=> 0
x3'' <=> 0
x4'' <=> 0
x5'' <=> 0
x6'' <=> 0
x7'' <=> 0
x8'' <=> 0
x9'' <=> 0
y0'' <=> 0
y1'' <=> 0
y2'' <=> 0
y3'' <=> 0
y4'' <=> 0
y5'' <=> 0
y6'' <=> 0
y7'' <=> 0
y8'' <=> 0
y9'' <=> 0

--- parameter constraint ---
{}

@SequentialSimulator.cpp 50 function: dfs   *current: %% PhaseType: 1
%% id: 9
%% step: 8
%% parent_id:8
%% unadopted modules: {}
%% positive_asks
%% negative_asks
%% current_time: (804270+323^(1/2)*82+(-1)*(646*(22275*323^(1/2)+(-367942)))^(1/2))*1/32623
--- variable map ---

--- parameter constraint ---
{}

@SequentialSimulator.cpp 42 function: simulate   %% simulation ended
